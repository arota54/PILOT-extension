@relation comments
@attribute projectname string
@attribute package string
@attribute top_package string
@attribute comment string
@data
'Dubbo','Dubbo','Dubbo','//  IMPORTANT! For async scenario, we must remove context from current thread, so we always create a new RpcContext for the next invoke for the same thread. '
'Dubbo','Dubbo','Dubbo','//  TODO: 2017/8/30 to move somewhere else better '
'Dubbo','Dubbo','Dubbo','//  FIXME: now we need to check first, then load '
'Dubbo','Dubbo','Dubbo','//  TODO Context.SESSIONS is the best option here? (In jetty 9.x, it becomes ServletContextHandler.SESSIONS) '
'Dubbo','Dubbo','Dubbo','//  TODO move names to Constants '
'Dubbo','Dubbo','Dubbo','// ignore concurrent problem? '
'Dubbo','Dubbo','Dubbo','// TODO add this to provider config '
'Dubbo','Dubbo','Dubbo',"//  special treatment of array values was suggested by 'lizongbo' "
'Dubbo','Dubbo','Dubbo','//  TODO we should leave this setting to slf4j '
'Dubbo','Dubbo','Dubbo','//  FIXME: when the thread pool is full, SERVER_THREADPOOL_EXHAUSTED_ERROR cannot return properly,   therefore the consumer side has to wait until gets timeout. This is a temporary solution to prevent   this scenario from happening, but a better solution should be considered later. '
'Dubbo','Dubbo','Dubbo','//  The initial value is null and the midway may be assigned to null, please use the local variable reference '
'Dubbo','Dubbo','Dubbo','//  FIXME REQUEST_CONTEXT '
'Dubbo','Dubbo','Dubbo',"//  for example, object transported on the wire doesn't implement Serializable "
'Dubbo','Dubbo','Dubbo','// bug: DUBBO-425 '
'Dubbo','Dubbo','Dubbo','//  FIXME log error message in Codec and handle in caught() of IoHanndler? '
'Dubbo','Dubbo','Dubbo','// There may be some problem handling chinese (negative number recognition). Ignoring this problem, the backspace key is only meaningfully input in a real telnet program. '
'Dubbo','Dubbo','Dubbo','/*       This UT is unstable, consider remove it later.      @see https://github.com/apache/dubbo/issues/1787      */'
'Dubbo','Dubbo','Dubbo','//  bug: DUBBO-132 '
'Dubbo','Dubbo','Dubbo','//  TODO do more sophisticated exception handling and output '
'Dubbo','Dubbo','Dubbo','/*  * TODO for now kryo serialization doesn\'t deny classes that don\'t implement the serializable interface * * <pre> *     e.g. &lt;dubbo:protocol serialization="kryo" /&gt; * </pre>  */'
'Dubbo','Dubbo','Dubbo','//  TODO users can override this mapper, but we just rely on the current priority strategy of resteasy '
'Dubbo','Dubbo','Dubbo','// FIXME: waiting for embedded Nacos suport, then we can open the switch. '
'Dubbo','Dubbo','Dubbo','// TODO generic invoker？ '
'Dubbo','Dubbo','Dubbo','/*      * FIXME, this instance will always be a type of DynamicConfiguration, ConfigCenterConfig will load the instance at startup and assign it to here.      */'
'Dubbo','Dubbo','Dubbo','//  TODO Do not want to use spaces? See: DUBBO-502, URL class handles special conventions for special characters. '
'Dubbo','Dubbo','Dubbo','//  hack, use reflection to get the shared channel.'
'Dubbo','Dubbo','Dubbo','//  TODO Notification failure does not restore mechanism guarantee '
'Dubbo','Dubbo','Dubbo','// TODO fix npe  context.isProviderSide(); '
'Dubbo','Dubbo','Dubbo','// TODO we needs use force writing to file so that buffer gets clear and new log can be written. '
'Dubbo','Dubbo','Dubbo','// Reselect before retry to avoid a change of candidate `invokers`.  NOTE: if `invokers` changed, then `invoked` also lose accuracy. '
'Dubbo','Dubbo','Dubbo','/*  * TODO load as SPI will be better?  */'
'Dubbo','Dubbo','Dubbo','// fixme, reject exception can not be sent to consumer because thread pool is full, resulting in consumers waiting till timeout. '
'Dubbo','Dubbo','Dubbo','/*  * TODO refactor using mockito  */'
'Dubbo','Dubbo','Dubbo','//  generally a client can only be closed once, here it is closed twice, counter is incorrect '
'Dubbo','Dubbo','Dubbo','// TODO A temporary solution to the problem that the exception information can not be sent to the opposite end after the thread pool is full. Need a refactoring  fix The thread pool is full, refuses to call, does not return, and causes the consumer to wait for time out '
'Dubbo','Dubbo','Dubbo','//  TODO in the future maybe we can just use a single rest client and connection manager '
'Dubbo','Dubbo','Dubbo','// TODO solve merge problem  = Constants.DEFAULT_STUB_EVENT; '
'Dubbo','Dubbo','Dubbo','//  FIXME: a hack to make org.apache.dubbo.remoting.exchange.support.DefaultFuture.closeChannel work '
'Dubbo','Dubbo','Dubbo','/*  is the buffer big enough?  */'
'Dubbo','Dubbo','Dubbo','//  BUG: DUBBO-846 in version 2.0.9, config retry="false" on provider\'s method doesn\'t work '
'Dubbo','Dubbo','Dubbo','//  FIXME: this exposes the design flaw in RouterChain '
'Dubbo','Dubbo','Dubbo','//  FIXME RESPONSE_CONTEXT '
'Dubbo','Dubbo','Dubbo','//  TODO jetty will by default enable keepAlive so the xml config has no effect now '
'Dubbo','Dubbo','Dubbo','// cannot write == not Available ? '
'Dubbo','Dubbo','Dubbo',"//  TODO Wrapper cannot handle this scenario correctly: the classname contains '$' "
'Dubbo','Dubbo','Dubbo','//  On server side, thrift can not handle exceptions not declared in idl '
'Dubbo','Dubbo','Dubbo','// TODO assert error log '
'Dubbo','Dubbo','Dubbo',"/*  * This class represents an unfinished RPC call, it will hold some context information for this call, for example RpcContext and Invocation, * so that when the call finishes and the result returns, it can guarantee all the contexts being recovered as the same as when the call was made * before any callback is invoked. * <p> * TODO if it's reasonable or even right to keep a reference to Invocation? * <p> * As {@link Result} implements CompletionStage, {@link AsyncRpcResult} allows you to easily build a async filter chain whose status will be * driven entirely by the state of the underlying RPC call. * <p> * AsyncRpcResult does not contain any concrete value (except the underlying value bring by CompletableFuture), consider it as a status transfer node. * {@link #getValue()} and {@link #getException()} are all inherited from {@link Result} interface, implementing them are mainly * for compatibility consideration. Because many legacy {@link Filter} implementation are most possibly to call getValue directly.  */"
'Dubbo','Dubbo','Dubbo','//  FIXME should put exception in future? '
'Dubbo','Dubbo','Dubbo',"//  DUBBO-571 methods key in provider's URLONE doesn't contain the methods from inherited super interface "
'Dubbo','Dubbo','Dubbo','/*  * ContextFilterTest.java * TODO need to enhance assertion  */'
'Dubbo','Dubbo','Dubbo','//  FIXME: this code looks useless '
'Dubbo','Dubbo','Dubbo',"//  TODO due to dubbo's current architecture,   it will be called from registry protocol in the shutdown process and won't appear in logs "
'Dubbo','Dubbo','Dubbo','//  TODO can we load successfully for a different classloader?. '
'Dubbo','Dubbo','Dubbo','// The status input has a problem, and the read information is wrong when the serialization is serialized. '
'Dubbo','Dubbo','Dubbo','//  FIXME: not sure why AbstractReferenceConfig has both isGeneric and getGeneric '
'Dubbo','Dubbo','Dubbo','//  FIXME result is an AsyncRpcResult instance. '
'Dubbo','Dubbo','Dubbo','//  FIXME, should cancel and restart timer tasks if parameters in the new URL are different? '
'Dubbo','Dubbo','Dubbo','/*  * TODO Extract more code here if necessary  */'
'Dubbo','Dubbo','Dubbo',"//  FIXME RMI protocol doesn't support casting to EchoService yet. "
'Dubbo','Dubbo','Dubbo',"//  dubbo's original impl can't support the use of ServletContext          server.addHandler(servletHandler); "
'Dubbo','Dubbo','Dubbo','//  Deprecated! Subscribe to override rules in 2.6.x or before. '
'Dubbo','Dubbo','Dubbo','//  Subscribe the override data   FIXME When the provider subscribes, it will affect the scene : a certain JVM exposes the service and call    the same service. Because the subscribed is cached key with the name of the service, it causes the '
'Dubbo','Dubbo','Dubbo','/*      * Should be called after Config was fully initialized.     * // FIXME: this method should be completely replaced by appendParameters     *     * @return     * @see AbstractConfig#appendParameters(Map, Object, String)     * <p>     * Notice! This method should include all properties in the returning map, treat @Parameter differently compared to appendParameters.      */'
'Dubbo','Dubbo','Dubbo','// TODO Can the value returned by getChannel() be null? need improvement. '
'Dubbo','Dubbo','Dubbo','//  TODO, to support wildcards '
'Dubbo','Dubbo','Dubbo','//  FIXME: cannot guarantee the sequence of the merge result, check implementation in   MergeableClusterInvoker#invoke '
'Dubbo','Dubbo','Dubbo','//  FIXME Is there any need of failing back to Constants.ANY_VALUE or the first available method invokers when invokers is null? '
'Dubbo','Dubbo','Dubbo','//  TODO more configs to add '
'Dubbo','Dubbo','Dubbo',"//  BuG: DUBBO-146 Provider doesn't have exception output, and consumer has timeout error when serialization fails"
'Dubbo','Dubbo','Dubbo',"//  FIXME There's no place to release connectionExecutor! "
'Dubbo','Dubbo','Dubbo','//  TODO: refactor it '
'Dubbo','Dubbo','Dubbo','/*  * TODO this may not be a pretty elegant solution, *  */'
'Dubbo','Dubbo','Dubbo','//  FIXME log error info in Codec and put all error handle logic in IoHanndler? '
'Dubbo','Dubbo','Dubbo',"//  can't shutdown nioEventLoopGroup because the method will be invoked when closing one channel but not a client,   but when and how to close the nioEventLoopGroup ?   nioEventLoopGroup.shutdownGracefully(); "
'Dubbo','Dubbo','Dubbo','/*  * FIXME: is this really necessary? PropertiesConfiguration should have already covered this: * @see PropertiesConfiguration * @See ConfigUtils#getProperty(String)  */'
'Dubbo','Dubbo','Dubbo','/*      * the resident routers must being initialized before address notification.     * FIXME: this method should not be public      */'
'Dubbo','Dubbo','Dubbo','//  TODO there may have duplicate refresh '
'Dubbo','Dubbo','Dubbo','// fixme replace this with better method '
'Dubbo','Dubbo','Dubbo',"//  TODO for now we don't consider the differences of encoding and server limit "
'Dubbo','Dubbo','Dubbo','/*      * FIXME check @Parameter(required=true) and any conditions that need to match.      */'
'Dubbo','Dubbo','Dubbo',"/*           RMI needs extra parameter since it uses customized remote invocation object          The customized RemoteInvocation was firstly introduced in v2.6.3; The package was renamed to 'org.apache.*' since v2.7.0          Considering the above two conditions, we need to check before sending customized RemoteInvocation:          1. if the provider version is v2.7.0 or higher, send 'org.apache.dubbo.rpc.protocol.rmi.RmiRemoteInvocation'.          2. if the provider version is v2.6.3 or higher, send 'com.alibaba.dubbo.rpc.protocol.rmi.RmiRemoteInvocation'.          3. if the provider version is lower than v2.6.3, does not use customized RemoteInvocation.          */"
'Dubbo','Dubbo','Dubbo','//  TODO exist concurrent gap '
'Dubbo','Dubbo','Dubbo','//  TODO: 2017/8/31 FIXME The thread pool should be used to refresh the address, otherwise the task may be accumulated. '
'Dubbo','Dubbo','Dubbo',"/*      * If there's no dynamic tag rule being set, use static tag in URL.     * <p>     * A typical scenario is a Consumer using version 2.7.x calls Providers using version 2.6.x or lower,     * the Consumer should always respect the tag in provider URL regardless of whether a dynamic tag rule has been set to it or not.     * <p>     * TODO, to guarantee consistent behavior of interoperability between 2.6- and 2.7+, this method should has the same logic with the TagRouter in 2.6.x.     *     * @param invokers     * @param url     * @param invocation     * @param <T>     * @return      */"
'Gradle','Gradle','Gradle',"//  TODO this should not be using the default charset because it's not an input and might introduce flakiness "
'Gradle','Gradle','Gradle','//  TODO Make this work with pending elements'
'Gradle','Gradle','Gradle',"/*  * The DSL for declaring plugins to inject into an included build. * * TODO: Plugins need to be located in this build's buildSrc. * * @since 4.6  */"
'Gradle','Gradle','Gradle','//  TODO some kind of context of why the method was attached (e.g. which plugin declared the rule)   TODO some kind of instance state for the method (might be the same as context above) '
'Gradle','Gradle','Gradle','//  TODO: Need to track version/implementation of symbol strip tool. '
'Gradle','Gradle','Gradle','// TODO move to base-services once the ProgressLogger dependency is removed'
'Gradle','Gradle','Gradle',"//  Return a dummy implementation of this as creating a real hasher drags ~20 more services   along with it, and a hasher isn't actually needed on the worker process side at the moment. "
'Gradle','Gradle','Gradle',"//  there's a risk, for some methods, that the hash is always   recomputed but it won't be worse than before "
'Gradle','Gradle','Gradle',"//  This isn't quite right. Should close the worker classpath cache once we're finished with the worker processes. This may be before the end of this build   or they may be used across multiple builds "
'Gradle','Gradle','Gradle','//  TODO Need a better mechanism to wire tasks into lifecycle '
'Gradle','Gradle','Gradle','//  TODO:Cedric This is not quite right. We assume that if we are asking for a specific binary, then we resolve to the assembly instead   of the jar, but it should be somehow parameterized '
'Gradle','Gradle','Gradle','//  Ensure that at most one action that may have access to the mutable state of the build runs at a given time   TODO - move this to a better home and reuse '
'Gradle','Gradle','Gradle','//  TODO(ew): inject BuildOperationIdentifierRegistry instead of static use'
'Gradle','Gradle','Gradle','//  TODO:HH Use managed views for this, only applied when the respective language is applied'
'Gradle','Gradle','Gradle','//  TODO: There has to be a simpler way to do this.   We want to create a buildable filecollection based on a filtered view of selected source directory sets '
'Gradle','Gradle','Gradle','//  Passing null for sha1 - TODO - consider using the etag which is an MD5 hash of the file (when less than 5Gb) '
'Gradle','Gradle','Gradle','//  TODO:ADAM - need to do this earlier '
'Gradle','Gradle','Gradle','//  TODO - exception when no default type '
'Gradle','Gradle','Gradle',"//  Don't force evaluation of rules here, let the task container do what it needs to"
'Gradle','Gradle','Gradle','//  result is a scala.util.Either   right is a Seq of files that were generated   left is routes compilation errors   TODO: It might be nice to pass along these errors in some way '
'Gradle','Gradle','Gradle',"//  TODO deleteOnExit won't clean up non-empty directories (and it leaks memory for long-running processes). "
'Gradle','Gradle','Gradle','/*  * Meta-info about a Java component. * * TODO - this is some legacy stuff, to be merged into other component interfaces  */'
'Gradle','Gradle','Gradle','//  TODO: Need to track version/implementation of symbol extraction tool. '
'Gradle','Gradle','Gradle','//  TODO: This should be modeled differently, perhaps as a dependency on the implementation configuration '
'Gradle','Gradle','Gradle','//  This is not super nice, but dependencies are created through reflection, for decoration   and assume a constructor with 3 arguments (Group, Name, Version) which is suitable for   most cases. We could create an empty attribute set directly in the AbstractDependencyImpl,   but then it wouldn\'t be mutable. Therefore we proceed with "late injection" of the attributes '
'Gradle','Gradle','Gradle','//  TODO(ew): Consider whether this belongs in Console or here'
'Gradle','Gradle','Gradle','//  TODO - should split this up, so that the inputs are attached to an object that represents the binary, which is then later used to configure the link/assemble tasks '
'Gradle','Gradle','Gradle',"//  we need to wrap this into a loop, because there's always a risk   that the method, which is weakly referenced, has been collected   in between the creation time and now "
'Gradle','Gradle','Gradle','//  TODO(daniel): Should support in a better way multi file invocation. '
'Gradle','Gradle','Gradle',"//  It's true right now that this is always coming from the TestKit, but might not be in the future."
'Gradle','Gradle','Gradle',"//  TODO - don't select again here, as the selection is already performed to select the toolchain "
'Gradle','Gradle','Gradle',"//  TODO include link to documentation giving more explanation of what's going on here. "
'Gradle','Gradle','Gradle','//  TODO: Migrate this away from here '
'Gradle','Gradle','Gradle','//  This looks ugly, very ugly, but that is apparently what Ant does itself '
'Gradle','Gradle','Gradle','//  TODO - should be incremental '
'Gradle','Gradle','Gradle','//  TODO: this is terrible '
'Gradle','Gradle','Gradle','//  TODO: This should actually be a Routable message with a single handler,   but we need some way to correlate a given request with a specific response channel '
'Gradle','Gradle','Gradle','//  TODO - this is pretty nasty, look at avoiding using a time bomb stub here '
'Gradle','Gradle','Gradle','// TODO:rbo Change the parameter type to `Transformer<String, @Nullable String>` once we migrate to Java 8'
'Gradle','Gradle','Gradle','// TODO - make this work on windows  originalIn.close();'
'Gradle','Gradle','Gradle','//  TODO better exception type '
'Gradle','Gradle','Gradle','//  Note: This would be better housed in a scope that encapsulated the tree of Gradle objects. '
'Gradle','Gradle','Gradle','/*  * A {@link org.gradle.api.file.ConfigurableFileCollection} that can be used as a task input property. Caches the matching set of files during task execution, and discards the result after task execution. * * TODO - disallow further changes to this collection once task has started * TODO - keep the file entries to snapshot later, to avoid a stat on each file during snapshot  */'
'Gradle','Gradle','Gradle','//  TODO This class, DefaultBuildOperationQueue and ExecutionPlan have many of the same   behavior and concerns - we should look for a way to generalize this pattern. '
'Gradle','Gradle','Gradle','// TODO:instant-execution: remove this '
'Gradle','Gradle','Gradle','//  Can only set once: should really be part of the constructor   Can only set once: should really be part of the constructor'
'Gradle','Gradle','Gradle',"//  This isn't quite right, as we may lose precision when converting to a double "
'Gradle','Gradle','Gradle','//  decimalFormat is not thread safe - synchronize access to the instance '
'Gradle','Gradle','Gradle','//  TODO - wire this stuff in properly '
'Gradle','Gradle','Gradle','//  TODO:ADAM - need to cleanup completion too, if not used '
'Gradle','Gradle','Gradle','//  TODO: Need to check for proper type/cast '
'Gradle','Gradle','Gradle','//  TODO - should use a resolver so that this method is consistent with Project.uri(string) '
'Gradle','Gradle','Gradle','//  TODO wolfs - schedule fingerprinting separately, it can be done without having the project lock '
'Gradle','Gradle','Gradle',"//  Note: don't actually remove this in 6.0, the deprecation is here to encourage people to use ObjectFactory instead. Just remove the overload and the nag and leave the method here"
'Gradle','Gradle','Gradle','//  todo: consider multithreading/multiprocess issues   Teamcity has the concept of a "wave" of messages   where each thread/process uses a unique wave id '
'Gradle','Gradle','Gradle','//  TODO - reduce duplication with Swift binary '
'Gradle','Gradle','Gradle','// TODO: move bootclasspath to platform '
'Gradle','Gradle','Gradle','//  TODO: This should be modeled as a source set '
'Gradle','Gradle','Gradle','//  TODO - the project model should be reachable from ProjectState without another lookup '
'Gradle','Gradle','Gradle','//  TODO: Locate this tool from a tool provider   hide main symbol '
'Gradle','Gradle','Gradle',"//  TODO: This prefix shouldn't be hardcoded "
'Gradle','Gradle','Gradle',"//  TODO:LPTR Remove projection for reference node   This shouldn't be needed, but if there's no actual value referenced, model report can only   show the type of the node if we do this for now. It should use the schema instead to find   the type of the property node instead. "
'Gradle','Gradle','Gradle','//  TODO:ADAM - switch the logging back on. Need to make sending messages from daemon to client async wrt log event generation                  LOGGER.debug("Ignoring failure to extract throwable stack trace.", ignored); '
'Gradle','Gradle','Gradle','//  TODO: Need failure handling, e.g., cannot clone repository '
'Gradle','Gradle','Gradle','//  TODO This should actually compare a SortedSet '
'Gradle','Gradle','Gradle',"//  TODO - validate that it's a valid model path "
'Gradle','Gradle','Gradle','//  The visual C++ tools use the path to find other executables   TODO:ADAM - restrict this to the specific path for the target tool '
'Gradle','Gradle','Gradle','//  TODO:pm Move this to WARN level once we fixed maven-publish, see gradle/gradle#1662 '
'Gradle','Gradle','Gradle',"//  TODO:ADAM - This isn't quite right   MB: I think ^ refers to the first capable classloader loading the class. This could be different   from the loader which originally loaded it, which could pose equality and lifecycle issues. "
'Gradle','Gradle','Gradle','//  TODO:Cedric This is an approximation: when a component wants to compile against the assembly of   a library (not the jar), then we should give it the *stubbed classes* instead of the raw classes. However:   - there\'s no such thing as a "stubbed classes assembly"   - for performance reasons only the classes that belong to the API are stubbed, so we would miss the classes that do not belong to the API   So this makes the UsageKind.API misleading (should this be COMPILE?).'
'Gradle','Gradle','Gradle','/*  * An _immutable_ view of the variant of a component. * * TODO - this should replace or merge into VariantResolveMetadata, OutgoingVariant, ConfigurationMetadata  */'
'Gradle','Gradle','Gradle','//  because it\'s a capability conflict resolution, there is only one candidate per module identifier   so we can be lenient wrt the version number used in the descriptor, which helps whenever the user   used the convenience "notation" method '
'Gradle','Gradle','Gradle','//  TODO improve lookup by reusing AvailableJavaHomes testfixture   for now we play it safe and just return false; '
'Gradle','Gradle','Gradle','//  TODO - should decorate '
'Gradle','Gradle','Gradle','//  TODO removing this stuff from the store should be handled through some sort of decoration '
'Gradle','Gradle','Gradle','//  TODO: fix the way we work out which exception is important: TaskExecutionException is not always the most helpful'
'Gradle','Gradle','Gradle','//  TODO: do we need any factories here? '
'Gradle','Gradle','Gradle','//  TODO:HH This should be moved back into languageNative project '
'Gradle','Gradle','Gradle','//  TODO make this work with pending elements'
'Gradle','Gradle','Gradle',"//  TODO: Ultimately, this should be some kind of 3rd party dependency that's visible to dependency management."
'Gradle','Gradle','Gradle','//  TODO: These should come from somewhere else, probably '
'Gradle','Gradle','Gradle','//  TODO: This should become smarter and move into the compiler infrastructure instead     of the task, similar to how the other native languages are done.     For now, this does a rudimentary incremental build analysis by looking at     which files changed . '
'Gradle','Gradle','Gradle','/*  * A minimal resolver, which does not use any native services. Used during bootstrap only. You should generally use {@link FileResolver} instead. * * TODO - share more stuff with AbstractFileResolver.  */'
'Gradle','Gradle','Gradle','// a list instance is needed here, as org.gradle.internal.snapshot.ValueSnapshotter.processValue() does not support  serializing Iterators directly '
'Gradle','Gradle','Gradle','//  TODO:lptr this should be added only if the scan plugin is applied, but SnapshotTaskInputsOperationIntegrationTest   TODO:lptr expects it to be added also when the build cache is enabled (but not the scan plugin) '
'Gradle','Gradle','Gradle','//  TODO: We should set this for macOS, but this currently breaks XCTest support for Swift   when Swift depends on C++ libraries built by Gradle. '
'Gradle','Gradle','Gradle','//  TODO:lptr When we drop Java 8 support we can switch to using ClassLoader.getName() instead of storing our own'
'Gradle','Gradle','Gradle','//  TODO: Provide an abstraction for accessing resources within the same module (maven-metadata, directory listing, etc)   That way we can avoid passing `ivyPatterns` and `artifactPatterns` around everywhere '
'Gradle','Gradle','Gradle','//  TODO:instant-execution - remove kotlin predicate after updating the wrapper'
'Gradle','Gradle','Gradle',"/*      * Closes the tooling API, releasing all resources. Blocks until completed.     *     * <p>May attempt to expire some or all daemons started by this tooling API client. The exact behaviour here is implementation-specific and not guaranteed.     * The expiration is best effort only. This method may return before the daemons have stopped.</p>     *     * <p>Note: this is not yet part of the public tooling API yet.</p>     *     * TODO - need to model this as a long running operation, and allow stdout, stderr and progress listener to be supplied.     * TODO - need to define exceptions.     * TODO - no further operations are allowed after this has been called     * TODO - cancel current operations or block until complete     * TODO - introduce a 'tooling API client' interface and move this method there      */"
'Gradle','Gradle','Gradle','//  TODO LD use something more stable than a cast here '
'Gradle','Gradle','Gradle','//  TODO: Make this more intelligent by matching the attributes of the runtime usage on the variant identities '
'Gradle','Gradle','Gradle','//  Workaround for backwards compatibility. Previously, this case would unintentionally cause the method to be invoked on the owner   continue below '
'Gradle','Gradle','Gradle',"//  TODO - capitalise the target name in the task name   TODO - don't create a launch target for a library "
'Gradle','Gradle','Gradle','/*      * Create binaries for test suites. TODO: This should really be a @ComponentBinaries rule, but at this point we have no clue what the concrete binary type is, so everything has to be duplicated in     * specific plugins. See usages for example.      */'
'Gradle','Gradle','Gradle','//  Did we already consider it as an output after the previous execution? '
'Gradle','Gradle','Gradle',"//  TODO: To get rid of this, we need a `FunctionalSourceSet` instance here, and that's surprisingly difficult to get. "
'Gradle','Gradle','Gradle','//  TODO generic model related super exception? '
'Gradle','Gradle','Gradle','//  TODO - this should work for any build, rather than just an included build '
'Gradle','Gradle','Gradle','//  Workaround for https://issues.gradle.org/browse/GRADLE-2625 '
'Gradle','Gradle','Gradle',"//  TODO: We basically don't support copying custom Javadoc options"
'Gradle','Gradle','Gradle','//  TODO: This exists because we detect all available native tool chains on a system (clang, gcc, swiftc, msvc).     Many of our old tests assume that available tool chains can compile many/most languages, so they do not try to   restrict the required set of tool chains.     The swiftc tool chain can build _only_ Swift, so tests that expect to use the swiftc tool chain properly annotate   their requirements with ToolChainRequirement.SWIFTC (or a version-specific requirement).     Our multi-test runner is smart enough to disable tests that do not meet the test\'s requirements, but since many   of the old tests do not have requirements, we assume the tests require a "C" like tool chain (GCC, Clang, MSVC).     In the future... we want to go back to old tests and annotate them with tool chains requirements.'
'Gradle','Gradle','Gradle',"// we don't handle Variables at the moment because users didn't request it yet  and it would probably push us to add support in the tooling api to retrieve the variable mappings."
'Gradle','Gradle','Gradle','//  TODO: VersionSelector should be more descriptive, so it can be directly translated '
'Gradle','Gradle','Gradle','//  TODO:LPTR Should be a content-less @InputDirectory '
'Gradle','Gradle','Gradle','//  TODO Need a smarter way to map usage to artifact classifier '
'Gradle','Gradle','Gradle','/*      * TODO once source compatibility is raised to 1.7, this should be rewritten using the java.nio.FileSystem API,     * which can deal with jars and folders the same way instead of duplicating code.      */'
'Gradle','Gradle','Gradle','//  TODO - better exception '
'Gradle','Gradle','Gradle','// TODO SF this method accepts Closure instance as parameter but does not work correctly for it '
'Gradle','Gradle','Gradle','//  TODO find a better way to present this information in the error message   Attempt to mimic Gradle nested exception output '
'Gradle','Gradle','Gradle','//  TODO: we should really find a better solution for this...   maybe we could use a FilterReader instead of a FilterInputStream? '
'Gradle','Gradle','Gradle','//  not fully accurate but a sensible fallback   see http://stackoverflow.com/questions/1288102/how-do-i-detect-whether-the-file-system-is-case-sensitive '
'Gradle','Gradle','Gradle','//  TODO not sure if we can clean up the generics here and do less unchecked casting '
'Gradle','Gradle','Gradle','//  TODO - deal with more than one header dir, e.g. generated public headers '
'Gradle','Gradle','Gradle','//  TODO: projectDependency should be transformed based on defaultProject (and other context) elsewhere. '
'Gradle','Gradle','Gradle','//  TODO: This will have to be changed when we support setting credentials directly on the authentication '
'Gradle','Gradle','Gradle',"//  TODO: this is an approximation as we know swift currently supports only 64-bit runtimes - eventually, we'll want to query for this "
'Gradle','Gradle','Gradle','// TODO the async work tracker should wait for children of an operation to finish first.  It should not be necessary to call it here. '
'Gradle','Gradle','Gradle','//  TODO - reduce duplication with C++ binary '
'Gradle','Gradle','Gradle','//  TODO: This should be more specific to just the tasks that create the class files? '
'Gradle','Gradle','Gradle',"//  TODO: we aren't considering the filter "
'Gradle','Gradle','Gradle','//  Send a end-of-line. This is a workaround to convince the console that the cursor is at the start of the line to avoid indenting the next line of text that is displayed   It would be better for the console to listen for stuff read from stdin that would also be echoed to the output and update its state based on this'
'Gradle','Gradle','Gradle','//  TODO - exception when type cannot be created '
'Gradle','Gradle','Gradle','//  TODO bind with the sourceCompatibility property   TODO link to runtime configuration ? '
'Gradle','Gradle','Gradle','//  We track this as an input since the Scala compiler output may depend on it.   TODO: This should be replaced by a property in the Scala toolchain as soon as we model these. '
'Gradle','Gradle','Gradle','//  TODO:LPTR Instead of the first view property, we should figure out these parameters from the actual property '
'Gradle','Gradle','Gradle','//  TODO - DSL documentation? '
'Gradle','Gradle','Gradle',"//  TODO We can probably now support more versions with `strictly` but we'll need more test coverage "
'Gradle','Gradle','Gradle','//  TODO: move this to ObjectFactory '
'Gradle','Gradle','Gradle',"// there are some exceptions attached to the suite. Let's make sure they are reported to the user.  this may happen for example when suite initialisation fails and no tests are executed "
'Gradle','Gradle','Gradle','//  TODO: Does a static library have runtime elements? '
'Gradle','Gradle','Gradle','//  TODO:LPTR This ignores changes to Project.buildDir after model node has been created'
'Gradle','Gradle','Gradle',"//  TODO:LPTR Remove projection for reference node   This shouldn't be needed, but if there's no actual value referenced, model report can only   show the type of the node if we do this for now. It should use the schema instead to find "
'Gradle','Gradle','Gradle','//  TODO: what if this errors? '
'Gradle','Gradle','Gradle','//  TODO:instant-execution - remove this '
'Gradle','Gradle','Gradle','//  TODO: remove this special case '
'Gradle','Gradle','Gradle',"//  Need to move those implicit JVM args that contain a space to the Gradle command-line (if possible)   Note that this isn't strictly correct as some system properties can only be set on JVM start up.   Should change the implementation to deal with these properly"
'Gradle','Gradle','Gradle',"//  Doesn't really make sense "
'Gradle','Gradle','Gradle','// "type-only model reference of type \'%s\'%s is ambiguous as multiple model elements are available for this type:%n  %s (created by %s)%n  %s (created by %s)",'
'Gradle','Gradle','Gradle','//  TODO - exceptions thrown here should point to some extensive documentation on the concept of class rule sources '
'Gradle','Gradle','Gradle',"// (SF) this is a workaround until this story is completed. I'm hardcoding setting the idle timeout to be max X mins.  this way we avoid potential runaway daemons that steal resources on linux and break builds on windows."
'Gradle','Gradle','Gradle','//  TODO - move this to a base plugin   Setup the dependency on the main binary   This should all be replaced by a single dependency that points at some "testable" variants of the main binary '
'Gradle','Gradle','Gradle','//  TODO - should we support this?   Adds a void $propName(Object value) method that simply delegates to the converting setter method '
'Gradle','Gradle','Gradle','//  TODO: Send a message to workers to change their log level rather than stopping '
'Gradle','Gradle','Gradle','//  TODO - this should also be using the decorating instantiator but cannot for backwards compatibility '
'Gradle','Gradle','Gradle','//  TODO - visit the contents of this collection instead.   This is just a super simple implementation for now '
'Gradle','Gradle','Gradle','//  TODO We should get rid of this reflection (will need to reimplement the parser to act on the metadata directly) '
'Gradle','Gradle','Gradle','//  TODO: do we want to keep using SourceDirectorySet in the new API?   would feel more natural if dirs could be added directly to LanguageSourceSet   could also think about extending SourceDirectorySet '
'Gradle','Gradle','Gradle',"//  TODO:LPTR This should be removed once BinaryContainer is a ModelMap   We need to also implement all the interfaces of the delegate type because otherwise   BinaryContainer won't recognize managed binaries as BinarySpecInternal"
'Gradle','Gradle','Gradle',"//  todo - stream serialised value to file   todo - handle hash collisions (properly, this time)   todo - don't store null links to child blocks in leaf index blocks   todo - align block boundaries   todo - thread safety control   todo - merge small values into a single data block   todo - discard when file corrupt   todo - include data directly in index entry when serializer can guarantee small fixed sized data   todo - free list leaks disk space   todo - merge adjacent free blocks   todo - use more efficient lookup for free block with nearest size "
'Gradle','Gradle','Gradle',"//  This is a workaround for https://issues.gradle.org/browse/GRADLE-3324.   Somehow the ArrayList 'result' in `org.sonatype.aether.impl.internal.Utils#sortMetadataGeneratorFactories` ends up   being a list of nulls on windows and IBM's 1.6 JDK."
'Gradle','Gradle','Gradle',"//  TODO - binaries aren't an input to this rule, they're an input to the action "
'Gradle','Gradle','Gradle','/*  * Specifies how to build and where to place a native executable file. * * <p>TODO:HH resolve naming conflict with existing NativeExecutableSpec</p>  */'
'Gradle','Gradle','Gradle','//  This should be replaced by some stronger modelling and made open rather than hardcoding a set of source languages here '
'Gradle','Gradle','Gradle',"//  We moved the API back into internal, so this isn't really correct. "
'Gradle','Gradle','Gradle','//  TODO - refactor this action out so it can be unit tested '
'Gradle','Gradle','Gradle','//  TODO - error if there are unknowns? '
'Gradle','Gradle','Gradle','//  TODO:ADAM - using a UUID means we create a ClassLoader hierarchy for each daemon process we talk to. Instead, use the spec to decide whether to reuse a ClassLoader '
'Gradle','Gradle','Gradle','//  TODO - should supply and check for the same parameters as passed to reserveNewClient() '
'Gradle','Gradle','Gradle','//  TODO - should use the _install_ task for an executable '
'Gradle','Gradle','Gradle','//  Implement this if you need to specify individual toolchains via "org.gradle.integtest.versions" '
'Gradle','Gradle','Gradle','//  todo annotate as required '
'Gradle','Gradle','Gradle',"//  TODO: CC cannot enable this assertion because moduleSource is not serialized, so doesn't appear in the deserialized form  assert metadata.equals(forceRead);"
'Gradle','Gradle','Gradle',"//  todo An ExcludeRule is a value object but we don't enforce immutability for DefaultExcludeRule as strong as we   should (we expose the Map). We should provide a better API for ExcludeRule (I don't want to use unmodifiable Map).   As soon as DefaultExcludeRule is truly immutable, we don't need to create a new instance of DefaultExcludeRule."
'Gradle','Gradle','Gradle','//  production code should handle these exceptions more gracefully '
'Gradle','Gradle','Gradle',"//  TODO - this isn't quite right "
'Gradle','Gradle','Gradle',"//  The isEmpty check is not required, might look innocent, but Guava's performance bad for an empty immutable list   because it still creates an inner class for an iterator, which delegates to an Array iterator, which does... nothing.   so just adding this check has a significant impact because most components do not declare any capability "
'Gradle','Gradle','Gradle','//  TODO we are relying on the registration having established these links, we should be checking'
'Gradle','Gradle','Gradle',"// TODO SF add quotes to both formats (there will be *lots* of tests failing so I'm not sure if it is worth it). "
'Gradle','Gradle','Gradle','//  TODO(ew): Consider whether this belongs in BuildProgressArea or here '
'Gradle','Gradle','Gradle','//  TODO It would be better if these were added via a separate managed view, rather than hard coded. '
'Gradle','Gradle','Gradle',"//  Shouldn't really be here. Currently this goal is used by {@link #bindAllReferences} which also expects the subject to be bound "
'Gradle','Gradle','Gradle',"//  This doesn't work.   It used to because at the bottom of the hierarchy chain the object implemented methodMissing().   However, our normal “decorated” classes do not do this so it is not realistic. "
'Gradle','Gradle','Gradle','//  TODO: This returns the wrong public type for domain objects   created with the eager APIs or added directly to the container.   This can leak internal types.   We do not currently keep track of the type used when creating   a domain object (via create) or the type of the container when   a domain object is added directly (via add). '
'Gradle','Gradle','Gradle','//  TODO:LPTR What happens when the property has multiple accessors in the same role but with different type? '
'Gradle','Gradle','Gradle','//  TODO: Should not be ignoring DEPENDENCY_ATTRIBUTE modifications after resolve'
'Gradle','Gradle','Gradle','// TODO this should be a container of platforms '
'Gradle','Gradle','Gradle',"/*      * TODO - hack to avoid classloading issues. We should use org.gradle.util.TextUtil     *     * Currently we can't use it reliably because it causes CNF issues with cross version integration tests running against tooling api < 1.3.      */"
'Gradle','Gradle','Gradle','//  TODO: else, verify that the build definition is the same '
'Gradle','Gradle','Gradle','//  TODO - make this lazy '
'Gradle','Gradle','Gradle','//  TODO should this take Object? '
'Gradle','Gradle','Gradle','//  Used by the Kotlin-dsl base plugin   TODO - remove this '
'Gradle','Gradle','Gradle',"//  TODO - sources is not actual an input to binaries, it's an input to each binary"
'Gradle','Gradle','Gradle','//  TODO - mix in Groovy support using bytecode decoration instead   TODO - validate closure parameters to check they are within bounds'
'Gradle','Gradle','Gradle','// TODO this class attempts to mimic the behavior of the output of mvn help:effective-pom  instead of this class we should walk the maven project object model (instead of parsing the xml!)'
'Gradle','Gradle','Gradle','/*      * we have a name foo.bar and an import foo.foo. This means foo.bar is possibly     * foo.foo.bar rather than foo.bar. This means to cut at the dot in foo.bar and     * foo for import      */'
'Gradle','Gradle','Gradle','//  TODO - remove this once the above is removed '
'Gradle','Gradle','Gradle','//  This is a workaround for https://github.com/gradle/gradle-private/issues/1690'
'Gradle','Gradle','Gradle','/*  * TODO only here because Kotlin DSL uses this. Please remove once that is fixed.  */'
'Gradle','Gradle','Gradle','//  Hold the lock while creating the connection. Not generally good form.   In this instance, blocks other threads from creating the connection at the same time '
'Gradle','Gradle','Gradle','//  Currently retains strong references to types that are not loaded using a VisitableURLClassLoader   This is fine for JVM types, but a problem when a custom ClassLoader is used (which should probably be deprecated instead of supported) '
'Gradle','Gradle','Gradle',"// We might fail hard here on the assumption that something weird happened to the daemon.  However, since we haven't yet started running the build, we can recover by just trying again... "
'Gradle','Gradle','Gradle','//  todo: improve configuration of reports '
'Gradle','Gradle','Gradle','//  TODO: Fix tests that rely on this being set before we process arguments like this...'
'Gradle','Gradle','Gradle','//  TODO: turn into Set? '
'Gradle','Gradle','Gradle',"/*             There's a potential problem here in that DisconnectableInputStream reads from input in the background.            This won't automatically stop when the process is over. Therefore, if input is not closed then this thread            will run forever. It would be better to ensure that this thread stops when the process does.          */"
'Gradle','Gradle','Gradle','//  TODO - need to do a better job of routing messages when there are multiple endpoints. This is just going to forward all queued messages to the first   waiting endpoint, even if there are multiple waiting to do work '
'Gradle','Gradle','Gradle',"//  Create test suite component   TODO - Reuse logic from Swift*Plugin   TODO - component name and extension name aren't the same   TODO - should use `src/xctest/swift` as the convention?   Add the test suite and extension "
'Gradle','Gradle','Gradle',"//  Do not use this. It's here because some of the services this type needs are not easily accessed in certain cases and will be removed ay some point. Use one of the other methods instead "
'Gradle','Gradle','Gradle','//  TODO: should validate that clazz is of a non parameterized type'
'Gradle','Gradle','Gradle',"//  Workaround for when the task is given an input file that doesn't exist"
'Gradle','Gradle','Gradle','//  TODO: Figure out how to get rid of origin scope id in snapshot outputs step '
'Gradle','Gradle','Gradle','//  get rid of the ivy [] token, as [ ] are not valid URI characters '
'Gradle','Gradle','Gradle','//  todo remove this property once configuration can handle normal file system dependencies '
'Gradle','Gradle','Gradle',"//  This piece of ugliness copies the JAXP (ie XML API) provider, if any, from the system ClassLoader. Here's why:     1. When looking for a provider, JAXP looks for a service resource in the context ClassLoader, which is our isolated ClassLoader. If our classpath above does not contain a      provider, this returns null. If it does contain a provider, JAXP extracts the classname from the service resource.   2. If not found, JAXP looks for a service resource in the system ClassLoader. This happens to include all the application classes specified on the classpath. If the application      classpath does not contain a provider, this returns null. If it does contain a provider, JAXP extracts the implementation classname from the service resource.   3. If not found, JAXP uses a default classname   4. JAXP attempts to load the provider using the context ClassLoader. which is our isolated ClassLoader. This is fine if the classname came from step 1 or 3. It blows up if the      classname came from step 2.     So, as a workaround, locate and make visible XML parser classes from the system classloader in our isolated ClassLoader.     Note that in practise, this is only triggered when running in our tests "
'Gradle','Gradle','Gradle','//  TODO Will be implemented without hard-coded access to `$GRADLE_USER_HOME/gradle.properties` for 5.1 in #6084 '
'Gradle','Gradle','Gradle',"//  TODO: This hard-codes the assumption of a 'compile' configuration on the external module   Instead, we should be creating an API configuration for each resolved module "
'Gradle','Gradle','Gradle','//  This is a legacy quirk.   Scans use this to determine that progress logging is indicating start/finish of tasks.   This can be removed in Gradle 5.0 (along with the concept of a “logging category” of an operation) '
'Gradle','Gradle','Gradle','//  See the comment in #taskCompleted, above, for why this is here and why this is a problem '
'Gradle','Gradle','Gradle','//  TODO: CC the special casing of virtual platform should go away if we can implement   disambiguation of variants for a _single_ component '
'Gradle','Gradle','Gradle','//  TODO This should actually extend from the api dependencies, but since Swift currently   requires all dependencies to be treated like api dependencies (with transitivity) we just   use the implementation dependencies here.  See https://bugs.swift.org/browse/SR-1393. '
'Gradle','Gradle','Gradle','//  TODO: Replace this with `JvmAssembly` once that type is public '
'Gradle','Gradle','Gradle','// this is not very nice might be good enough until we get rid of ResolvedConfiguration and friends  avoid traversing the graph causing the full ResolvedDependency graph to be loaded for the most typical scenario '
'Gradle','Gradle','Gradle','//  Not implemented - not yet required. Please implement if required '
'Gradle','Gradle','Gradle',"//  TODO: Extract the non-filesystem parts of the FileSystemChangeWaiter into a separate interface   This isn't really tied to file system watching, we just need another type of waiter. "
'Gradle','Gradle','Gradle',"/*  * TODO: This class sources Gradle metadata files, but there's no corresponding ModuleComponentResolveMetadata for this metadata yet. * Because of this, we will generate an empty instance (either a Ivy or Maven) based on the repository type.  */"
'Gradle','Gradle','Gradle',"//  TODO - this isn't correct, assumes that a side effect is to add the element "
'Gradle','Gradle','Gradle',"//  TODO: `classes` should be a little more tied to the classesDirs for a SourceSet so every plugin   doesn't need to do this. "
'Gradle','Gradle','Gradle','//  This is really not cool, but we cannot rely on `readAttributes` because it will   THROW AN EXCEPTION if the file is missing, which is really incredibly slow just   to determine if a file exists or not. '
'Gradle','Gradle','Gradle','// TODO: use Twirl library instead? '
'Gradle','Gradle','Gradle',"//  DO NOT USE THIS CONSTRUCTOR DIRECTLY   It's only there for backwards compatibility with the Nebula plugin "
'Gradle','Gradle','Gradle',"//  Groovy does something very strange here.   For some reason (probably because the class is Java), it won't employ any dynamism.   Even implementing invokeMethod at the Java level has no effect. "
'Gradle','Gradle','Gradle','//  TODO: We should see if we can go back to using HttpClient again.   This implementation is borrowed from the Apache HttpClient project   https://github.com/apache/httpclient/blob/4.2.2/httpclient/src/main/java/org/apache/http/conn/ssl/SSLSocketFactory.java#L246-L354'
'Gradle','Gradle','Gradle','//  TODO Change to Set? '
'Gradle','Gradle','Gradle','//  TODO(daniel): Should support in a better way multi file invocation.   Override this method to have multi file invocation '
'Gradle','Gradle','Gradle','//  @Todo: refactor this task configuration to extend a copy task and use replace tokens '
'Gradle','Gradle','Gradle',"//  TODO:REUSE Refactor after removing reuse   This is horrendously bad.   We need to set the platform, _before_ the @Defaults rules of NativeBinaryRules assign the toolchain.   We can't just assign the toolchain here because the initializer would be closing over the toolchain which is not reusable, and this breaks model reuse.   So here we are just closing over the safely reusable things and then using proper dependencies for the tool chain registry.   Unfortunately, we can't do it in the create action because that would fire _after_ @Defaults rules.   We have to use a @Defaults rule to assign the tool chain because it needs to be there in user @Mutate rules   Or at least, the file locations do so that they can be tweaked.   LD - 5/6/14 "
'Gradle','Gradle','Gradle',"//  Check enum equality without checking loading ClassLoader.   There is a slight risk that two versions of the same enum class are compared,   (that's why classloaders are used in equality checks), but checking both name   and ordinal should make this very unlikely. "
'Gradle','Gradle','Gradle',"// TODO version - could be different from main artifact's version "
'Gradle','Gradle','Gradle',"//  Should really be a parameter to the 'withContent' methods or baked into the accessor "
'Gradle','Gradle','Gradle','//  TODO - error messages   TODO - display names for this container and the Provider implementations '
'Gradle','Gradle','Gradle',"//  Not subtypes as we don't know whether they are immutable or not "
'Gradle','Gradle','Gradle','//  TODO: This check should really be done in the compiler process '
'Gradle','Gradle','Gradle','//  Forced dependencies are only supported for enforced platforms, so it is currently hardcoded.   Should we want to add this as a first class concept to Gradle metadata, then it should be available on the component variant   metadata as well. '
'Gradle','Gradle','Gradle','//  TODO Remove this attempt to guess packaging from artifacts. Packaging should come from component, or be explicitly set.'
'Gradle','Gradle','Gradle','//  Was it created during execution? '
'Gradle','Gradle','Gradle','//  TODO: Deprecate and eventually prevent these mutations when already resolved'
'Gradle','Gradle','Gradle',"//  TODO: this doesn't quite guarantee immutability, because the source may be holding closures that are doing god knows what "
'Gradle','Gradle','Gradle','//  TODO: Get rid of destinationDirectory entirely and replace it with a   collection of link outputs '
'Gradle','Gradle','Gradle','//  TODO: Migrate this to the worker API once the FileSystem and FileOperations services can be injected'
'Gradle','Gradle','Gradle','//  TODO:LPTR Have the paths of the projects serve as @Input maybe? '
'Gradle','Gradle','Gradle','//  This could be handled, just not implemented yet '
'Gradle','Gradle','Gradle','//  TODO: Wrong, using the full classpath of the application'
'Gradle','Gradle','Gradle','//  this is not very beautiful but at some point we will   get rid of ArchiveOutputStreamFactory in favor of the writable Resource '
'Gradle','Gradle','Gradle','// this if is a bit cheesy but 1-letter classname surely means a generic type and the warning will be useless '
'Gradle','Gradle','Gradle','/*      * Creates an instance of the given task type without invoking its constructors. This is used to recreate a task instance from the instant execution cache.     *     * TODO:instant-execution - review this      */'
'Gradle','Gradle','Gradle','//  TODO - this selection should happen per target platform'
'Gradle','Gradle','Gradle','//  TODO Resolve the JavaPlatform and ScalaPlatform from their PlatformResolvers, rather than instantiating directly'
'Gradle','Gradle','Gradle','//  TODO should include some context on what the rule was trying to do (create vs. mutate) '
'Gradle','Gradle','Gradle','//  TODO: Get this from somewhere else? '
'Gradle','Gradle','Gradle','//  This is here to trigger creation of the ShutdownCoordinator. Could do this in a nicer way '
'Gradle','Gradle','Gradle','//  TODO:pm Move this to RunAsBuildOperationBuildActionRunner when BuildOperationWorkerRegistry scope is changed '
'Gradle','Gradle','Gradle','// TODO - outputEventListener and buildStandardInput are per-build settings  so down the road we should refactor the code accordingly and potentially attach them to BuildActionParameters '
'Gradle','Gradle','Gradle','/*  * Exposes methods for those properties whose value is a closure. * * TODO: use composition instead of inheritance  */'
'Gradle','Gradle','Gradle','//  Platform specific arguments   TODO: Need to lazily configure compile task'
'Gradle','Gradle','Gradle',"//  If this occurs while running gradle or running integration tests, it is indicative of a problem.   If this occurs while running unit tests, then either use the NativeServicesTestFixture or the '@UsesNativeServices' annotation. "
'Gradle','Gradle','Gradle','//  Ugly, but there are a few places where we need to instantiate a JavaDebugOptions and a regular ObjectFactory service   is not available. '
'Gradle','Gradle','Gradle','// TODO adding the parent project first because the converter needs it this way ATM. This is oversimplified.  the converter should not depend on the order of reactor projects.  we should add coverage for nested multi-project builds with multiple parents. '
'Gradle','Gradle','Gradle',"//  there's a possibility that this listener is called concurrently with   the build finished listener. If the message happens to be a graceful expire   one, then there's a large risk that we create a deadlock, because we're trying to   remove the same listener from 2 different notifications. To avoid this, we just   set the reference to null, which says that we're taking care of removing the listener"
'Gradle','Gradle','Gradle','//  TODO: Need to track version/implementation of ar tool.'
'Gradle','Gradle','Gradle',"//  This is copied from Ant (see org.apache.tools.ant.util.FileUtils.tryHardToDelete).   It mentions that there is a bug in the Windows JDK impls that this is a valid   workaround for. I've been unable to find a definitive reference to this bug.   The thinking is that if this is good enough for Ant, it's good enough for us."
'Gradle','Gradle','Gradle','//  TODO Change this to only add SWIFT_API artifacts and instead parse modulemaps to discover compile task inputs'
'Gradle','Gradle','Gradle','//  Rough implementation to get something to work '
'Gradle','Gradle','Gradle','//  TODO: remove these special cases'
'Gradle','Gradle','Gradle','//  TODO: This is not a great paradigm for creating a temporary directory.   See http://guava-libraries.googlecode.com/svn/tags/release08/javadoc/com/google/common/io/Files.html#createTempDir%28%29 for an alternative. '
'Gradle','Gradle','Gradle','//  TODO: This should be part of the cached result? '
'Gradle','Gradle','Gradle','//  Implementation is currently dumb, can be made smarter '
'Gradle','Gradle','Gradle',"//  TODO:RBO Clarify what it means and what's possible to do with it.   TODO:RBO E.g. Can the return value always be used to resolve back to the identified component? If so, how?   TODO:RBO Wouldn't it be better to define a proper type for project/model paths?"
'Gradle','Gradle','Gradle','//  TODO: This can throw a NPE: will need an identifier for a variant without an owning component '
'Gradle','Gradle','Gradle','//  This implementation is broken. It does not consider include and exclude patterns '
'Gradle','Gradle','Gradle','//  TODO LJA Using the root as the NodeState here is a bit of a cheat, investigate if we can track the proper NodeState '
'Gradle','Gradle','Gradle',"/*      * Produces an ArtifactIdentifier for this artifact (it's not actually an identifier - just a bucket of attributes).     * TODO:ADAM - remove this      */"
'Gradle','Gradle','Gradle','//  TODO - property order needs to be deterministic across JVM invocations, i.e. sort the properties by name'
'Gradle','Gradle','Gradle','//  TODO - this will leave invalid types in the cache when it fails '
'Gradle','Gradle','Gradle',"//  Should repositories be able to participate in incremental?   At the least, they may be able to express themselves as output files   They *might* have input files and other dependencies as well though   Inputs: The credentials they need may be expressed in a file   Dependencies: Can't think of a case here "
'Gradle','Gradle','Gradle','//  TODO - have to do much better here '
'Gradle','Gradle','Gradle','//  TODO: these should be moved off to a separate type'
'Gradle','Gradle','Gradle','//  TODO:LPTR This should be @Defaults @Each PlayApplicationBinarySpecInternal '
'Gradle','Gradle','Gradle','//  TODO we should refactor this to general, compatibility mapping solution, as we have it for model loading. See HasCompatibilityMapping class. '
'Gradle','Gradle','Gradle',"//  This is a heuristic, more than truth: it is possible that the 2 long hashs   are identical AND that the sizes of collections are identical, but it's   extremely unlikely (never happened on test cases even on large dependency graph) "
'Gradle','Gradle','Gradle','//  failing, seems to be that set method override doesn\'t work for iterables - GRADLE-2097  assertThat(call("{ bean, list -> bean.things(list) }", bean, new LinkedList<Object>()), nullValue());  assertThat(bean.getThings().size(), equalTo(0)); '
'Gradle','Gradle','Gradle',"//  TODO: This isn't quite right. We're leaking the _implementation_ type here.  But for tasks, this is usually right. "
'Gradle','Gradle','Gradle','//  TODO return a richer data structure that provides meta data about how the source was found, for use is diagnostics '
'Gradle','Gradle','Gradle','//  The configuration has been used in a resolution, and it is an error for build logic to change any dependencies,   exclude rules or parent configurations (values that will affect the resolved graph).'
'Gradle','Gradle','Gradle','//  This method is sometimes called directly (i.e. not via an operation executor).   In these cases, the context is null. '
'Gradle','Gradle','Gradle','//  TODO:LPTR What is with the "metaClass" property here? '
'Gradle','Gradle','Gradle',"//  TODO this doesn't belong here, that java plugin should add an extension to this guy with this "
'Gradle','Gradle','Gradle','//  need to make this better '
'Gradle','Gradle','Gradle',"//  TODO: maybe we need to allow additional dirs like SourceSetOutput does   (esp. for backwards compatibility). Wonder if it's still necessary to distinguish   between classes and resources dirs, instead of just maintaining a collection of dirs.   As far as generated resources are concerned, it might be better to model   them as an additional (Buildable) ResourceSet."
'Gradle','Gradle','Gradle','//  workaround for bug in TestNG 6.2 (apparently fixed in some 6.3.x): listener is notified twice per event '
'Gradle','Gradle','Gradle',"//  TODO: This isn't correct. This means that we've detected a cycle while determining the execution plan, but the graph walker did not find one.   https://github.com/gradle/gradle/issues/2293 "
'Gradle','Gradle','Gradle',"//  TODO:Cedric The following validation should in theory happen in its own rule, but it is not possible now because   there's no way to iterate on the map as subject of a `@Validate` rule without Gradle thinking you're trying to mutate it"
'Gradle','Gradle','Gradle','// TODO: Simplify this class by busting it up into a locator for legacy SDKs and locator(s) for Windows 8 kits '
'Gradle','Gradle','Gradle','//  TODO - this is all terribly lame. We need some proper reporting here (which means implementing Reporting). '
'Gradle','Gradle','Gradle','//  TODO - implement these cases '
'Gradle','Gradle','Gradle','//  TODO(daniel): Swift compiler should extends from an abstraction of NativeCompiler (most of it applies to SwiftCompiler) '
'Gradle','Gradle','Gradle','//  TODO: should use target platform to make this decision '
'Gradle','Gradle','Gradle','//  TODO There should be a more explicit way to execute an action against existing services '
'Gradle','Gradle','Gradle','//  Have an unprocessed/new selector for this module. Need to re-select the target version. '
'Gradle','Gradle','Gradle','//  TODO: Assets should probably be a source set too '
'Gradle','Gradle','Gradle','// TODO:instant-execution - use the class generator instead '
'Gradle','Gradle','Gradle','//  TODO - implement this by moving this resolver to live alongside the external resolvers '
'Gradle','Gradle','Gradle','//  TODO This should use the same `MutationValidator` infrastructure that we use for other mutation types '
'Gradle','Gradle','Gradle','//  TODO: we should just cache these classloaders and eject/stop them when they are no longer in use '
'Gradle','Gradle','Gradle','//  TODO - should be >= self closed '
'Gradle','Gradle','Gradle','//  TODO:LPTR We should collect all source sets in the project source set, however this messes up ComponentReportRenderer '
'Gradle','Gradle','Gradle','//  TODO Only log expired workers count, log their "identity" once they are nameable/describable '
'Gradle','Gradle','Gradle','//  TODO This is not nice: work out a better way to collect the plugin requests from invoking the plugins block. '
'Gradle','Gradle','Gradle',"//  TODO This is a brain-dead way to ensure that the reference project's model is ready to access "
'Gradle','Gradle','Gradle','//  TODO - this is not quite right, eg given *,!A->A;*,!B->B the result should be B->A and A->B but will in fact be B-> and A-> '
'Gradle','Gradle','Gradle','//  The very first event starts the Initializing phase   TODO - should use BuildRequestMetaData to determine the build start time '
'Gradle','Gradle','Gradle','//  one should really avoid using this constructor as it is totally inefficient   and reserved to spurious cases when the components have dots in names   (and this can happen if a task name contains dots)'
'Gradle','Gradle','Gradle','//  TODO - bust up this hierarchy and compose using interfaces instead '
'Gradle','Gradle','Gradle',"//  Simulate a stuck worker. There's probably a way to inject this failure... "
'Gradle','Gradle','Gradle','//  TODO - this should be an outgoing variant of the component under test '
'Gradle','Gradle','Gradle','//  Add an install task   TODO - should probably not add this for all executables? '
'Gradle','Gradle','Gradle',"//  TODO:lptr why don't we check runningNodes here like we do in hasNodesRemaining()? "
'Gradle','Gradle','Gradle',"//  Dumb terminal doesn't support ANSI control codes.   TODO - remove this when we use Terminal rather than JAnsi to render to console "
'Gradle','Gradle','Gradle',"//  This is a workaround for https://github.com/gradle/gradle/issues/4241   Several early typed operations have `buildPath` property,   the value of which can only be determined after the settings file for the build has loaded.     The workaround is to buffer all operation notifications in memory until the root build's settings have loaded.   This works because all possible settings files have been evaluated by the time the root one has been.   This is not guaranteed to hold into the future.   A proper solution would be to change the operation details/results to be   truly immutable and convey values known at the time."
'Gradle','Gradle','Gradle','/*  * An amount is an immutable value of some quantity, such as duration or length. Each amount has a decimal value and associated units. * * TODO - need to sort out scaling when dividing or converting between units.  */'
'Gradle','Gradle','Gradle','//  TODO - move this to PropertyValue instead'
'Groovy','Groovy','Groovy',"//  todo: inner class nodes don't have an objectInitializers field available "
'Groovy','Groovy','Groovy','/*          * TODO: Remove after JDK9 is the minimum JDK supported         *         * JDK9+ correctly accounts for the synthetic parameter and when it becomes         * the minimum version this method should no longer be required.          */'
'Groovy','Groovy','Groovy',"//         currently char isn't found due to a bug, so go with Object "
'Groovy','Groovy','Groovy','//  TODO check specified type is assignable from declared param type?   ClassNode type = getMemberClassValue(namedParam, "type"); '
'Groovy','Groovy','Groovy','/*  todo these special cases should be special MetaClasses maybe  */'
'Groovy','Groovy','Groovy','//  @todo - refactor pulling generic parser interface up '
'Groovy','Groovy','Groovy','//  hack to reformat other groovydoc block tags (@see, @return, @param, @throws, @author, @since) into html '
'Groovy','Groovy','Groovy','/*  To swap two children of node t...     *     *<pre>     *   (t)     *    |     *    |     *   (a) -- (b)     *     * t.down = firstNode     * a.right = b     * b.right = null     *</pre>     * becomes     *<pre>     *   (t)     *    |     *    |     *   (b) -- (a)     *     * t.down = b     * a.right = null     * b.right = a     *</pre>     *     * todo - build API of basic tree mutations like this method.      */'
'Groovy','Groovy','Groovy','// TODO: in case of the array we could maybe make a partial check '
'Groovy','Groovy','Groovy','//  TODO: maybe define a Throwable and use it here instead of Object '
'Groovy','Groovy','Groovy','// TODO: change that to get the correct scope '
'Groovy','Groovy','Groovy','/*  * @todo multi threaded compiling of the same class but with different roots * for compilation... T1 compiles A, which uses B, T2 compiles B... mark A and B * as parsed and then synchronize compilation. Problems: How to synchronize? * How to get error messages? *  */'
'Groovy','Groovy','Groovy','// workaround for Groovy-835 '
'Groovy','Groovy','Groovy','// There HAS to be a better way to do this! '
'Groovy','Groovy','Groovy','//  Groovy allows more characters than Character.isValidJavaIdentifier() would allow   if we find a good way to encode special chars we could remove (some of) these checks '
'Groovy','Groovy','Groovy','//  TODO: this might not do enough or too much   But it is a good start without spreading logic everywhere '
'Groovy','Groovy','Groovy','//  hack warning! fragile! TODO find a better way '
'Groovy','Groovy','Groovy',"/*      * TODO: Should return the URI for this source, but we can't know what it is here.     *     * @return null      */"
'Groovy','Groovy','Groovy','//  TODO includes? excludes? '
'Groovy','Groovy','Groovy','//  cast with explicit weaker generics for now to keep jdk6 happy, TODO: find better fix '
'Groovy','Groovy','Groovy','// TODO: report multiple missing labels of the same name only once? '
'Groovy','Groovy','Groovy','//  GROOVY-6337 HACK: in case newly created field is @Lazy '
'Groovy','Groovy','Groovy','//  ignore   TODO should use a low priority logger '
'Groovy','Groovy','Groovy','//  TODO the buffer is not read up to the end, but up to length - 6 '
'Groovy','Groovy','Groovy','//  FIXME no implementation?          SoftDoubleKeyMap.Entry val = (SoftDoubleKeyMap.Entry) assignableMap.getOrPut(klazz, aClass, null); '
'Groovy','Groovy','Groovy','//  todo: this might not work correctly for absolute paths '
'Groovy','Groovy','Groovy',"// TODO: don't ignore inner static classes completely "
'Groovy','Groovy','Groovy','//  TODO store this on root node? reset bodyText? '
'Groovy','Groovy','Groovy','//  TODO use PackageNode instead here? '
'Groovy','Groovy','Groovy','//  TODO: move somewhere else GROOVY-1874 '
'Groovy','Groovy','Groovy','//  TODO consider moving initcode to <clinit> and remaking field final '
'Groovy','Groovy','Groovy','// TODO: inner classes mean a different this-type. This is ignored here! '
'Groovy','Groovy','Groovy',"//  this is only correct in this context here, normally   we would have to compile against compareTo if available   but since we don't compile here, this one is enough "
'Groovy','Groovy','Groovy','//    FIXME: Use List<String> here, current version is not safe   '
'Groovy','Groovy','Groovy','//  temporary hack '
'Groovy','Groovy','Groovy','//  todo windows?? '
'Groovy','Groovy','Groovy','//    HACK: For now force all classes to compile, so we pick up stub changes '
'Groovy','Groovy','Groovy','//  TODO instead of catching Object<T> here stop it from being placed into type in first place '
'Groovy','Groovy','Groovy',"//  TODO should we check package node doesn't already exist? conflict? "
'Groovy','Groovy','Groovy','//  TODO: For GROOVY-2599 do we need something like below but it breaks other things              return (String) invokeMethod(arguments, "toString", EMPTY_ARGS); '
'Groovy','Groovy','Groovy','//  TODO make EmptyExpression work   partially works but not if only thing in script   return EmptyExpression.INSTANCE; '
'Groovy','Groovy','Groovy','//  todo - possibly check for line/col with values of 0 or less... '
'Groovy','Groovy','Groovy','// TODO: this method should really return some kind of meta ClassNode   representing the combination of all bounds. The code here, just picks   something out to be able to proceed and is not actually correct '
'Groovy','Groovy','Groovy',"/*      * NOTE: as per the class javadoc, this class doesn't obey the normal equals/hashCode contract.     * The following field and method could assist some scenarios which required a similar sort of contract     * (but between equals and the custom canonicalHashCode). Currently commented out since we haven't     * found a real need. We will likely remove this commented out code if no usage is identified soon.      */"
'Groovy','Groovy','Groovy','/*      * Represents GenericsType name     * TODO In order to distinguish GenericsType with same name(See GROOVY-8409), we should add a property to keep the declaring class.     *     * fixing GROOVY-8409 steps:     * 1) change the signature of constructor GenericsTypeName to `GenericsTypeName(String name, ClassNode declaringClass)`     * 2) try to fix all compilation errors(if `GenericsType` has declaringClass property, the step would be a bit easy to fix...)     * 3) run all tests to see whether the change breaks anything     * 4) if all tests pass, congratulations! but if some tests are broken, try to debug and find why...     *     * We should find a way to set declaring class for `GenericsType` first, it can be completed at the resolving phase.      */'
'Groovy','Groovy','Groovy','// todo we should flag this when the path is created that this is a field not a prop...   try direct method... '
'Groovy','Groovy','Groovy','// TODO: maybe implement the case localDistance==distance '
'Groovy','Groovy','Groovy','//  major hack here...! '
'Groovy','Groovy','Groovy','//  getTarget(var) can be null in buggy xform code, e.g. Spock <= 1.1   TODO consider removing fixVar once Spock 1.2 is released - replace with informational exception? '
'Groovy','Groovy','Groovy','//  TODO: enforce stricter behavior?   given Map.Entry is an interface, we get a proxy which gives us lots   of flexibility but sometimes the error messages might be unexpected '
'Groovy','Groovy','Groovy','// TODO: maybe do something here? '
'Groovy','Groovy','Groovy','// TODO: more cases here '
'Groovy','Groovy','Groovy','//  TODO refactor to retain richer type information rather than converting to String '
'Groovy','Groovy','Groovy','//  FIXME: all labeled arguments should follow any unlabeled arguments '
'Groovy','Groovy','Groovy','// @todo - is this useful? '
'Groovy','Groovy','Groovy','//  @todo refactor this path '
'Groovy','Groovy','Groovy','//    FIXME: For now just save the first error, should really roll a new message with all of the details   '
'Groovy','Groovy','Groovy','//  should we use a finer grained lock than this? '
'Groovy','Groovy','Groovy',"//  it's better to cache class instances by the source code   GCL will load the unique class instance for the same source code   and avoid occupying Permanent Area/Metaspace repeatedly "
'Groovy','Groovy','Groovy','//  is method object correct type? '
'Groovy','Groovy','Groovy','//  A little bit of paranoid checking here? Most drivers will throw BatchUpdateException perhaps? '
'Groovy','Groovy','Groovy','// TODO After 1.1 we should introspect the meta property and set editable to false if the property is read only '
'Groovy','Groovy','Groovy','// TODO: replace with normal String, p not needed '
'Groovy','Groovy','Groovy','//  @todo should try with just a node as the child '
'Groovy','Groovy','Groovy','//  hack warning!   TODO handle , and ) when they occur within Strings '
'Groovy','Groovy','Groovy','//  TODO: this method is very similar to StaticTypesCheckingSupport#extractGenericsConnections,   but operates on ClassNodes instead of GenericsType '
'Groovy','Groovy','Groovy','// TODO: set correct type here   if setting type and a methodcall is the last expression in a method,   then the method will return null if the method itself is not void too!   (in bytecode after call: aconst_null, areturn) '
'Groovy','Groovy','Groovy','//  TODO handle the owner and delegate cases better for nested scenarios and potentially remove the need for the implicit this case '
'Groovy','Groovy','Groovy','// LOGME   do we ignore it, or fail? '
'Groovy','Groovy','Groovy','//         "The class \'DodgyClass\' has an incorrect modifier synchronized."; '
'Groovy','Groovy','Groovy',"//  we can't have a specialized version of call(Object...) because the dispatch logic in ClosureMetaClass   is too complex! "
'Groovy','Groovy','Groovy','// TODO: implement '
'Groovy','Groovy','Groovy',"//  Don't do this in static initializer because we may never be needed.   TODO: Put this lineSeparator property somewhere everyone can use it. "
'Groovy','Groovy','Groovy',"/*      * NOTE: as per the class javadoc, this class doesn't obey the normal equals/hashCode contract.     * The following field and method could assist some scenarios which required a similar sort of contract     * (but between fastEquals and the custom fastHashCode). Currently commented out since we haven't     * found a real need. We will likely remove this commented out code if no usage is identified soon.      */"
'Groovy','Groovy','Groovy','//  this should always be the case, but adding a test is safer '
'Groovy','Groovy','Groovy','//  TODO: not sure why but groovy.ui.view.BasicContentPane#buildOutputArea classDoc is null '
'Groovy','Groovy','Groovy','//  todo: the check for isWildcard should be replaced with a more complete check '
'Groovy','Groovy','Groovy','//  TODO: is it safe to remove this? What was the original intention? '
'Groovy','Groovy','Groovy','//  TODO is this needed so we can click through on default values?      @Override '
'Groovy','Groovy','Groovy','//  TODO implement below if/when needed '
'Groovy','Groovy','Groovy','//  TODO expose this for stream based stripping? '
'Groovy','Groovy','Groovy',"//  RFC 2045 says that I'm allowed to take the presence of   these characters as evidence of data corruption   So I will   TODO: change this exception type "
'Groovy','Groovy','Groovy','// todo: doesn\'t parse correctly...   assertEquals("class Foo<T super C> {T t}",pretty("class Foo<T super C> {T t}")); '
'Groovy','Groovy','Groovy','//  todo : confirm that TYPE_LOWER_BOUNDS does not have multiple children '
'Groovy','Groovy','Groovy','//  todo: handle vargs! '
'Groovy','Groovy','Groovy','//  TODO: can STCV be made smarter to avoid this check? '
'Groovy','Groovy','Groovy','// TODO: maybe use more specialized type here '
'Groovy','Groovy','Groovy',"//  TODO make this a method to be called from TupleConstructor xform, add check for 'defaults'? "
'Groovy','Groovy','Groovy','//  normally we would do the following   handle = MethodHandles.dropArguments(handle,0,Class.class);   but because there is a bug in invokedynamic in all jdk7 versions    maybe use Unsafe.ensureClassInitialized '
'Groovy','Groovy','Groovy','//  TODO this really should find "best" match or find all matches and complain about ambiguity if more than one   TODO handle getAt with more than one parameter   TODO handle default getAt methods on Java 8 interfaces '
'Groovy','Groovy','Groovy','//  is method name correct? '
'Groovy','Groovy','Groovy','/*      * Compiler configuration.     * <p>     * Used to specify the debug output to print stacktraces in case something fails.     * TODO: Could probably be reused to specify the encoding of the files to load or other properties.      */'
'Groovy','Groovy','Groovy','// TODO: the case of a NoClassDefFoundError needs a bit more research   a simple recompilation is not possible it seems. The current class   we are searching for is there, so we should mark that somehow.   Basically the missing class needs to be completely compiled before   we can again search for the current name. '
'Groovy','Groovy','Groovy','//  TODO below will be deleted once we fix type checker to understand   readonly Map otherwise seen as Map<String, Serializable> '
'Groovy','Groovy','Groovy','//  GROOVY-5814: Immutable is not compatible with @CompileStatic '
'Groovy','Groovy','Groovy','//  todo: remove after putAt(Splice) gets deleted '
'Groovy','Groovy','Groovy','// TODO in Groovy 2.0 use varargs? '
'Groovy','Groovy','Groovy','//  TODO expose this for other usage scenarios, e.g. stream based stripping? '
'Groovy','Groovy','Groovy','/*     A better set of more complete tests of everything below is on the way!     */'
'Groovy','Groovy','Groovy',"//  todo - the visitor doesn't always take PrintStreams as constructor params!  Could be a more reusable implementation than this... "
'Groovy','Groovy','Groovy','//  TODO: remove this visit '
'Groovy','Groovy','Groovy','//  TODO we might wanna only try to resolve the name if we are   on the left hand side of an expression or before a dot? '
'Groovy','Groovy','Groovy',"//  TODO GroovyDoc doesn't parse this file as our java.g doesn't handle this JDK7 syntax "
'Groovy','Groovy','Groovy','//  Convenience hack: try convert single-char strings to ints '
'Groovy','Groovy','Groovy','//  not thread safe '
'Groovy','Groovy','Groovy','//  TODO refactor PIPE to be BITWISE_OR '
'Groovy','Groovy','Groovy','//  Implementation note - there are several ways for the Groovy compiler   to report an unexpected EOF. Perhaps this implementation misses some.   If you find another way, please add it. '
'Groovy','Groovy','Groovy','//  Keep the same default source encoding with the one used by #parseClass(InputStream, String)   TODO should we use org.codehaus.groovy.control.CompilerConfiguration.DEFAULT_SOURCE_ENCODING instead? '
'Groovy','Groovy','Groovy','//  TODO should we make ProxyGenerator singleton? '
'Groovy','Groovy','Groovy','// TODO: this Object[] can be constant '
'Groovy','Groovy','Groovy',"/*  here is a different implementation that uses getProperties(). I have left         * it commented out because it returns a slightly different list of properties;         * i.e. it does not return privates. I don't know what dump() really should be doing,         * although IMO showing private fields is a no-no          */"
'Groovy','Groovy','Groovy',"//  TODO also check for phase after sourceUnit.getPhase()? but will be ignored anyway?   TODO we should only copy those annotations with FIELD_TARGET but haven't visited annotations   and gathered target info at this phase, so we can't do this:   return annotation.isTargetAllowed(AnnotationNode.FIELD_TARGET);   instead just don't copy ourselves for now "
'Groovy','Groovy','Groovy','// todo: these fail because regexp_literals are converted into string_literals on the antlr AST '
'Groovy','Groovy','Groovy','//  TODO remove this once we support declarations in the while condition '
'Groovy','Groovy','Groovy','//  TODO: have to think about how to optimize this! '
'Groovy','Groovy','Groovy','//  TODO cache these?? '
'Groovy','Groovy','Groovy','//  TODO find a way to inject any GroovyLexer/GroovyRecognizer '
'Groovy','Groovy','Groovy',"/*      * TODO(jwagenleitner): remove or fix in future release     *     * According to the spec getContentEncoding() returns the Content-Encoding     * HTTP Header which typically carries values such as 'gzip' or 'deflate'     * and is not the character set encoding. For compatibility in 2.4.x,     * this behavior is retained but should be removed or fixed (parse     * charset from Content-Type header) in future releases.     *     * see GROOVY-8056 and https://github.com/apache/groovy/pull/500      */"
'Groovy','Groovy','Groovy','//             //TODO: test if this is OK with new MOP, should be changed!              // we don\'t want the exception being unwrapped if it is a IllegalArgumentException              // but in the case it is for example a IllegalThreadStateException, we want the unwrapping              // from the runtime              //Note: the reason we want unwrapping sometimes and sometimes not is that the method              // invocation tries to invoke the method with and then reacts with type transformation              // if the invocation failed here. This is OK for IllegalArgumentException, but it is              // possible that a Reflector will be used to execute the call and then an Exception from inside              // the method is not wrapped in a InvocationTargetException and we will end here.              boolean setReason = e.getClass() != IllegalArgumentException.class || this instanceof org.codehaus.groovy.reflection.GeneratedMetaMethod;              return MetaClassHelper.createExceptionText("failed to invoke method: ", this, object, argumentArray, e, setReason);          } '
'Groovy','Groovy','Groovy','//  TODO @Deprecated '
'Groovy','Groovy','Groovy','//  should we throw invalid binding exception?  or fail quietly? '
'Groovy','Groovy','Groovy','//  todo: is there anything to do with the module ??? '
'Groovy','Groovy','Groovy','// TODO: we should consider calling this one directly for MetaClassImpl,        then we save the new method selection '
'Groovy','Groovy','Groovy',"//  todo will 'super' be allowed in non-parentheses method call styles? "
'Groovy','Groovy','Groovy',"// todo AntlrParserPlugin: Unexpected node type: '.' found when expecting type: an identifier   fails after parser "
'Groovy','Groovy','Groovy','//                     TODO: should be better check for case when only diff in modifiers can be SYNTHETIC flag                      && method.getModifiers() == aMethod.getModifiers() '
'Groovy','Groovy','Groovy','//  TODO: checking for isThisOrSuper is enough for AttributeExpression, but if this is moved into   visitAttributeOrProperty to handle attributes and properties equally, then the extended check should be done '
'Groovy','Groovy','Groovy','// TODO: These are the arguments for -p and -i.  Why are we searching using Groovy script extensions?   Where is this documented? '
'Groovy','Groovy','Groovy','//  TODO decide if we should support VOLATILE '
'Groovy','Groovy','Groovy','//  the groovy.compiler.strictNames system property is experimental and may change default value or be removed in a future version of Groovy '
'Groovy','Groovy','Groovy','//  TODO: delete this constant? '
'Groovy','Groovy','Groovy','//  TODO track Deprecated usage and give a warning? '
'Groovy','Groovy','Groovy',"//  fail early with a direct message if possible') "
'Groovy','Groovy','Groovy','//  Java2Groovy produces a slightly different tree structure (TODO fix converter or java.g instead?) '
'Groovy','Groovy','Groovy','// TODO: maybe use a different bootstrap method since no arguments are needed here '
'Groovy','Groovy','Groovy','/*          * TODO : Enable auto ".groovy" extension replacing here!         * http://cvs.groovy.codehaus.org/viewrep/groovy/groovy/groovy-core/src/main/groovy/servlet/GroovyServlet.java?r=1.10#l259          */'
'Groovy','Groovy','Groovy','//  TODO: spread safe should be handled inside '
'Groovy','Groovy','Groovy','//  TODO: do we need to lock down things like: $ownClass '
'Groovy','Groovy','Groovy','//  todo : are there other import types that can be specified? '
'Groovy','Groovy','Groovy','//  TODO consider creating an element for this '
'Groovy','Groovy','Groovy','//  try to get a better error message location based on the property '
'Groovy','Groovy','Groovy','//  TODO: add more tests in here (is there a way to share snippets with SourcePrinterTest?) '
'Groovy','Groovy','Groovy','// TODO: create a WriteOnlyException class? '
'Groovy','Groovy','Groovy','//  TODO: if our code can never access inspect in this way, it would be better '
'Groovy','Groovy','Groovy',"//  TODO: investigate the trait exclusion a bit further, needed otherwise   CallMethodOfTraitInsideClosureAndClosureParamTypeInference fails saying   not static method can't be called from a static context "
'Groovy','Groovy','Groovy','// TODO: need errors for write-only too! '
'Groovy','Groovy','Groovy','// TODO: optimize: add guard based on type Closure '
'Groovy','Groovy','Groovy','//  TODO fix '
'Groovy','Groovy','Groovy','//  TODO remove? '
'Groovy','Groovy','Groovy','//  todo: should this be directly handled by getPlainNodeReference? '
'Groovy','Groovy','Groovy','// TODO: apply generics on parameter[0]?                                  storeType(pexp, setter.getParameters()[0].getType()); '
'Groovy','Groovy','Groovy','// TODO: more than one lower bound for wildcards? '
'Groovy','Groovy','Groovy',"//  BUG! exception in phase 'conversion' in source unit 'Script1.groovy' null   fails after parser "
'Groovy','Groovy','Groovy','//  TODO: Add methods like addMetaConstructor, addMetaAttribute, addMetaAnnotation etc. '
'Groovy','Groovy','Groovy','//  todo: above is not quite the spacing I would expect, but good enough for now...   todo not yet implemented in parser: assertEquals("(new Outer()).super()", pretty("(new Outer()).super()")); '
'Groovy','Groovy','Groovy',"//  GROOVY-7316 : it is an apparently legal thing to allow this. It's not type safe, "
'Groovy','Groovy','Groovy','//  TODO handle ACC_SYNTHETIC for enum method parameters? '
'Groovy','Groovy','Groovy','//  TODO: change this exception type '
'Groovy','Groovy','Groovy','//  by default use GrapeIvy  TODO META-INF/services resolver? '
'Groovy','Groovy','Groovy','//  this is a limitation that must be removed in a future version   we cannot check generic type arguments if there are default parameters! '
'Groovy','Groovy','Groovy','//  todo : type inference on maps and lists, if possible '
'Groovy','Groovy','Groovy',"//  HACK: JavaStubGenerator could have snuck in a constructor we don't want "
'Groovy','Groovy','Groovy','// TODO: apply right generics here! '
'Groovy','Groovy','Groovy',"// TODO: get the type's of the expressions to specify the   list type to List<X> if possible. "
'Groovy','Groovy','Groovy','//  TODO a better way to do this? '
'Groovy','Groovy','Groovy',"//  TODO make @CS lookup smarter so that we don't need both these maps "
'Groovy','Groovy','Groovy','// TODO: that is just a quick prototype, not the real thing! '
'Groovy','Groovy','Groovy','//  TODO IllegalArgumentException for marginChar.length() > 1 ? Or support String as marker? '
'Groovy','Groovy','Groovy','// todo, the spacing here is... unusual '
'Groovy','Groovy','Groovy','//  should we check interfaces as well?  if so at what level? '
'Groovy','Groovy','Groovy','//  TODO add generics support so this can be used for @EAHC '
'Groovy','Groovy','Groovy','//  since the calling code will push the type again, we better remove it here '
'Groovy','Groovy','Groovy','//  cater for explicit href in e.g. @see, TODO: push this earlier? '
'Groovy','Groovy','Groovy','// TODO: if rhs is VariableSlotLoader already, then skip crating a new one '
'Groovy','Groovy','Groovy',"//  todo: inner class nodes don't have a constructors field available "
'Groovy','Groovy','Groovy',"//  FRICKIN' HACK!!!!! For some reason, deleting a string at offset 0   does not get done properly, so first replace and remove after parsing "
'Groovy','Groovy','Groovy',"//  note: def not needed in parameter declarations, but it is valid  todo: is it ok to strip out 'def' from parameter declarations? "
'Groovy','Groovy','Groovy',"// TODO: get the type's of the expressions to specify the   map type to Map<X> if possible. "
'Groovy','Groovy','Groovy','// todo spacing is odd, c.f. last space in class vs interface above '
'Groovy','Groovy','Groovy','//  todo - 17 July 2006 - test fine, however this parses but causes error in AntlrParserPlugin   fails after parser '
'Groovy','Groovy','Groovy','//  TODO expose this for stream based scenarios? '
'Groovy','Groovy','Groovy',"//  TODO This is the only area where this MetaClass needs to do some interception because Groovy's current   MetaClass uses hard coded references to the java.lang.reflect.Constructor class so you can't simply   inject Constructor like you can do properties, methods and fields. When Groovy's MetaClassImpl is   refactored we can fix this "
'Groovy','Groovy','Groovy','//  TODO: is there a better way to do this? '
'Groovy','Groovy','Groovy','//  TODO FIX if empty, AssertionWriter fails because source text is null '
'Groovy','Groovy','Groovy',"//  TODO this won't strictly be true when using list expansion in argument calls "
'Groovy','Groovy','Groovy','//  should always be the case, but safe guard is better '
'Groovy','Groovy','Groovy','// TODO: remove this method if possible by switchpoint usage '
'Groovy','Groovy','Groovy','//  are we a local variable?   it should not be an explicitly "this" qualified method call   and the current class should have a possible method '
'Groovy','Groovy','Groovy','//  TODO: move somewhere else '
'Groovy','Groovy','Groovy',"//  TODO: Shouldn't these extensions be kept elsewhere?  What about CompilerConfiguration?   This method probably shouldn't be in GroovyMain either. "
'Groovy','Groovy','Groovy','/*  Should we make the following method private?  */'
'Groovy','Groovy','Groovy','// FIXME the warning message will NPE with what I have :( '
'Groovy','Groovy','Groovy','//  TODO need returnType.qualifiedTypeName() here '
'Groovy','Groovy','Groovy','// FIXME: do we really want this() to create a new object regardless   the position.. for example not as first statement in a constructor   this=first statement in constructor is handled by specialConstructorCallExpression '
'Groovy','Groovy','Groovy','/*  *  todo: order methods alphabetically (implement compareTo enough?)  */'
'Groovy','Groovy','Groovy','//  todo: performance would be better if we created a StringBuilder '
'Groovy','Groovy','Groovy','//  TODO remove dupe with SimpleGroovyType '
'Groovy','Groovy','Groovy','// TODO: more finals? '
'Groovy','Groovy','Groovy','//  ugly hack   type definition, i.e.   int[] x; '
'Groovy','Groovy','Groovy','//  GROOVY-8914: pre-compiled classes lose synthetic boolean - TODO fix earlier as per GROOVY-4346 then remove extra check here '
'Groovy','Groovy','Groovy','//  TODO: Should we have some unified function like PrintWriter.checkError()? '
'Groovy','Groovy','Groovy','// TODO: check if this part is actually used '
'Groovy','Groovy','Groovy','//  todo: above is not quite the spacing I would expect, but good enough for now... '
'Groovy','Groovy','Groovy','//  TODO consider moving next two statements "up a level", i.e. have just one more widely invoked '
'Groovy','Groovy','Groovy','//  TODO: this should go away once we have proper tags '
'Groovy','Groovy','Groovy','/*  @todo we should check if we have the property with the metaClass instead of try/catch   */'
'Groovy','Groovy','Groovy',"//  TODO shouldn't really be treating annotation fields as methods - remove this hack "
'Groovy','Groovy','Groovy','//  TODO intern types?   TODO configureAST(...) '
'Groovy','Groovy','Groovy',"//  todo - inline open block is great, but it doesn't work as one would expect (yet). (c.f. with)   slist inside a method body (needed label to distinguish from a closure)   slist inside each case body... "
'Groovy','Groovy','Groovy','/*              * TODO treble equal?             return binaryExpression(Types.COMPARE_IDENTICAL, node);             case ???:             return binaryExpression(Types.LOGICAL_AND_EQUAL, node);             case ???:             return binaryExpression(Types.LOGICAL_OR_EQUAL, node);              */'
'Groovy','Groovy','Groovy','//  FIXME:  What should we use as the base URI?   It is unlikely we get to this point with a relative URI since making a URL   from will make it absolute I think.  But lets handle the simple case of   using file paths and turning that into an absolute file URI.   So we will use the current working directory as the base. '
'Groovy','Groovy','Groovy','// todo the following is legal Java, but pretty strange...?   fails after parser '
'Groovy','Groovy','Groovy','//  TODO should this really be static???   cleared on build(), to be safe '
'Groovy','Groovy','Groovy','//  TODO validate args? '
'Groovy','Groovy','Groovy','// TODO Joche: replace with real implementation '
'Groovy','Groovy','Groovy','//  Shall we allow this ? Using Boolean ctors is usually not what user wants... '
'Groovy','Groovy','Groovy',"//  GROOVY-8174: we'd like stricter checking here but many drivers currently in use just aren't consistent enough, so we log "
'Groovy','Groovy','Groovy',"//  Create one script per socket connection.   This is purposefully not caching the Script   so that the script source file can be changed on the fly,   as each connection is made to the server.  FIXME: Groovy has other mechanisms specifically for watching to see if source code changes.   We should probably be using that here.   See also the comment about the fact we recompile a script that can't change. "
'Groovy','Groovy','Groovy','// todo test newlines inside strings somehow... '
'Groovy','Groovy','Groovy','// TODO: maybe use more special type StringBuffer here '
'Groovy','Groovy','Groovy','/*              * Other internal error. Perhaps syntax?!              */'
'Groovy','Groovy','Groovy','/*               Currently leaving BigInteger and BigDecimal in list but see:              http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6348370              Also, Color is not final so while not normally used with child              classes, it isn\'t strictly immutable. Use at your own risk.              This list can by extended by providing "known immutable" classes              via Immutable.knownImmutableClasses              */'
'Groovy','Groovy','Groovy',"//  todo - incomplete, as body of do...while... should be executed at least once, which this doesn't provide. "
'Groovy','Groovy','Groovy','//  we found multiple matching methods   this is a problem, because we can use only one   if it is a getter, then use the most general return   type to decide which method to use. If it is a setter '
'Groovy','Groovy','Groovy','//  todo: replace with a real fast path unary expression helper when available '
'Groovy','Groovy','Groovy','// TODO: if we would know exactly which paths require the exceptions        and which paths not, we can sometimes save this guard  '
'Groovy','Groovy','Groovy','// TODO (blackdrag): this if branch needs a rework. There should be no direct method calls be produced, the   handling of this/super could be much simplified (see visitAttributeExpression), the field accessibility check   could be moved directly into the search, which would also no longer require the GroovyBugError then   the outer class field access seems to be without any tests (if there are tests for that, then the code   here is dead code) '
'Groovy','Groovy','Groovy',"//  TODO don't allow override? "
'Groovy','Groovy','Groovy','//  todo need process multi '
'Groovy','Groovy','Groovy','//  does this operator make any sense? '
'Groovy','Groovy','Groovy','/*  @todo we should use the real Josh Bloch algorithm here  */'
'Groovy','Groovy','Groovy','//  we have a duplicate class!   One possibility for this is, that we declared a script and a   class in the same file and named the class like the file '
'Groovy','Groovy','Groovy',"/*                      * todo there is no CompileUnit in scope so class name                     * checking won't work but that mostly affects the bytecode                     * generation rather than viewing the AST                      */"
'Groovy','Groovy','Groovy','/*  @todo maybe a double dispatch thing to handle new large numbers?  */'
'Groovy','Groovy','Groovy','// TODO: This logic mostly duplicates InvokerHelper.createScript.  They should probably be unified. '
'Groovy','Groovy','Groovy','/*      * Should be called when descending into a loop that defines     * also a scope. Calls pushVariableScope and prepares labels     * for a loop structure. Creates a element for the state stack     * so pop has to be called later, TODO: @Deprecate      */'
'Groovy','Groovy','Groovy','//  TODO check that we reset everything here '
'Groovy','Groovy','Groovy','//  TODO Jochen: replace with new MetaMethod '
'Groovy','Groovy','Groovy','//  todo is \',\' deprecated now?  assertEquals("assert b == true , 99", pretty("assert b==true,99")); '
'Groovy','Groovy','Groovy',"//   TODO: I (ait) don't know why these strange tricks needed and comment following as it effects some Grails tests "
'Groovy','Groovy','Groovy','// TODO: implement int operations for this '
'Groovy','Groovy','Groovy','//  TODO: should be able to remove the klazz field once 2.5 becomes the mainline release   Gradle has a cleanup mechanism in place to reflectively access this klazz field.   The klazz field is being kept for compatibility so as to not break builds that depend   on versions of Groovy after the field was changed to a WeakReference (classRef).  It   appears that Gradle only performs the cleanup when it detects a groovy version of 2.4.x,   so the klazz field and placeholder Sentinel class can likely be safely removed once   the release version bumps to 2.5 (or beyond).   See:   https://github.com/gradle/gradle/blob/711f64/subprojects/core/src/main/java/org/gradle/api/internal/classloading/LeakyOnJava7GroovySystemLoader.java#L74 '
'Groovy','Groovy','Groovy','//  todo suspicious spacing in the following assertion '
'Groovy','Groovy','Groovy','// more than one matching method found --> ambiguous! '
'Groovy','Groovy','Groovy','//         "The method \'java.lang.Object vo()\' has an incorrect modifier volatile."; '
'Groovy','Groovy','Groovy','// todo should the colon be postfixed to the label? '
'Groovy','Groovy','Groovy','//  Bad enough to have side effects but worse if their behavior is wonky. '
'Groovy','Groovy','Groovy','//  TODO could be made more efficient by using a reverse index '
'Groovy','Groovy','Groovy','// TODO: Cater for comments? '
'Hive','Hive','Hive','//  FIXME: probably this should also be integrated with isSame() logics '
'Hive','Hive','Hive','//  Wait for t1 to block, just be sure. Not ideal... '
'Hive','Hive','Hive',"// HIVE-17328: not sure this is correct... I don't think is gets wrapped in UDFToInteger.... "
'Hive','Hive','Hive','//  We expect this to never happen in practice. Can pool paths even have angled braces? '
'Hive','Hive','Hive','//  TODO: This does not work correctly. None of the partitions is created, but the folder   for the first two is created. It is because in HiveMetaStore.add_partitions_core when   going through the partitions, the first two are already put and started in the thread   pool when the exception occurs in the third one. When the exception occurs, we go to   the finally part, but the map can be empty (it depends on the progress of the other   threads) so the folders won\'t be deleted.      Assert.assertFalse(metaStore.isPathExists(new Path(tableLocation + "/year=2016"))); '
'Hive','Hive','Hive','//  TODO: remove this after stashing only rqd pieces from opconverter '
'Hive','Hive','Hive','//  TODO: should we try to make a giant array for one cache call to avoid overhead? '
'Hive','Hive','Hive','//  Forward the row to reducer as is.   Discard the row.   Vectorized - may forward the row, not sure yet. '
'Hive','Hive','Hive','//  7. Handle any move session requests. The way move session works right now is   a) sessions get moved to destination pool if there is capacity in destination pool   b) if there is no capacity in destination pool, the session gets killed (since we cannot pause a query)   TODO: in future this the process of killing can be delayed until the point where a session is actually required.   We could consider delaying the move (when destination capacity is full) until there is claim in src pool.   May be change command to support ... DELAYED MOVE TO etl ... which will run under src cluster fraction as long '
'Hive','Hive','Hive','//  Not thread-safe. '
'Hive','Hive','Hive','// it would be better if AlreadyExistsException had an errorCode field.... '
'Hive','Hive','Hive','//  TODO: this can probably be replaced with much less code via dynamic dispatch and/or templates. '
'Hive','Hive','Hive','//  TODO Handle this properly '
'Hive','Hive','Hive','//  TODO: Do we need maxLength checking? '
'Hive','Hive','Hive','//  TODO: prewarm and update can probably be merged. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getTblProps()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: disabling this test as tez publishes counters only after task completion which will cause write side counters   to be not validated correctly (DAG will be completed before validation)    @Test(timeout = 60000) '
'Hive','Hive','Hive','//  TODO: might want to increase the default batch size. 1024 is viable; MS gets OOM if too high. '
'Hive','Hive','Hive','//  TODO: remove when averageTypeValueSize method RelMdSize '
'Hive','Hive','Hive',"//  We store all caches in variables to change the main one based on config.   This is not thread safe between different split generations (and wasn't anyway). "
'Hive','Hive','Hive','//  $x/$user/appcache/$appId/${dagId}/output/$mapId   TODO: Once Shuffle is out of NM, this can use MR APIs to convert   between App and Job '
'Hive','Hive','Hive','// todo: does this need the finalDestination? '
'Hive','Hive','Hive','//  todo: add LIMIT 1 instead of count - should be more efficient '
'Hive','Hive','Hive','/*      * TODO: client.executeStatement do not support listing resources command     * (beeline> list jar)      */'
'Hive','Hive','Hive',"//  Note: scheduler will call this based on lack of sources at schedule time and set this         to true... there's no easy way to work around this. Need better classes "
'Hive','Hive','Hive','//  TODO: will this also fix windowing? try '
'Hive','Hive','Hive',"//  but let's make it a little bit more explicit. "
'Hive','Hive','Hive','//  TODO: This should inherit from VolcanoCost and should just override isLE   method. '
'Hive','Hive','Hive','//  TODO: 1) check for duplicates 2) We assume in clause values to be   present in NDV which may not be correct (Range check can find it) 3) We   assume values in NDV set is uniformly distributed over col values   (account for skewness - histogram). '
'Hive','Hive','Hive',"//  TODO: if we didn't care about the column order, we could switch join sides here "
'Hive','Hive','Hive',"//  TODO: we could remember if it's unsupported and stop sending calls; although, it might         be a bad idea for HS2+standalone metastore that could be updated with support.         Maybe we should just remember this for some time. "
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#location(String)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: why is this like that? '
'Hive','Hive','Hive','/*  TODO Escape handling may be changed by a follow on.     * The largest issue is ; which are treated as statement     * terminators for the cli. Once the cli is fixed this     * code should be re-investigated      */'
'Hive','Hive','Hive',"//  Delete data?   Fail if table doesn't exist?   Need results back? "
'Hive','Hive','Hive',"//  TODO: This does not work correctly. None of the partitions is created, but the folder   for the first two is created. It is because in HiveMetaStore.add_partitions_core when   going through the partitions, the first two are already put and started in the thread   pool when the exception occurs in the third one.   When the exception occurs, we go to the finally part, but the map can be empty   (it depends on the progress of the other threads) so the folders won't be deleted.   Assert.assertTrue(metaStore.isPathExists(new Path(partition1.getSd().getLocation())));   Assert.assertTrue(metaStore.isPathExists(new Path(partition2.getSd().getLocation())));   Assert.assertTrue(metaStore.isPathExists(new Path(partition3.getSd().getLocation()))); "
'Hive','Hive','Hive',"//  Note: we assume that this isn't an already malformed query;         we don't check for that here - it will fail later anyway. "
'Hive','Hive','Hive',"//  TODO - not clear if we should cache these or not.  For now, don't bother "
'Hive','Hive','Hive','//  TODO: this needs to be removed; see TestReplicationScenarios* comments. '
'Hive','Hive','Hive','// BUG: This will not work in remote mode - HIVE-5153 '
'Hive','Hive','Hive','//  TODO Change this method to make the output easier to parse (parse programmatically) '
'Hive','Hive','Hive','//  TODO: remove? '
'Hive','Hive','Hive',"//  Wouldn't it make more sense to return the first element of the list returned by the   previous call? "
'Hive','Hive','Hive','//  a better logic would be to find the alias '
'Hive','Hive','Hive','//  we need to enforce the size here even the types are the same '
'Hive','Hive','Hive','//  This method may not be safe as it can throw an NPE if a key or value is null. '
'Hive','Hive','Hive','//  TODO: this is an ugly hack because Tez plugin isolation does not make sense for LLAP plugins.         We are going to register a thread-local here for now, so that the scheduler, initializing         in the same thread after the communicator, will pick up. Or the other way around. '
'Hive','Hive','Hive','//  TODO MS-SPLIT uncomment once we move EventMessage over '
'Hive','Hive','Hive',"//  Follow hive's rules for type inference as oppose to Calcite's   for return type.  TODO: Perhaps we should do this for all functions, not just +,- "
'Hive','Hive','Hive','//  TODO: [HIVE-6289] while getting stats from metastore, we currently only get one col at         a time; this could be improved - get all necessary columns in advance, then use local.   TODO: [HIVE-6292] aggregations could be done directly in metastore. Hive over MySQL! '
'Hive','Hive','Hive','//  TODO: see planIndexReading; this is not needed here. '
'Hive','Hive','Hive','//  TODO: why is it stored in both table and dpCtx? '
'Hive','Hive','Hive','//  TODO: Use threadpool for more concurrency?   TODO: check/set all files, or only directories  '
'Hive','Hive','Hive','//  TODO HIVE-15865 Handle additional reasons like OS launch failed '
'Hive','Hive','Hive','//  TODO: 1) handle Agg Func Name translation 2) is it correct to add func '
'Hive','Hive','Hive','//  TODO: Both of these are TException, why do we need these separate clauses? '
'Hive','Hive','Hive','//  TODO: if two HS2s start at exactly the same time, which could happen during a coordinated         restart, they could start generating the same IDs. Should we store the startTime '
'Hive','Hive','Hive',"//  TODO: given the specific data and lookups, perhaps the nested thing should not be a map         In fact, CSLM has slow single-threaded operation, and one file is probably often read         by just one (or few) threads, so a much more simple DS with locking might be better.         Let's use CSLM for now, since it's available. "
'Hive','Hive','Hive','//  TODO Ideally this should be done independent of whether mr is setup or not. '
'Hive','Hive','Hive','//  This is not modeled as a @Before, because it needs to be parameterized per-test.   If there is a better way to do this, we should do it. '
'Hive','Hive','Hive','//  todo HIVE-5269 '
'Hive','Hive','Hive','//  Make sure null-valued ConfVar properties do not override the Hadoop Configuration   NOTE: Comment out the following test case for now until a better way to test is found,   as this test case cannot be reliably tested. The reason for this is that Hive does   overwrite fs.default.name in HiveConf if the property is set in system properties.   checkHadoopConf(ConfVars.HADOOPFS.varname, "core-site.xml");   checkConfVar(ConfVars.HADOOPFS, null);   checkHiveConf(ConfVars.HADOOPFS.varname, "core-site.xml"); '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatPartition.#getDatabaseName()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','// TODO: due to value 101 this probably should throw an exception '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getSortCols()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  Hmm.. not good,   the only type expected here is STRUCT, which maps to HCatRecord   - anything else is an error. Return null as the inspector. '
'Hive','Hive','Hive','//  TODO: should these rather be arrays? '
'Hive','Hive','Hive','//  TODO Change all this to be based on a regular interface instead of relying on the Proto service - Exception signatures cannot be controlled without this for the moment. '
'Hive','Hive','Hive','//  PolicyChangeListener will be implemented later '
'Hive','Hive','Hive','//  TODO: do we actually need this reader? the caller just extracts child readers. '
'Hive','Hive','Hive','//  TODO HIVE-14042. What is mergeWork, and why is it not part of the regular operator chain.   The mergeMapOp.initialize call further down can block, and will not receive information   about an abort request. '
'Hive','Hive','Hive','//  TODO HIVE-15163. Handle cases where nodes go down and come back on the same port. Historic information '
'Hive','Hive','Hive','//  TODO: most protocol exceptions are probably unrecoverable... throw? '
'Hive','Hive','Hive',"//  TODO: do we also need to remove the MapJoin from the list of RS's children? "
'Hive','Hive','Hive','//  TODO: why is there a TezSession in MR ExecDriver? '
'Hive','Hive','Hive','//  Replace INSERT OVERWRITE by MERGE equivalent rewriting.   Here we need to do this complex AST rewriting that generates the same plan   that a MERGE clause would generate because CBO does not support MERGE yet.   TODO: Support MERGE as first class member in CBO to simplify this logic. '
'Hive','Hive','Hive','//  TODO: Current implementation of replication will result in DROP_PARTITION under replication   scope being called per-partition instead of multiple partitions. However, to be robust, we   must still handle the case of multiple partitions in case this assumption changes in the   future. However, if this assumption changes, we will not be very performant if we fetch   each partition one-by-one, and then decide on inspection whether or not this is a candidate   for dropping. Thus, we need a way to push this filter (replicationSpec.allowEventReplacementInto)   to the  metastore to allow it to do drop a partition or not, depending on a Predicate on the   parameter key values. '
'Hive','Hive','Hive','//  TODO: should we pass curr instead of null? '
'Hive','Hive','Hive','//  Really not sure if this should go here.  Will have   to see how the storage mechanism evolves. '
'Hive','Hive','Hive','//  TODO Force fs to file://, setup staging dir?        conf.set("fs.defaultFS", "file:///");        conf.set(TezConfiguration.TEZ_AM_STAGING_DIR, "/tmp"); '
'Hive','Hive','Hive','// todo: why not just use getRootDir()? '
'Hive','Hive','Hive','//  TODO: lossy conversion! '
'Hive','Hive','Hive','//  TODO: remove the copy after ORC-158 and ORC-197 '
'Hive','Hive','Hive',"//  TODO: If the DB name doesn't match with the metadata from dump, then need to rewrite the original and expanded   texts using new DB name. Currently it refers to the source database name. "
'Hive','Hive','Hive','//  TODO: remove this constructor '
'Hive','Hive','Hive','//  TODO: add the ability to extractFileTail to read from multiple buffers? '
'Hive','Hive','Hive','//  TODO : instead of simply restricting by message format, we should eventually   move to a jdbc-driver-stype registering of message format, and picking message   factory per event to decode. For now, however, since all messages have the   same factory, restricting by message format is effectively a guard against   older leftover data that would cause us problems. '
'Hive','Hive','Hive','//  TODO: When hive moves to java8, make updateTimezone() as default method in '
'Hive','Hive','Hive','//  Not strictly necessary, noone will look at it. '
'Hive','Hive','Hive',"//  2**exponent part is scaling down while 10**scale is scaling up.   Now it's tricky.   unscaledValue = significand * 10**scale / 2**twoScaleDown "
'Hive','Hive','Hive','//  TODO CAT - I am fairly certain that most calls to this are in error.  This should only be   used when the database location is unset, which should never happen except when a   new database is being created.  Once I have confirmation of this change calls of this to   getDatabasePath(), since it does the right thing.  Also, merge this with   determineDatabasePath() as it duplicates much of the logic. '
'Hive','Hive','Hive','//  TODO: Should this be the concern of the mutator? '
'Hive','Hive','Hive','//  TODO: Provide support for reporting errors   This should never happen as server always returns a valid status on success '
'Hive','Hive','Hive','/*  TODO: ideally, when the splits UDF is made a proper API, coordinator should not   *        be managed as a global. HS2 should create it and then pass it around.  */'
'Hive','Hive','Hive','//  TODO: convert sqlState, etc. '
'Hive','Hive','Hive','//  TODO Include EXTERNAL_PREEMPTION in this list? '
'Hive','Hive','Hive','//  To workaround AvroUTF8 '
'Hive','Hive','Hive','//  TODO needs to go in InitializeInput? as part of InputJobInfo '
'Hive','Hive','Hive','//  Note that this logic may drop some of the tables of the database   even if the drop database fail for any reason   TODO: Fix this '
'Hive','Hive','Hive','//  Some walkers extending DefaultGraphWalker e.g. ForwardWalker   do not use opQueue and rely uniquely in the toWalk structure,   thus we store the results produced by the dispatcher here   TODO: rewriting the logic of those walkers to use opQueue '
'Hive','Hive','Hive','//  This is a corner case where we have an extract of time unit like day/month pushed as Extraction Fn  @TODO The best way to fix this is to add explicit output Druid types to Calcite Extraction Functions impls '
'Hive','Hive','Hive','//  Workaround for HADOOP-12659 - remove when Hadoop 2.7.X is no longer supported. '
'Hive','Hive','Hive','//  We could pass in the number of nodes that we expect instead of -1.   Also, a single concurrent request per node is currently hardcoded. '
'Hive','Hive','Hive','//  TODO: Strangely the default parametrization is to ignore missing tables '
'Hive','Hive','Hive',"//  FIXME : should clean up TEST_PATH, but not doing it now, for debugging's sake "
'Hive','Hive','Hive','//  This will throw error if we close pout early. '
'Hive','Hive','Hive','//  It is not a very clean way, and should be modified later - due to   compatibility reasons,   user sees the results as json for custom scripts and has no way for   specifying that.   Right now, it is hard-coded in the code '
'Hive','Hive','Hive','//  TODO This test passes fine locally but fails on Linux, not sure why '
'Hive','Hive','Hive','//  TODO: SeekableInputStream.readFully eventually calls a Hadoop method that used to be         buggy in 2.7 and also anyway just does a copy for a direct buffer. Do a copy here.   ((SeekableInputStream)stream).readFully(bb); '
'Hive','Hive','Hive','//  TODO: 1) Expand to other functions as needed 2) What about types other than primitive. '
'Hive','Hive','Hive','//  Set footer cache for current split generation. See field comment - not thread safe. '
'Hive','Hive','Hive','//  TODO: the below seem like they should just be combined into partitionDesc '
'Hive','Hive','Hive','//  CallableWithNdc inherits from NDC only when call() is invoked. CallableWithNdc has to   extended to provide access to its ndcStack that is cloned during creation. Until, then   we will use reflection to access the private field.   FIXME: HIVE-14243 follow to remove this reflection '
'Hive','Hive','Hive','//  TODO: this is brittle. Who said everyone has to upgrade using upgrade process? '
'Hive','Hive','Hive',"/*    * Check whether a task can run to completion or may end up blocking on it's sources.   * This currently happens via looking up source state.   * TODO: Eventually, this should lookup the Hive Processor to figure out whether   * it's reached a state where it can finish - especially in cases of failures   * after data has been fetched.   *   * @return true if the task can finish, false otherwise    */"
'Hive','Hive','Hive','//  UNDONE: How to look for all NULLs in a multi-key?????  Let nulls through for now. '
'Hive','Hive','Hive','//  Note: this can still conflict with parallel transactions. We do not currently handle         parallel changes from two admins (by design :(). '
'Hive','Hive','Hive',"//  TODO: time good enough for now - we'll likely improve this.   We may also work in something the equivalent of pid, thrid and move to nanos to ensure   uniqueness. "
'Hive','Hive','Hive','//  FIXME: somehow place pointers that re-execution compilation have failed; the query have been successfully compiled before? '
'Hive','Hive','Hive',"//  UNDONE: Haven't finished isRepeated "
'Hive','Hive','Hive','//  hack, instead figure out a way to get the db paths '
'Hive','Hive','Hive','// TODO: support complex types   for complex type we simply return 0 '
'Hive','Hive','Hive','//  TODO: the control flow for this needs to be defined. Hive is supposed to be thread-local. '
'Hive','Hive','Hive','// todo: should be at the top of the file... '
'Hive','Hive','Hive','//  Get rid of TOK_SELEXPR '
'Hive','Hive','Hive','//  Clear the work map after build. TODO: remove caching instead? '
'Hive','Hive','Hive',"//  DO_NOT_UPDATE_STATS is supposed to be a transient parameter that is only passed via RPC   We want to avoid this property from being persistent.     NOTE: If this property *is* set as table property we will remove it which is incorrect but   we can't distinguish between these two cases     This problem was introduced by HIVE-10228. A better approach would be to pass the property "
'Hive','Hive','Hive',"//  This is using the payload from the RootVertexInitializer corresponding   to InputName. Ideally it should be using it's own configuration class -   but that "
'Hive','Hive','Hive','//  like HiveHBaseTableInputFormat cannot be used with this (todo) '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#collectionItemsTerminatedBy()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive',"//  TODO: Once HBASE-11163 is completed, use that API, or switch to   using mapreduce version of the APIs. rather than mapred   Copied from HBase's TableMapreduceUtil since it is not public API "
'Hive','Hive','Hive','//  TODO: Fetch partitions in batches?   TODO: Threadpool to process partitions? '
'Hive','Hive','Hive','//  TODO : simple wrap & rethrow for now, clean up with error codes '
'Hive','Hive','Hive','// todo: add method to only get current i.e. skip history - more efficient '
'Hive','Hive','Hive','/*  * Simple wrapper of object with ObjectInspector. *  * TODO: we need to redefine the hashCode and equals methods, so that it can be * put into a HashMap as a key. *  * This class also serves as a facility for a function that returns both an * object and an ObjectInspector.  */'
'Hive','Hive','Hive','//  The ordering of types here is used to determine which numeric types   are common/convertible to one another. Probably better to rely on the   ordering explicitly defined here than to assume that the enum values   that were arbitrarily assigned in PrimitiveCategory work for our purposes. '
'Hive','Hive','Hive','//  Something else is wrong '
'Hive','Hive','Hive','//  TODO: Comments in RexShuttle.visitCall() mention other   types in this category. Need to resolve those together   and preferably in the base class RexShuttle. '
'Hive','Hive','Hive',"//  TODO: Verify if this is needed (Why can't it be always null/empty "
'Hive','Hive','Hive','//  is the outer join that we saw most recently is a right outer join? '
'Hive','Hive','Hive','//  TODO: this relies on HDFS not changing the format; we assume if we could get inode ID, this         is still going to work. Otherwise, file IDs can be turned off. Later, we should use         as public utility method in HDFS to obtain the inode-based path. '
'Hive','Hive','Hive','//  TODO: should it rather do a prefix? '
'Hive','Hive','Hive','/*    * TODO This method is temporary. Ideally Hive should only need to pass to Tez the amount of memory   *      it requires to do the map join, and Tez should take care of figuring out how much to allocate   * Adjust the percentage of memory to be reserved for the processor from Tez   * based on the actual requested memory by the Map Join, i.e. HIVECONVERTJOINNOCONDITIONALTASKTHRESHOLD   * @return the adjusted percentage    */'
'Hive','Hive','Hive','//  A hack to verify that authorization check passed. Exception can be thrown be cause   the functions are not being called with valid params.   verify that exception has come from ObjectStore code, which means that the '
'Hive','Hive','Hive','//  TODO: should this use getUserFromAuthenticator? '
'Hive','Hive','Hive','// TODO: Move this to calcite '
'Hive','Hive','Hive','//  TODO: add this to metadatareader in ORC - SI => metadata buffer, not just metadata. '
'Hive','Hive','Hive','//  TODO: This should come from type system; Currently there is no definition '
'Hive','Hive','Hive',"//  TODO At the moment there's no way of knowing whether a query is running or not.   A race is possible between dagComplete and registerFragment - where the registerFragment   is processed after a dagCompletes.   May need to keep track of completed dags for a certain time duration to avoid this.   Alternately - send in an explicit dag start message before any other message is processed.   Multiple threads communicating from a single AM gets in the way of this. "
'Hive','Hive','Hive',"/*     Should we allow writing to non-transactional tables in an explicit transaction?  The user may    issue ROLLBACK but these tables won't rollback.    Can do this by checking ReadEntity/WriteEntity to determine whether it's reading/writing    any non acid and raise an appropriate error    * Driver.acidSinks and Driver.transactionalInQuery can be used if any acid is in the query */"
'Hive','Hive','Hive','//  TODO: implement? '
'Hive','Hive','Hive','// todo: what is this checking???? '
'Hive','Hive','Hive','//  I think this is wrong, the drop table statement should come on the table topic not the   DB topic - Alan. '
'Hive','Hive','Hive','//  TODO: rather, Tez sessions should not depend on SessionState. '
'Hive','Hive','Hive','//  todo: support tez/vectorization '
'Hive','Hive','Hive','//  TODO: read this somewhere useful, like the task scheduler '
'Hive','Hive','Hive','//  TODO Add support for serialization of values here '
'Hive','Hive','Hive','//  TODO: Convert genIncludedColumns and setSearchArgument to use TypeDescription. '
'Hive','Hive','Hive','//  TODO: when this code is a little less hot, change most logs to debug.   We will determine what to do under lock and then do stuff outside of the lock.   The approach is state-based. We consider the task to have a duck when we have decided to   give it one; the sends below merely fix the discrepancy with the actual state. We may add the   ability to wait for LLAPs to positively ack the revokes in future.   The "procedural" approach requires that we track the ducks traveling on network,   concurrent terminations, etc. So, while more precise it\'s much more complex. '
'Hive','Hive','Hive',"//  TODO: why doesn't this use context? "
'Hive','Hive','Hive','//  Note: this is redundant with types '
'Hive','Hive','Hive','//  The following 2 lines are exactly what MySQL does TODO: why do we do this? '
'Hive','Hive','Hive','//  temporary variable for testing. This is added just to turn off this feature in case of a bug in   deployment. It has not been documented in hive-default.xml intentionally, this should be removed '
'Hive','Hive','Hive','//  TODO need session handle '
'Hive','Hive','Hive','//  This is kind of hacky - the read entity contains the old table, whereas   the write entity   contains the new table. This is needed for rename - both the old and the   new table names are   passed '
'Hive','Hive','Hive',"//  UNDONE: For now, don't add more small keys... "
'Hive','Hive','Hive','//  TODO: can this ever happen? '
'Hive','Hive','Hive',"//  TODO: there's a potential problem here if some table uses external schema like Avro,         with a very large type name. It seems like the view does not derive the SerDe from         the table, so it won't be able to just get the type from the deserializer like the         table does; we won't be able to properly store the type in the RDBMS metastore. "
'Hive','Hive','Hive','//  TODO: this should depends on input format and be in a map, or something. '
'Hive','Hive','Hive','//  TODO: we can actually consider storing ALL the delta encoded row offsets - not a lot of         overhead compared to the data itself, and with row offsets, we could use columnar         blocks for inconsistent splits. We are not optimizing for inconsistent splits for now. '
'Hive','Hive','Hive','//  TODO: should this just use physical IDs? '
'Hive','Hive','Hive','//  TODO: wtf?!! why is this in this method? This has nothing to do with anything. '
'Hive','Hive','Hive',"//  This class isn't used and I suspect does totally the wrong thing.  It's only here so that I   can provide some output format to the tables and partitions I create.  I actually write to "
'Hive','Hive','Hive','//  TODO: does arg need type cast? '
'Hive','Hive','Hive','// what??!! '
'Hive','Hive','Hive','//  TODO not sure this is the right exception '
'Hive','Hive','Hive','//  we need to convert the Hive type to the SQL type name   TODO: this would be better handled in an enum '
'Hive','Hive','Hive','//  TODO: NPE should not be thrown '
'Hive','Hive','Hive','//  CONSIDER: Allocate a larger initial size. '
'Hive','Hive','Hive','//  No good way to find out (may even have no app). '
'Hive','Hive','Hive','//  Hardcode SASL here. ZKDTSM only supports none or sasl and we never want none. '
'Hive','Hive','Hive','//  We support List<Object>, Set<Object> and Object[]   so we have to do differently. '
'Hive','Hive','Hive',"//  If wh is still null after just having initialized it, bail out - something's very wrong. "
'Hive','Hive','Hive','//  TODO Convert this to an Assert.fail once HIVE-14682 is fixed '
'Hive','Hive','Hive','//  TODO: we should be able to enable caches separately '
'Hive','Hive','Hive','//  For dynamic partitioned hash join, the big table will also be coming from a ReduceSinkOperator   Check for this condition.   TODO: use indexOf(), or parentRS.getTag()? '
'Hive','Hive','Hive','//  TODO:   Following HiveSubQueryFinder has been copied from RexUtil::SubQueryFinder   since there is BUG in there (CALCITE-1726).   Once CALCITE-1726 is fixed we should get rid of the following code '
'Hive','Hive','Hive','//  TODO: Extend rule so it can be applied for these cases. '
'Hive','Hive','Hive','//  TODO: Support case DATE: '
'Hive','Hive','Hive','//  TODO figure out a better way to set repeat for Binary type '
'Hive','Hive','Hive','//  TODO: If we are ok with breaking compatibility of existing 3rd party StorageHandlers,   this method could be moved to the HiveStorageHandler interface. '
'Hive','Hive','Hive','//  TODO: This global lock may not be necessary as all concurrent methods in ICacheableMetaStoreClient   are synchronized. '
'Hive','Hive','Hive','// todo: FileSystem#setPermission() - should this make sure to set 777 on jobs/ ? '
'Hive','Hive','Hive',"/*  * Builder for relational expressions. * TODO: *  Note that this is copied from Calcite's RelBulder *  because CALCITE-1493 hasn't been fixed yet *  This should be deleted and replaced with RelBuilder in SubqueryRemoveRule *  once CALCITE-1493 is fixed. *  EDIT: Although CALCITE-1493 has been fixed and released but HIVE now has special handling *    in join (it gets a flag to see if semi join is to be created or not). So we still can not *    replace this with Calcite's RelBuilder * * <p>{@code RelBuilder} does not make possible anything that you could not * also accomplish by calling the factory methods of the particular relational * expression. But it makes common tasks more straightforward and concise. * * <p>{@code RelBuilder} uses factories to create relational expressions. * By default, it uses the default factories, which create logical relational * expressions ({@link org.apache.calcite.rel.logical.LogicalFilter}, * {@link org.apache.calcite.rel.logical.LogicalProject} and so forth). * But you could override those factories so that, say, {@code filter} creates * instead a {@code HiveFilter}. * * <p>It is not thread-safe.  */"
'Hive','Hive','Hive','//  TODO: Setting autocommit should not generate an exception as long as it is set to false   beeLine.autocommitStatus(getConnection()); '
'Hive','Hive','Hive','//  TODO: precision and scale would be practically invalid for string conversion (38,38) '
'Hive','Hive','Hive','//  TODO: Should this really default to FETCH_NEXT? '
'Hive','Hive','Hive','//  TODO: Not sure about the use of this. Should we instead use workerIdentity as sessionId? '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#tableType(HCatTable.Type)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: trace ranges here? Between data cache and incomplete cb cache '
'Hive','Hive','Hive','//  FIXME: retain old error; or create a new one? '
'Hive','Hive','Hive',"//  we don't remove the work from the sparkWork here. The removal is done later. "
'Hive','Hive','Hive','//  TODO: need to move from Python to Java for the rest of the script. '
'Hive','Hive','Hive','//  check if input pruning is possible   TODO: this code is buggy - it relies on having one file per bucket; no MM support (by design). '
'Hive','Hive','Hive','//  todo: strictly speaking you can commit an empty txn, thus 2nd conjunct is wrong but   only   possible for for multi-stmt txns '
'Hive','Hive','Hive','//  View DDL   "alter view add partition" does not work because of the nature of implementation   of the DDL in hive. Hive will internally invoke another Driver on the select statement,   and HCat does not let "select" statement through. I cannot find a way to get around it   without modifying hive code. So just leave it unsupported. '
'Hive','Hive','Hive','// todo: to test these need to link against 3.x libs - maven profiles?  runStatementOnDriver("create table TFlat (a int, b int) stored as orc tblproperties(\'transactional\'=\'false\')");  runStatementOnDriver("create table TFlatText (a int, b int) stored as textfile tblproperties(\'transactional\'=\'false\')"); '
'Hive','Hive','Hive',"//  NOTE : This is hacky, and this section of code is fragile depending on DN code varnames   so it's likely to stop working at some time in the future, especially if we upgrade DN   versions, so we actively need to find a better way to make sure the leak doesn't happen   instead of just clearing out the cache after every call. "
'Hive','Hive','Hive','//  TODO: should never happen? '
'Hive','Hive','Hive',"//  UNDONE: Don't know why HIVE-12894 causes this to return 0?   assertEquals(0.33, reader.getProgress(), 0.01); "
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getLocation()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  we do not support Windows, we will revisit this if we really need it for windows. '
'Hive','Hive','Hive','//  Pass an empty list as no columns will be written to the file.   TODO I should be able to make this work for update '
'Hive','Hive','Hive','//  TODO: throw an exception? '
'Hive','Hive','Hive',"//  TODO: move to DynamicSerDe when it's ready "
'Hive','Hive','Hive','//  TODO: Replace with direct call to ProgressHelper, when reliably available. '
'Hive','Hive','Hive','//  TODO: this is the only place that uses keepTmpDir. Why? '
'Hive','Hive','Hive','//  TODO: use serdeConstants.COLLECTION_DELIM when the typo is fixed '
'Hive','Hive','Hive','//  Indicates whether a node had a recent communication failure.   This is primarily for tracking and logging purposes for the moment.   TODO At some point, treat task rejection and communication failures differently. '
'Hive','Hive','Hive','//  TODO: move other protocols to use this too. '
'Hive','Hive','Hive','//  TODO Move the following 2 properties out of Configuration to a constant. '
'Hive','Hive','Hive','/*  * Creates size estimators for java objects. The estimators attempt to do most of the reflection * work at initialization time, and also take some shortcuts, to minimize the amount of work done * during the actual estimation. * TODO: clean up  */'
'Hive','Hive','Hive','//  TODO: move to a base class? '
'Hive','Hive','Hive','//  Since the MapJoin has had all of its other parents removed at this point,   it would be bad here if processReduceSinkToHashJoin() tries to do anything '
'Hive','Hive','Hive','// todo: should this be done for MM?  is it ok to use CombineHiveInputFormat with MM '
'Hive','Hive','Hive','//  todo this should be changed to be evaluated lazily, especially for single segment case '
'Hive','Hive','Hive','//  TODO Disable blacklisting in Tez when using LLAP, until this is properly supported.   Blacklisting can cause containers to move to a terminating state, which can cause attempt to be marked as failed.   This becomes problematic when we set #allowedFailures to 0   TODO HIVE-13484 What happens when we try scheduling a task on a node that Tez at this point thinks is blacklisted. '
'Hive','Hive','Hive','// todo should this check be in conformToAcid()? '
'Hive','Hive','Hive','//  TODO: Split count is not same as no of buckets '
'Hive','Hive','Hive','// TODO: Cols that come through PTF should it retain (VirtualColumness)? '
'Hive','Hive','Hive','//  TODO : verify if any quoting is needed for keys '
'Hive','Hive','Hive','// todo: this should check that the job actually completed and likely use completion time '
'Hive','Hive','Hive','//  TODO: move this to logicalEquals '
'Hive','Hive','Hive','/*  * TODO:<br> * 1. Could we use combined RR instead of list of RR ?<br> * 2. Use Column Processing from TypeCheckProcFactory<br> * 3. Why not use GB expr ?  */'
'Hive','Hive','Hive',"//  TODO: Temporary for debugging. Doesn't interfere with MTT failures (unlike LOG.debug). "
'Hive','Hive','Hive','//  TODO Deprecation reason does not seem to reflect in the config ?   The ordering is important in case of keys which are also deprecated.   Unset will unset the deprecated keys and all its variants. '
'Hive','Hive','Hive',"//  GrpSet Col already part of input RS   TODO: Can't we just copy the ExprNodeDEsc from input (Do we need to   explicitly set table alias to null & VC to false "
'Hive','Hive','Hive',"// todo: DataOperationType is set conservatively here, we'd really want to distinguish update/delete  and insert/select and if resource (that is written to) is ACID or not "
'Hive','Hive','Hive',"//  TODO [MM gap]: CTAS may currently be broken. It used to work. See the old code, and why isCtas isn't used? "
'Hive','Hive','Hive','// todo: add partitioned table that needs conversion to MM/Acid '
'Hive','Hive','Hive','//  TODO: Do we really need all this nonsense? '
'Hive','Hive','Hive','//  This is bad, but we have to sort the keys of the maps in order   to be commutative. '
'Hive','Hive','Hive','// @TODO this seems to be the same as org.apache.hadoop.hive.ql.parse.CalcitePlanner.TableType.DRUID do we really need both '
'Hive','Hive','Hive','//  TODO: NPE should not be thrown. '
'Hive','Hive','Hive','/*  * Tests for the worker thread and its MR jobs. * todo: most delta files in this test suite use txn id range, i.e. [N,N+M] * That means that they all look like they were created by compaction or by streaming api. * Delta files created by SQL should have [N,N] range (and a suffix in v1.3 and later) * Need to change some of these to have better test coverage.  */'
'Hive','Hive','Hive','//  not good if we reach here, this was initialized at setMetaStoreHandler() time.   this means handler.getWh() is returning null. Error out. '
'Hive','Hive','Hive','/*  * The processor context for partition pruner. This contains the table alias * that is being currently processed. * TODO: this class may be not useful.  */'
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#nullDefinedAs()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: enable this for production debug, switching between two small buffers?  new CasLog(); '
'Hive','Hive','Hive',"/*  * A helper class to isolate newer HBase features from users running against older versions of * HBase that don't provide those features. * * TODO: remove this class when it's okay to drop support for earlier version of HBase.  */"
'Hive','Hive','Hive','//  NOTE: For Uniform Hash or no buckets/partitions, when the key is empty, we will use the VectorReduceSinkEmptyKeyOperator instead. '
'Hive','Hive','Hive','//  TODO: verify if this is needed '
'Hive','Hive','Hive','//  TODO: this class is completely unnecessary... 1-on-1 mapping with parent. '
'Hive','Hive','Hive','/*    * If moving across different FileSystems or differnent encryption zone, need to do a File copy instead of rename.   * TODO- consider if need to do this for different file authority.   * @throws HiveException    */'
'Hive','Hive','Hive','//  TODO: support propagation for partitioning/ordering in windowing '
'Hive','Hive','Hive','//  named columns join   TODO: we can also do the same for semi join but it seems that other   DBMS does not support it yet. '
'Hive','Hive','Hive','/*  * Helper class that generates SQL queries with syntax specific to target DB * todo: why throw MetaException?  */'
'Hive','Hive','Hive','//  We can continue   TODO: Need to check that this is the same MV that we are rebuilding '
'Hive','Hive','Hive','//  Guess if CommonJoinResolver will work. If CommonJoinResolver may   convert a join operation, correlation optimizer will not merge that join.   TODO: If hive.auto.convert.join.noconditionaltask=true, for a JoinOperator   that has both intermediate tables and query input tables as input tables,   we should be able to guess if this JoinOperator will be converted to a MapJoin   based on hive.auto.convert.join.noconditionaltask.size. '
'Hive','Hive','Hive','//  TODO: could we log in from ticket cache instead? no good method on UGI right now. '
'Hive','Hive','Hive',"//  TODO: support for binary spec? presumably we'd parse it somewhere earlier "
'Hive','Hive','Hive','//  redundant TODO: callers of this often get part_vals out of name for no reason... '
'Hive','Hive','Hive','//  TODO MS-SPLIT for now, keep a copy of HiveConf around as we need to call other methods with   it. This should be changed to Configuration once everything that this calls that requires   HiveConf is moved to the standalone metastore. '
'Hive','Hive','Hive','/*    * Closes the client releasing any {@link IMetaStoreClient meta store} connections held. Does not notify any open   * transactions (TODO: perhaps it should?)    */'
'Hive','Hive','Hive','//  TODO: will this work? '
'Hive','Hive','Hive',"//  We don't have the entire part; copy both whatever we intended to cache, and the rest,   to an allocated buffer. We could try to optimize a bit if we have contiguous buffers   with gaps, but it's probably not needed. "
'Hive','Hive','Hive',"/*      * TODO: Hack fix until HIVE-5848 is addressed. non-exact type shouldn't be promoted     * to exact type, as FunctionRegistry.getCommonClass() might do. This corrects     * that.      */"
'Hive','Hive','Hive','//  FIXME: old implementation returned null; exception maybe? '
'Hive','Hive','Hive','//  Optimize the scenario when there are no grouping keys - only 1 reducer is needed '
'Hive','Hive','Hive','//  TODO: is Decimal an exact numeric or approximate numeric? '
'Hive','Hive','Hive',"//  TODO: why doesn't this use one of the existing options implementations?! "
'Hive','Hive','Hive',"//  Ensure there's no threadlocal. We don't expect one.   We don't ever want to create key paths with world visibility. Why is that even an option?!! "
'Hive','Hive','Hive','/*    * todo: when job is complete, should print the msgCount table to log     */'
'Hive','Hive','Hive','//  TODO explain should use a FetchTask for reading '
'Hive','Hive','Hive','//  This detail not desired. '
'Hive','Hive','Hive','//  TODO: use the other HdfsUtils here '
'Hive','Hive','Hive','//  First, check if the registry has been updated since the error, and skip the error if   we have received new, valid registry info (TODO: externally, add a grace period for this?). '
'Hive','Hive','Hive','//  TODO: calculate from cached values. '
'Hive','Hive','Hive','//  Array size not big enough? '
'Hive','Hive','Hive','//  UNDONE: Needed to longTest? '
'Hive','Hive','Hive',"//  TODO Reduce the number of lookups that happen here. This shouldn't go to HDFS for each call. "
'Hive','Hive','Hive','//  No data to read for this stripe. Check if we have some included index-only columns.   TODO: there may be a bug here. Could there be partial RG filtering on index-only column? '
'Hive','Hive','Hive','//  FIXME. Do the right thing Luke. '
'Hive','Hive','Hive','//  TODO make it so I can randomize the column order '
'Hive','Hive','Hive','//  TODO: right now we treat each slice as a stripe with a single RG and never bother         with indexes. In phase 4, we need to add indexing and filtering. '
'Hive','Hive','Hive','//  TODO: a pattern from Curator. Better error handling? '
'Hive','Hive','Hive','//  IO thread pool. Listening is used for unhandled errors for now (TODO: remove?) '
'Hive','Hive','Hive',"//  Now, we need to look for any values that the user set that MetastoreConf doesn't know about.   TODO Commenting this out for now, as it breaks because the conf values aren't getting properly   interpolated in case of variables.  See HIVE-17788. "
'Hive','Hive','Hive','//  FIXME: including this in the signature will almost certenly differ even if the operator is doing the same   there might be conflicting usages of logicalCompare? '
'Hive','Hive','Hive','//  MultiMRInput may not. Fix once TEZ-3302 is resolved. '
'Hive','Hive','Hive','//  Preempt only if there are no pending preemptions on the same host   When the premption registers, the request at the highest priority will be given the slot,   even if the initial preemption was caused by some other task.   TODO Maybe register which task the preemption was for, to avoid a bad non-local allocation. '
'Hive','Hive','Hive','//  TODO: this is wrong; this test sets up dummy txn manager and so it cannot create ACID tables.         This used to work by accident, now this works due a test flag. The test needs to be fixed.         Also applies for a couple more tests. '
'Hive','Hive','Hive','//  TODO: why is this needed? we could just save the host and port? '
'Hive','Hive','Hive','//  TODO There needs to be a mechanism to figure out different attempts for the same task. Delays   could potentially be changed based on this. '
'Hive','Hive','Hive',"// it's not wrong to take all delete events for bucketed tables but it's more efficient  to only take those that belong to the 'bucket' assuming we trust the file name  un-bucketed table - get all files "
'Hive','Hive','Hive','/*        * Determine an *initial* input vector expression.       *       * Note: we may have to convert it later from DECIMAL_64 to regular decimal.        */'
'Hive','Hive','Hive','//  Note - this is a little bit confusing; the special treatment of stripe-level buffers   is because we run the ColumnStreamData refcount one ahead (as specified above). It   may look like this would release the buffers too many times (one release from the   consumer, one from releaseInitialRefcounts below, and one here); however, this is   merely handling a special case where all the batches that are sharing the stripe-   level stream have been processed before we got here; they have all decRef-ed the CSD,   but have not released the buffers because of that extra refCount. So, this is   essentially the "consumer" refcount being released here. '
'Hive','Hive','Hive',"//  this doesn't always work, since some JDBC drivers (e.g.,   Oracle's) return a blank string from getTableName. "
'Hive','Hive','Hive','//  TODO: Can this be moved out of the main callback path '
'Hive','Hive','Hive','// TODO: add more expected test result here '
'Hive','Hive','Hive',"//  TODO MS-SPLIT - for now we have construct this by reflection because IMetaStoreClient   can't be   moved until after HiveMetaStore is moved, which can't be moved until this is moved. "
'Hive','Hive','Hive','// todo: need a test where we actually have more than 1 file '
'Hive','Hive','Hive','//  Here comes the ugly part... '
'Hive','Hive','Hive','//  To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  OPTIMIZATION for later. '
'Hive','Hive','Hive','//  Is there a way to provide char length here?   It might actually be ok as long as there is an object inspector (with char length)   receiving this value. '
'Hive','Hive','Hive','//  This command exists solely to output this message. TODO: can we do it w/o an error? '
'Hive','Hive','Hive','//  TODO: Add support for AND clauses under OR clauses   first-cut takes a known minimal tree and no others.   $expr = (a=1)           (a=1 or a=2)           (a in (1,2))           ($expr and *) '
'Hive','Hive','Hive','//  TODO: Set this up as a tree, instead of a flat list. '
'Hive','Hive','Hive',"/*  * Operator factory for predicate pushdown processing of operator graph Each * operator determines the pushdown predicates by walking the expression tree. * Each operator merges its own pushdown predicates with those of its children * Finally the TableScan operator gathers all the predicates and inserts a * filter operator after itself. TODO: Further optimizations 1) Multi-insert * case 2) Create a filter operator for those predicates that couldn't be pushed * to the previous operators in the data flow 3) Merge multiple sequential * filter predicates into so that plans are more readable 4) Remove predicates * from filter operators that have been pushed. Currently these pushed * predicates are evaluated twice.  */"
'Hive','Hive','Hive','//  HIVE-12244 call currently ineffective '
'Hive','Hive','Hive','//  Note: no location check; the buffer is always locked for move here. '
'Hive','Hive','Hive',"//  TODO MS-SPLIT For now if we cannot load the default PartitionExpressionForMetastore   class (since it's from ql) load the DefaultPartitionExpressionProxy, which just throws   UnsupportedOperationExceptions.  This allows existing Hive instances to work but also   allows us to instantiate the metastore stand alone for testing.  Not sure if this is   the best long term solution. "
'Hive','Hive','Hive','//  TODO: this is very brittle given that Hive supports nested directories in the tables.         The caller should pass a flag explicitly telling us if the directories in the         input are data, or parent of data. For now, retain this for backward compat. '
'Hive','Hive','Hive','//  TODO: these appear to always be called under write lock. Do they need sync? '
'Hive','Hive','Hive','//  TODO: we could perhaps reuse the same directory for HiveResources? '
'Hive','Hive','Hive',"/*    * If there's a mismatch between static and object name, or a mismatch between   * vector and non-vector operator name, the optimizer doens't work correctly.    */"
'Hive','Hive','Hive','//  Not really sure how to refer to this (or if we can).   TODO: We could find a different from branch for the union, that might have an alias?         Or we could add an alias here to refer to, but that might break other branches. '
'Hive','Hive','Hive','//  TODO : instantiating FS objects are generally costly. Refactor '
'Hive','Hive','Hive','//  TODO: when PB is upgraded to 2.6, newInstance(ByteBuffer) method should be used here. '
'Hive','Hive','Hive','/*  All the code paths below propagate nulls even if neither arg2 nor arg3     * have nulls. This is to reduce the number of code paths and shorten the     * code, at the expense of maybe doing unnecessary work if neither input     * has nulls. This could be improved in the future by expanding the number     * of code paths.      */'
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatPartition.#getPartitionKeyValMap()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','// TODO: Remove this once Calcite FilterProjectTransposeRule can take rule operand '
'Hive','Hive','Hive','//  TODO: we could fall back to trying one by one and only ignore the failed ones. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getStorageHandler()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive',"//  First try temp table   TODO CAT - I think the right thing here is to always put temp tables in the current   catalog.  But we don't yet have a notion of current catalog, so we'll have to hold on   until we do. "
'Hive','Hive','Hive','// TODO: set other Table properties as needed '
'Hive','Hive','Hive',"//  Don't pass in the pool set - not thread safe; if the user is trying to force us to   use a non-existent pool, we want to fail anyway. We will fail later during get. "
'Hive','Hive','Hive','// TODO: Since OperationLog is moved to package o.a.h.h.ql.session,   we may add a Enum there and map FetchOrientation to it. '
'Hive','Hive','Hive','//  TODO: ideally this only needs to be called if the result   type will also change. However, since that requires   support from type inference rules to tell whether a rule   decides return type based on input types, for now all   operators will be recreated with new type if any operand   changed, unless the operator has "built-in" type. '
'Hive','Hive','Hive','//  TODO: ideally we should store shortened representation of only the necessary fields         in HBase; it will probably require custom SARG application code. '
'Hive','Hive','Hive',"//  This is a massive hack.  The compactor threads have to access packages in ql (such as   AcidInputFormat).  ql depends on metastore so we can't directly access those.  To deal   with this the compactor thread classes have been put in ql and they are instantiated here   dyanmically.  This is not ideal but it avoids a massive refactoring of Hive packages.     Wrap the start of the threads in a catch Throwable loop so that any failures   don't doom the rest of the metastore. "
'Hive','Hive','Hive','//  FIXME: there were 2 afterclass methods...i guess this is the right order...maybe not '
'Hive','Hive','Hive','//  TODO HIVE-13483 Get all of these properties from the registry. This will need to take care of different instances   publishing potentially different values when we support changing configurations dynamically. '
'Hive','Hive','Hive','//  TODO: replace with withTimeout after we get the relevant guava upgrade. '
'Hive','Hive','Hive',"/*    * TODO: need to turn on rules that's commented out and add more if necessary.    */"
'Hive','Hive','Hive','/* todo: handle renaming files somewhere */'
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getBucketCols()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive',"//  TODO: this doesn't include superclass. "
'Hive','Hive','Hive','//  FIXME: move this to ColStat related part '
'Hive','Hive','Hive',"//  TODO: Not sure that this is the correct behavior. It doesn't make sense to create the   partition without column info. This should be investigated later. "
'Hive','Hive','Hive','//  Note : preservePartitionSpecs=true implies inheritTableSpecs=false but   but preservePartitionSpecs=false(default) here is not sufficient enough   info to set inheritTableSpecs=true '
'Hive','Hive','Hive',"//  FIXME: this should be changeto valueOf ...   that will also kill that fallback 'none' which is I think more like a problem than a   feature ;) "
'Hive','Hive','Hive','//  TODO Setup a set of threads to process incoming requests.   Make sure requests for a single dag/query are handled by the same thread '
'Hive','Hive','Hive','//  TODO: add alter database support in HCat '
'Hive','Hive','Hive','//  TODO add tests for partitions in other catalogs '
'Hive','Hive','Hive',"//  TODO I suspect we could skip much of the stuff above this in the function in the case   of update and delete.  But I don't understand all of the side effects of the above   code and don't want to skip over it yet. "
'Hive','Hive','Hive','//  TODO: expireAfterAccess locks cache segments on put and expired get. It doesn\'t look too bad,         but if we find some perf issues it might be a good idea to remove this - we are probably         not caching that many constructors.   Note that weakKeys causes "==" to be used for key compare; this will only work   for classes in the same classloader. Should be ok in this case. '
'Hive','Hive','Hive','//  TODO Why is the queue name set again. It has already been setup via setQueueName. Do only one of the two.'
'Hive','Hive','Hive','//  TODO Create and init session sets up queue, isDefault - but does not initialize the configuration '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#sortCols(Map<String, String>)}.   To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: Handle Query Hints; currently we ignore them '
'Hive','Hive','Hive','//  TODO: Currently we only support EQUAL operator on two references.   We might extend the logic to support other (order-preserving)   UDFs here. '
'Hive','Hive','Hive','//  is the right was at the left side of a right outer join? '
'Hive','Hive','Hive','//  TODO: why does this only kill non-default sessions?   Nothing for workload management since that only deals with default ones. '
'Hive','Hive','Hive',"//  TODO: should this use getPartitionDescFromPathRecursively? That's what other code uses. "
'Hive','Hive','Hive','//  TODO: Fix this '
'Hive','Hive','Hive',"//  ### FIXME: doing the multi-line handling down here means   higher-level logic never sees the extra lines. So,   for example, if a script is being saved, it won't include   the continuation lines! This is logged as sf.net   bug 879518. "
'Hive','Hive','Hive','//  REVIEW jhyde 29-Oct-2007: This rule is non-static, depends on the state   of members in RelDecorrelator, and has side-effects in the decorrelator.   This breaks the contract of a planner rule, and the rule will not be   reusable in other planners. '
'Hive','Hive','Hive',"//  We can loop thru all the tables to check if they are ACID first and then perform cleanup,   but it's more efficient to unconditionally perform cleanup for the database, especially   when there are a lot of tables "
'Hive','Hive','Hive','//  TODO: Implement this '
'Hive','Hive','Hive','//  TODO: allow using unsafe optionally.   bounds check first, to trigger bugs whether the first byte matches or not '
'Hive','Hive','Hive',"//  TODO: this doesn't appear to be used anywhere. "
'Hive','Hive','Hive','//  for auto convert map-joins, it not safe to dedup in here (todo) '
'Hive','Hive','Hive',"//  We're scanning a tree from roots to leaf (this is not technically   correct, demux and mux operators might form a diamond shape, but   we will only scan one path and ignore the others, because the   diamond shape is always contained in a single vertex). The scan   is depth first and because we remove parents when we pack a pipeline   into a vertex we will never visit any node twice. But because of that   we might have a situation where we need to connect 'work' that comes after   the 'work' we're currently looking at.     Also note: the concept of leaf and root is reversed in hive for historical "
'Hive','Hive','Hive','//  The following parameters are not supported yet. TODO Add support '
'Hive','Hive','Hive','//  TODO: this should be   unique '
'Hive','Hive','Hive','// todo: Concurrent insert/update of same partition - should pass '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#fieldsTerminatedBy()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: this is invalid for ACID tables, and we cannot access AcidUtils here. '
'Hive','Hive','Hive','/*    * After each major compaction, stats need to be updated on each column of the   * table/partition which previously had stats.   * 1. create a bucketed ORC backed table (Orc is currently required by ACID)   * 2. populate 2 partitions with data   * 3. compute stats   * 4. insert some data into the table using StreamingAPI   * 5. Trigger major compaction (which should update stats)   * 6. check that stats have been updated   *   * @throws Exception todo:   *                   2. add non-partitioned test   *                   4. add a test with sorted table?    */'
'Hive','Hive','Hive','/*    * in Hive 1.3.0 delta file names changed to delta_xxxx_yyyy_zzzz; prior to that   * the name was delta_xxxx_yyyy.  We want to run compaction tests such that both formats   * are used since new (1.3) code has to be able to read old files.    */'
'Hive','Hive','Hive','//  TODO: should call HiveHFileOutputFormat#setOutputPath '
'Hive','Hive','Hive','//  TODO: we could try to get superclass or generic interfaces. '
'Hive','Hive','Hive','//  TODO: this actually calls the metrics system and getMetrics - that may be expensive.         For now it looks like it should be ok to do on WM thread. '
'Hive','Hive','Hive','//  TODO: get rid of the builders - they serve no purpose... just call ctors directly. '
'Hive','Hive','Hive',"//  TODO: Verify GB having is not a separate filter (if so we shouldn't   introduce derived table) "
'Hive','Hive','Hive',"/* Q: why don't we lock the snapshot here???  Instead of having client make an explicit call    whenever it chooses    A: If we want to rely on locks for transaction scheduling we must get the snapshot after lock    acquisition.  Relying on locks is a pessimistic strategy which works better under high    contention. */"
'Hive','Hive','Hive','//  TODO: temporary, need to expose from ORC utils (note the difference in null checks) '
'Hive','Hive','Hive','//  TODO: maybe use stack of est+obj pairs instead of recursion. '
'Hive','Hive','Hive','//  TODO: shortcut for last col below length? '
'Hive','Hive','Hive','//  TEMPORARY: In order to avoid a new version of storage-api, do the conversion here... '
'Hive','Hive','Hive','// TODO: these constraints should be supported for partition columns '
'Hive','Hive','Hive','//  We have a nested setcolref. Process that and start from scratch TODO: use stack? '
'Hive','Hive','Hive','//  TODO: is this correct? based on the same logic as HIVE-14200 '
'Hive','Hive','Hive','//  TODO refactor the following into the pipeline '
'Hive','Hive','Hive','//  TODO: change to FileInputFormat.... field after MAPREDUCE-7086. '
'Hive','Hive','Hive','//  TODO: if we ever use this endpoint for anything else, refactor cycling into a separate class. '
'Hive','Hive','Hive','//  something is seriously wrong if this is happening '
'Hive','Hive','Hive','//  TODO: Ordering seems to affect the distinctness, needs checking, disabling. '
'Hive','Hive','Hive','//  TODO: avoid put() by working directly in OutStream? '
'Hive','Hive','Hive',"//  Can't fetch prefix on colqual, must pull the entire qualifier   TODO use an iterator to do the filter, server-side. "
'Hive','Hive','Hive',"//  These tests inherently cause exceptions to be written to the test output   logs. This is undesirable, since you it might appear to someone looking   at the test output logs as if something is failing when it isn't. Not   sure "
'Hive','Hive','Hive','//     return HiveConf.getPositionFromInternalName(fieldName);   The above line should have been all the implementation that   we need, but due to a bug in that impl which recognizes   only single-digit columns, we need another impl here. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getPartCols()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: Verify if we need to use ConstantObjectInspector to unwrap data '
'Hive','Hive','Hive','//  2) Generate HiveTableFunctionScan RelNode for lateral view   TODO: Support different functions (not only INLINE) with LATERAL VIEW JOIN '
'Hive','Hive','Hive','// todo: this is actually not adding anything since LockComponent uses a Trie to "promote" a lock  except by accident - when we have a partitioned target table we have a ReadEntity and WriteEntity  for the table, so we mark ReadEntity and then delete WriteEntity (replace with Partition entries)  so DbTxnManager skips Read lock on the ReadEntity....  input.noLockNeeded()? '
'Hive','Hive','Hive','// TODO- cleanup once parquet support Timestamp type annotation. '
'Hive','Hive','Hive','//  TODO: buffers are accounted for at allocation time, but ideally we should report the memory         overhead from the java objects to memory manager and remove it when discarding file. '
'Hive','Hive','Hive','//  TODO: cleanup this '
'Hive','Hive','Hive','//  TODO: HIVE-13624 Do we need maxLength checking? '
'Hive','Hive','Hive',"//  In addBatchToWriter, we have passed the batch to both ORC and operator pipeline   (neither ever changes the vectors). We'd need a set of vectors batch to write to.   TODO: for now, create this from scratch. Ideally we should return the vectors from ops.         We could also have the ORC thread create it for us in its spare time... "
'Hive','Hive','Hive','//  TODO: enforce max length '
'Hive','Hive','Hive','//  TODO: would it make sense to return buffers asynchronously? '
'Hive','Hive','Hive','//  TODO: The best solution is to support NaN in expression reduction. '
'Hive','Hive','Hive',"//  TODO: ideally, this should be moved outside to HiveMetaStore to be shared between         all the RawStore-s. Right now there's no method to create a pool. "
'Hive','Hive','Hive','//  TODO HIVE-14042. Abort handling. '
'Hive','Hive','Hive','// todo: update to search by ID once HIVE-13353 is done '
'Hive','Hive','Hive','//  Note: type param is not available here. '
'Hive','Hive','Hive','//  TODO: When function privileges are implemented, they should be deleted here. '
'Hive','Hive','Hive','//  TODO: perhaps move to Orc InStream? '
'Hive','Hive','Hive','// TODO: should not throw different exceptions for different HMS deployment types '
'Hive','Hive','Hive','//  TODO: Clean up all the other paths that are created. '
'Hive','Hive','Hive','//  TODO: ideally when col-stats-accurate stuff is stored in some sane structure, this should         to retrieve partsToUpdate in a single query; no checking partition params in java. '
'Hive','Hive','Hive','//  UNDONE: Missing date/time interval data types '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getCols()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: refactor this out '
'Hive','Hive','Hive','//  TODO This needs to be looked at. Map of Map to Map... Made concurrent for now since split generation   can happen in parallel. '
'Hive','Hive','Hive','//  TODO: Fix the expressions later. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link #create(HCatTable)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: handle ExprNodeColumnListDesc '
'Hive','Hive','Hive','//  5. Push Down Semi Joins  TODO: Enable this later '
'Hive','Hive','Hive',"// todo: add TXNS.COMMENT filed and set it to 'aborted by system due to timeout'  easier to read logs "
'Hive','Hive','Hive','//  TODO RIVEN switch this back to package level when we can move TestHadoopAuthBridge23 into   riven. '
'Hive','Hive','Hive','//  TODO Change this over to just store local dir indices, instead of the entire path. Far more efficient. '
'Hive','Hive','Hive','//  TODO: we might revisit this in create-drop-recreate cases, needs some thinking on. '
'Hive','Hive','Hive','//  TODO: why is this in text formatter?!! '
'Hive','Hive','Hive',"/*  * NOTE: this rule is replicated from Calcite's SubqueryRemoveRule * Transform that converts IN, EXISTS and scalar sub-queries into joins. * TODO: *  Reason this is replicated instead of using Calcite's is *    Calcite creates null literal with null type but hive needs it to be properly typed * * <p>Sub-queries are represented by {@link RexSubQuery} expressions. * * <p>A sub-query may or may not be correlated. If a sub-query is correlated, * the wrapped {@link RelNode} will contain a {@link RexCorrelVariable} before * the rewrite, and the product of the rewrite will be a {@link Correlate}. * The Correlate can be removed using {@link RelDecorrelator}.  */"
'Hive','Hive','Hive','//  truncate (TODO: posix_fallocate?) '
'Hive','Hive','Hive',"//  NOTE: This code tries to get all key-value pairs out of the map.   It's not very efficient. The more efficient way should be to let MapOI   return an Iterator. This is currently not supported by MapOI yet. "
'Hive','Hive','Hive','//  UNDONE: Why do we need to specify BinarySortableSerDe explicitly here??? '
'Hive','Hive','Hive','// todo: last param is bogus. why is this hardcoded? '
'Hive','Hive','Hive',"//  TODO: move this to a common method   Note: this gets IDs by name, so we assume indices don't need to be adjusted for ACID. "
'Hive','Hive','Hive','//  DecorrelateRexShuttle ends up decorrelating expressions cor.col1 <> $4   to $4=$4 if value generator is not generated, $4<>$4 is further simplified   to false. This is wrong and messes up the whole tree. To prevent this visitCall   is overridden to rewrite/simply such predicates to is not null.   we also need to take care that we do this only for correlated predicates and   not user specified explicit predicates   TODO:  This code should be removed once CALCITE-1851 is fixed and   there is support of not equal '
'Hive','Hive','Hive',"//  TODO: need proper clone. Meanwhile, let's at least keep this horror in one place "
'Hive','Hive','Hive','//  Note that we pass job config to the record reader, but use global config for LLAP IO.   TODO: add tracing to serde reader '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatPartition.#getTableName()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  FIXME: support template types. It currently has conflict with ExprNodeConstantDesc '
'Hive','Hive','Hive','/*  * This rule is a copy of {@link org.apache.calcite.rel.rules.AggregateReduceFunctionsRule} * that regenerates Hive specific aggregate operators. * * TODO: When CALCITE-2216 is completed, we should be able to remove much of this code and * just override the relevant methods. * * Planner rule that reduces aggregate functions in * {@link org.apache.calcite.rel.core.Aggregate}s to simpler forms. * * <p>Rewrites: * <ul> * * <li>AVG(x) &rarr; SUM(x) / COUNT(x) * * <li>STDDEV_POP(x) &rarr; SQRT( *     (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x)) *    / COUNT(x)) * * <li>STDDEV_SAMP(x) &rarr; SQRT( *     (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x)) *     / CASE COUNT(x) WHEN 1 THEN NULL ELSE COUNT(x) - 1 END) * * <li>VAR_POP(x) &rarr; (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x)) *     / COUNT(x) * * <li>VAR_SAMP(x) &rarr; (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x)) *        / CASE COUNT(x) WHEN 1 THEN NULL ELSE COUNT(x) - 1 END * </ul>  */'
'Hive','Hive','Hive','//  TODO: Handle more than 2 inputs for setop '
'Hive','Hive','Hive','//  TODO: separate model is needed for compressedOops, which can be guessed from memory size. '
'Hive','Hive','Hive','// TODO: Should we convert MultiJoin to be a child of HiveJoin '
'Hive','Hive','Hive',"//  TODO should be doing security check here.  Users should not be   able to see each other's locks. "
'Hive','Hive','Hive','//  We do no handle anything but OK for now. Again, we need a real client for this API.   TODO: handle 401 and return a new connection? nothing for now '
'Hive','Hive','Hive',"//  TODO: close basically resets the object to a bunch of nulls.         We should ideally not reuse the object because it's pointless and error-prone. "
'Hive','Hive','Hive',"// todo: createOptionsForReader() assumes it's !isOriginal.... why? "
'Hive','Hive','Hive',"//  TODO: Required due to SessionState.getHDFSSessionPath. Why wasn't it required before? "
'Hive','Hive','Hive','//  TODO Change this to not serialize the entire Configuration - minor. '
'Hive','Hive','Hive','//  TODO: For object inspector fields, assigning 16KB for now. To better estimate the memory size every   object inspectors have to implement MemoryEstimate interface which is a lot of change with little benefit compared '
'Hive','Hive','Hive','//  UNDONE: Add support for DATE, TIMESTAMP, INTERVAL_YEAR_MONTH, INTERVAL_DAY_TIME... '
'Hive','Hive','Hive',"//  TODO: there was code here to create guess-estimate for collection wrt how usage changes   when removing elements. However it's too error-prone for anything involving   pre-allocated capacity, so it was discarded. "
'Hive','Hive','Hive','//  Extract the buckedID from pathFilesMap, this is more accurate method,   however. it may not work in certain cases where buckets are named   after files used while loading data. In such case, fallback to old   potential inaccurate method.   The accepted file names are such as 000000_0, 000001_0_copy_1. '
'Hive','Hive','Hive','//  This is a bit hackish to fix mismatch between SARG and Hive types   for Timestamp and Date. TODO: Move those types to storage-api. '
'Hive','Hive','Hive','//  TODO HIVE-14042. Move to using a loop and a timed wait once TEZ-3302 is fixed. '
'Hive','Hive','Hive','//  TODO: add a configurable option to skip the history and just drop it? '
'Hive','Hive','Hive','//  TODO: refactor this into an utility, LLAP tests use this pattern a lot '
'Hive','Hive','Hive','//  TODO: make aliases unique, otherwise needless rewriting takes place '
'Hive','Hive','Hive','/*    * Derive additional attributes to be rendered by EXPLAIN.   * TODO: this method is relied upon by custom input formats to set jobconf properties.   *       This is madness? - This is Hive Storage Handlers!    */'
'Hive','Hive','Hive','/*    * Connects to the {@link IMetaStoreClient meta store} that will be used to manage {@link Transaction} life-cycles.   * Also checks that the tables destined to receive mutation events are able to do so. The client should only hold one   * open transaction at any given time (TODO: enforce this).    */'
'Hive','Hive','Hive','//  TODO: this should have an option for directory to inherit from the parent table,         including bucketing and list bucketing, for the use in compaction when the         latter runs inside a transaction. '
'Hive','Hive','Hive','//  UNDONE: Parameterize for implementation variation? '
'Hive','Hive','Hive','//  TODO: ifExists could be moved to metastore. In fact it already supports that. Check it         for now since we get parts for output anyway, so we can get the error message         earlier... If we get rid of output, we can get rid of this. '
'Hive','Hive','Hive','//  FIXME: moved default value to here...for now   i think this features is never really used from the command line '
'Hive','Hive','Hive','//  TODO : Should be moved out. '
'Hive','Hive','Hive','//  TODO - types need to be checked. '
'Hive','Hive','Hive','//  TODO: handle multi joins '
'Hive','Hive','Hive',"//  TODO: ugly hack because Java doesn't have dtors and Tez input hangs on shutdown. "
'Hive','Hive','Hive','//  TODO: Make script output prefixing configurable. Had to disable this since   it results in lots of test diffs. '
'Hive','Hive','Hive','//  TODO: also support fileKey in splits, like OrcSplit does '
'Hive','Hive','Hive','//  TODO: when txn stats are implemented, use writeIds to determine stats accuracy '
'Hive','Hive','Hive',"//  Hive is pretty simple (read: stupid) in writing out values via the serializer.   We're just going to go through, matching indices.  Hive formats normally   handle mismatches with null.  We don't have that option, so instead we'll   end up throwing an exception for invalid records. "
'Hive','Hive','Hive','//  TODO handle negations '
'Hive','Hive','Hive','//  TODO: handle task to container map events in case of hard failures '
'Hive','Hive','Hive','// TODO: partition names in getPartitionsByNames are not case insensitive '
'Hive','Hive','Hive','//  todo this should be configured in serde '
'Hive','Hive','Hive','//  TODO: Have to put in the support for AS clause '
'Hive','Hive','Hive','//  Ideally we should use HiveRelNode convention. However, since Volcano planner   throws in that case because DruidQuery does not implement the interface,   we set it as Bindable. Currently, we do not use convention in Hive, hence that   should be fine.   TODO: If we want to make use of convention (e.g., while directly generating operator   tree instead of AST), this should be changed. '
'Hive','Hive','Hive','// Call getSplit on the InputFormat, create an HCatSplit for each  underlying split. When the desired number of input splits is missing,  use a default number (denoted by zero).  TODO(malewicz): Currently each partition is split independently into  a desired number. However, we want the union of all partitions to be  split into a desired number while maintaining balanced sizes of input '
'Hive','Hive','Hive','//  TODO: do we need to handle the "this is what MySQL does" here? '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#bucketCols(List<FieldSchema>) and HCatTable.#numBuckets(int)}.   To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO Watches on the output dirs need to be cancelled at some point. For now - via the expiry. '
'Hive','Hive','Hive','/*          * TODO: Use the hard link feature of hdfs         * once https://issues.apache.org/jira/browse/HDFS-3370 is done          */'
'Hive','Hive','Hive','//  TODO: allow >1 port per host? '
'Hive','Hive','Hive',"//  NOTE: This is for generating the internal path name for partitions. Users   should always use the MetaStore API to get the path name for a partition.   Users should not directly take partition values and turn it into a path   name by themselves, because the logic below may change in the future.     In the future, it's OK to add new chars to the escape list, and old data   won't be corrupt, because the full path name in metastore is stored.   In that case, Hive will continue to read the old data, but when it creates   new partitions, it will use new names.   edit : There are some use cases for which adding new chars does not seem   to be backward compatible - Eg. if partition was created with name having   a special char that you want to start escaping, and then you try dropping   the partition with a hive version that now escapes the special char using   the list below, then the drop partition fails to work. "
'Hive','Hive','Hive','//  TODO can we be more precise than string,string? '
'Hive','Hive','Hive','//  TODO: this is wrong; this test sets up dummy txn manager and so it cannot create ACID tables.         If I change it to use proper txn manager, the setup for some tests hangs.         This used to work by accident, now this works due a test flag. The test needs to be fixed.   Create table '
'Hive','Hive','Hive',"//  TODO - currently no way to test alter partition, as HCatClient doesn't support it. "
'Hive','Hive','Hive',"//  Note - some of these scenarios could be handled, but they are not supported right now.   The reason is that we bind a query to app/user using the signed token information, and   we don't want to bother figuring out which one to use in case of ambiguity w/o a use case.   Ambiguous user.   Ambiguous user.   Ambiguous user.   Ambiguous app. "
'Hive','Hive','Hive',"//  only support bulkload when a hfile.family.path has been specified.   TODO: support detecting cf's from column mapping   TODO: support loading into multiple CF's at a time "
'Hive','Hive','Hive','//  TODO Why is this changed from the default in hive-conf? '
'Hive','Hive','Hive','//  TODO: need to set catalog parameter '
'Hive','Hive','Hive','//  TODO: Should have a check on the server side. Embedded metastore throws   NullPointerException, remote throws TTransportException '
'Hive','Hive','Hive','//  TODO: this will probably send a message to AM. Is that needed here? '
'Hive','Hive','Hive',"//  There's full hash code stored in front of the key. We could check that first. If keyLength   is <= 4 it obviously doesn't make sense, less bytes to check in a key. Then, if there's a   match, we check it in vain. But what is the proportion of matches? For writes it could be 0   if all keys are unique, for reads we hope it's really high. Then if there's a mismatch what   probability is there that key mismatches in <4 bytes (so just checking the key is faster)? "
'Hive','Hive','Hive','/*    * Given a RexCall & TableScan find max no of nulls. Currently it picks the   * col with max no of nulls.   *    * TODO: improve this   *    * @param call   * @param t   * @return    */'
'Hive','Hive','Hive','//  NOTE: BeeLineOpts uses Reflector in an extensive way to call getters and setters on itself   If you want to add any getters or setters to this class, but not have it interfere with   saved variables in beeline.properties, careful use of this marker is needed.   Also possible to get this by naming these functions obtainBlah instead of getBlah   and so on, but that is not explicit and will likely surprise people looking at the   code in the future. Better to be explicit in intent. '
'Hive','Hive','Hive','//  TODO: should this be currentDirs? '
'Hive','Hive','Hive','//  TODO What else is required in this environment map. '
'Hive','Hive','Hive','//  FIXME: HIVE-18703 should probably move this method somewhere else '
'Hive','Hive','Hive','// TODO these bytes should be versioned '
'Hive','Hive','Hive','// TODO 1.0 miniCluster is slow this test times out, make it work '
'Hive','Hive','Hive','/*    * Send dropped table notifications. Subscribers can receive these notifications for   * dropped tables by listening on topic "HCAT" with message selector string   * {@value org.apache.hive.hcatalog.common.HCatConstants#HCAT_EVENT} =   * {@value org.apache.hive.hcatalog.common.HCatConstants#HCAT_DROP_TABLE_EVENT}   * </br>   * TODO: DataNucleus 2.0.3, currently used by the HiveMetaStore for persistence, has been   * found to throw NPE when serializing objects that contain null. For this reason we override   * some fields in the StorageDescriptor of this notification. This should be fixed after   * HIVE-2084 "Upgrade datanucleus from 2.0.3 to 3.0.1" is resolved.    */'
'Hive','Hive','Hive','/*  * This utility is designed to help with upgrading to Hive 3.0.  On-disk layout for transactional * tables has changed in 3.0 and require pre-processing before upgrade to ensure they are readable * by Hive 3.0.  Some transactional tables (identified by this utility) require Major compaction * to be run on them before upgrading to 3.0.  Once this compaction starts, no more * update/delete/merge statements may be executed on these tables until upgrade is finished. * * Additionally, a new type of transactional tables was added in 3.0 - insert-only tables.  These * tables support ACID semantics and work with any Input/OutputFormat.  Any Managed tables may * be made insert-only transactional table. These tables don\'t support Update/Delete/Merge commands. * * This utility works in 2 modes: preUpgrade and postUpgrade. * In preUpgrade mode it has to have 2.x Hive jars on the classpath.  It will perform analysis on * existing transactional tables, determine which require compaction and generate a set of SQL * commands to launch all of these compactions. * * Note that depending on the number of tables/partitions and amount of data in them compactions * may take a significant amount of time and resources.  The script output by this utility includes * some heuristics that may help estimate the time required.  If no script is produced, no action * is needed.  For compactions to run an instance of standalone Hive Metastore must be running. * Please make sure hive.compactor.worker.threads is sufficiently high - this specifies the limit * of concurrent compactions that may be run.  Each compaction job is a Map-Reduce job. * hive.compactor.job.queue may be used to set a Yarn queue ame where all compaction jobs will be * submitted. * * In postUpgrade mode, Hive 3.0 jars/hive-site.xml should be on the classpath. This utility will * find all the tables that may be made transactional (with ful CRUD support) and generate * Alter Table commands to do so.  It will also find all tables that may not support full CRUD * but can be made insert-only transactional tables and generate corresponding Alter Table commands. * * TODO: rename files * * "execute" option may be supplied in both modes to have the utility automatically execute the * equivalent of the generated commands * * "location" option may be supplied followed by a path to set the location for the generated * scripts.  */'
'Hive','Hive','Hive','//  srcs = new FileStatus[0]; Why is this needed? '
'Hive','Hive','Hive','//  TODO: should probably throw an exception here. '
'Hive','Hive','Hive','//  2. Convert Agg Fn args and type of args to Calcite   TODO: Does HQL allows expressions as aggregate args or can it only be '
'Hive','Hive','Hive','//  TODO: note that the token is not renewable right now and will last for 2 weeks by default. '
'Hive','Hive','Hive','//  TODO: Should this be also TOP_DOWN? '
'Hive','Hive','Hive','/*  * TODO: Most of the code in this class is ripped from ZooKeeper tests. Instead * of redoing it, we should contribute updates to their code which let us more * easily access testing helper objects. * *XXX: copied from the only used class by qtestutil from hbase-tests  */'
'Hive','Hive','Hive',"//  If it's constant = constant or column = column, we can't fetch any ranges   TODO We can try to be smarter and push up the value to some node which "
'Hive','Hive','Hive','//  TODO: Implement propConstDistUDAFParams '
'Hive','Hive','Hive','//  TODO: implement implicit AsyncRDDActions conversion instead of jc.monitor()?   TODO: how to handle stage failures? '
'Hive','Hive','Hive','//  TODO: should we check isAssignableFrom? '
'Hive','Hive','Hive','//  For replication add-ptns, we need to follow a insert-if-not-exist, alter-if-exists scenario.   TODO : ideally, we should push this mechanism to the metastore, because, otherwise, we have   no choice but to iterate over the partitions here. '
'Hive','Hive','Hive','//  TODO: should we create the batch from vrbctx, and reuse the vectors, like below? Future work. '
'Hive','Hive','Hive','//  this is a hacky way of doing the quotes since it will match any 2 of   these, so   "[ hello this is something to split [" would be considered to be quoted. '
'Hive','Hive','Hive','//  TODO: Do the type checking of the expressions '
'Hive','Hive','Hive','//  Make a tree out of the filter.   TODO: this is all pretty ugly. The only reason we need all these transformations         is to maintain support for simple filters for HCat users that query metastore.         If forcing everyone to use thick client is out of the question, maybe we could         parse the filter into standard hive expressions and not all this separate tree '
'Hive','Hive','Hive','//  Not safe to continue for RS-GBY-GBY-LIM kind of pipelines. See HIVE-10607 for more. '
'Hive','Hive','Hive','//  Hack for tables with no columns   Treat it as a table with a single column called "col" '
'Hive','Hive','Hive',"//  TODO: if we expect one dir why don't we enforce it? "
'Hive','Hive','Hive','//  Post serialization, separators are automatically inserted between different fields in the   struct. Currently there is not way to disable that. So the work around here is to pad the '
'Hive','Hive','Hive','//  We only support limited unselected column following by order by.   TODO: support unselected columns in genericUDTF and windowing functions.   We examine the order by in this query block and adds in column needed   by order by in select list. '
'Hive','Hive','Hive','//  TODO: if we want to be explicit about this dump not being a replication dump, we can   uncomment this else section, but currently unneeded. Will require a lot of golden file   regen if we do so. '
'Hive','Hive','Hive','//  TODO: refactor this in HIVE-6366 '
'Hive','Hive','Hive','//  TODO: (a = 1) and NOT (a is NULL) can be potentially folded earlier into a NO-OP '
'Hive','Hive','Hive','//  @todo: remove this. 8/28/14 hb   for now adding because RelOptUtil.classifyFilters has an assertion about   column counts that is not true for semiJoins. '
'Hive','Hive','Hive','//  TODO: this seems to indicate that priorities change too little...         perhaps we need to adjust the policy. '
'Hive','Hive','Hive','//  Note - we need srcFs rather than fs, because it is possible that the _files lists files   which are from a different filesystem than the fs where the _files file itself was loaded   from. Currently, it is possible, for eg., to do REPL LOAD hdfs://<ip>/dir/ and for the _files   in it to contain hdfs://<name>/ entries, and/or vice-versa, and this causes errors.   It might also be possible that there will be a mix of them in a given _files file.   TODO: revisit close to the end of replv2 dev, to see if our assumption now still holds,   and if not so, optimize. '
'Hive','Hive','Hive','//  Note: with some trickery, we could add logic for each type in ConfVars; for now the   potential spurious mismatches (e.g. 0 and 0.0 for float) should be easy to work around. '
'Hive','Hive','Hive','//  FIXME: hiveServer2SiteUrl is not settable? '
'Hive','Hive','Hive',"//  The following check is only a guard against failures.   TODO: Knowing which expr is constant in GBY's aggregation function   arguments could be better done using Metadata provider of Calcite.  check the corresponding expression in exprs to see if it is literal "
'Hive','Hive','Hive','//  TODO: Remove in Hive 0.16.   This is required only to support the deprecated HCatAddPartitionDesc.Builder interfaces. '
'Hive','Hive','Hive','// TODO: if partitions are loaded lazily via the iterator then we will have to avoid conversion of everything here as it defeats the purpose. '
'Hive','Hive','Hive','/*      * Figures out the aliases for whom it is safe to push predicates based on     * ANSI SQL semantics. The join conditions are left associative so "a     * RIGHT OUTER JOIN b LEFT OUTER JOIN c INNER JOIN d" is interpreted as     * "((a RIGHT OUTER JOIN b) LEFT OUTER JOIN c) INNER JOIN d".  For inner     * joins, both the left and right join subexpressions are considered for     * pushing down aliases, for the right outer join, the right subexpression     * is considered and the left ignored and for the left outer join, the     * left subexpression is considered and the left ignored. Here, aliases b     * and d are eligible to be pushed up.     *     * TODO: further optimization opportunity for the case a.c1 = b.c1 and b.c2     * = c.c2 a and b are first joined and then the result with c. But the     * second join op currently treats a and b as separate aliases and thus     * disallowing predicate expr containing both tables a and b (such as a.c3     * + a.c4 > 20). Such predicates also can be pushed just above the second     * join and below the first join     *     * @param op     *          Join Operator     * @param rr     *          Row resolver     * @return set of qualified aliases      */'
'Hive','Hive','Hive','//  TODO: not stopping umbilical explicitly as some taskKill requests may get scheduled during queryComplete   which will be using the umbilical. HIVE-16021 should fix this, until then leave umbilical open and wait for   it to be closed after max idle timeout (10s default) '
'Hive','Hive','Hive',"//  TODO [MM gap?]: by design; no-one seems to use LB tables. They will work, but not convert.                   It's possible to work around this by re-creating and re-inserting the table. "
'Hive','Hive','Hive','//  TODO: Should be moved out. '
'Hive','Hive','Hive','//  TODO: I/O threadpool could be here - one thread per stripe; for now, linear. '
'Hive','Hive','Hive','//  Optionally, do some filtering of rows...   UNDONE '
'Hive','Hive','Hive','//  TODO: Should have a check on the server side. Embedded metastore throws   InvalidObjectException, remote throws TApplicationException '
'Hive','Hive','Hive','//  FIXME: Support pruning dynamic partitioning. '
'Hive','Hive','Hive','//  FIXME: sideeffect will leave the last query set at the session level '
'Hive','Hive','Hive','//  TODO: use faster non-sync inputstream '
'Hive','Hive','Hive','//  TODO: should this rather use a threadlocal for NUMA affinity? '
'Hive','Hive','Hive',"// TODO: this object is created once to call one method and then immediately destroyed.  So it's basically just a roundabout way to pass arguments to a static method. Simplify? "
'Hive','Hive','Hive','//  TODO:pc implement max '
'Hive','Hive','Hive','//  TODO Make sure this method is eventually used to find the prep / batch scripts. '
'Hive','Hive','Hive',"/*      * This doesn't throw any exceptions because we don't want the Compaction to appear as failed     * if stats gathering fails since this prevents Cleaner from doing it's job and if there are     * multiple failures, auto initiated compactions will stop which leads to problems that are     * much worse than stale stats.     *     * todo: longer term we should write something COMPACTION_QUEUE.CQ_META_INFO.  This is a binary     * field so need to figure out the msg format and how to surface it in SHOW COMPACTIONS, etc      */"
'Hive','Hive','Hive','//  TODO: transitive dependencies warning? '
'Hive','Hive','Hive','//  We are in HS2, get the token locally.   TODO: coordinator should be passed in; HIVE-13698. Must be initialized for now. '
'Hive','Hive','Hive','//  TODO: Ideally, AcidUtils class and various constants should be in common. '
'Hive','Hive','Hive','//  HACK: We actually need BlockMissingException, but that is not available '
'Hive','Hive','Hive','//  TODO HIVE-14042. Handling of dummyOps, and propagating abort information to them '
'Hive','Hive','Hive','//  TODO This - at least for the session pool - will always be the hive user. How does doAs above this affect things ? '
'Hive','Hive','Hive','//  TODO: this is currently broken. We need to set memory manager to a bogus implementation         to avoid problems with memory manager actually tracking the usage. '
'Hive','Hive','Hive','//  TODO: for one-block case, we could move notification for the last block out of the loop. '
'Hive','Hive','Hive','//  TODO: figure out a better data structure for node list(?) '
'Hive','Hive','Hive',"// why isn't PPD working.... - it is working but storage layer doesn't do row level filtering; only row group level "
'Hive','Hive','Hive','//  Note : Currently, this implementation does not "fall back" to regular copy if distcp   is tried and it fails. We depend upon that behaviour in cases like replication,   wherein if distcp fails, there is good reason to not plod along with a trivial   implementation, and fail instead. '
'Hive','Hive','Hive','//  TODO: this is never used '
'Hive','Hive','Hive','//  TODO: versions could also be picked at build time. '
'Hive','Hive','Hive','//  A previous solution is based on tableAlias and colAlias, which is   unsafe, esp. when CBO generates derived table names. see HIVE-13602.   For correctness purpose, we only trust colExpMap.   We assume that CBO can do the constantPropagation before this function is   called to help improve the performance.   UnionOperator, LimitOperator and FilterOperator are special, they should already be   column-position aligned.'
'Hive','Hive','Hive','//  Hack!! - refactor once the metadata APIs with types are ready '
'Hive','Hive','Hive','//  TODO: if this cannot evict enough, it will spin infinitely. Terminate at some point? '
'Hive','Hive','Hive','//  but it is not OK to convert if the join is on (a,c) '
'Hive','Hive','Hive','//  TODO: ideally we should have a test for session itself. '
'Hive','Hive','Hive','//  TODO : if needed, verify that recordschema entry for fieldname matches appropriate type. '
'Hive','Hive','Hive','//  FIXME: null value is treated differently on the other end..when those filter will be '
'Hive','Hive','Hive','/*  * TODO:<br> * 1. Change the output col/ExprNodeColumn names to external names.<br> * 2. Verify if we need to use the "KEY."/"VALUE." in RS cols; switch to * external names if possible.<br> * 3. In ExprNode & in ColumnInfo the tableAlias/VirtualColumn is specified * differently for different GB/RS in pipeline. Remove the different treatments. * 4. VirtualColMap needs to be maintained *  */'
'Hive','Hive','Hive','//  Replace the entire current DiskRange with new cached range.   In case of an inexact match in either of the below it may throw. We do not currently   support the case where the caller requests a single cache buffer via multiple smaller   sub-ranges; if that happens, this may throw. Noone does it now, though.   TODO: should we actively assert here for cache buffers larger than range? '
'Hive','Hive','Hive','//  TODO: Fill in when PARTITION_DONE_EVENT is supported. '
'Hive','Hive','Hive',"//  TODO For now, this affects non broadcast unsorted cases as well. Make use of the edge   property when it's available. "
'Hive','Hive','Hive','//  TODO: most other options are probably unrecoverable... throw? '
'Hive','Hive','Hive','//  this is a temporary hack to fix things that are not fixed in the compiler '
'Hive','Hive','Hive','//  Should be fixed in Accumulo 1.5.2 and 1.6.1 '
'Hive','Hive','Hive',"//  This is hackery, but having hive-common depend on standalone-metastore is really bad   because it will pull all of the metastore code into every module.  We need to check that   we aren't using the standalone metastore.  If we are, we should treat it the same as a "
'Hive','Hive','Hive','// todo: fix this - it has to run in 3.0 since tables may be unbucketed '
'Hive','Hive','Hive',"//  Not sure why this method doesn't throw any exceptions,   but since the interface doesn't allow it we'll just swallow them and   move on.  This OK-ish since releaseLocks() is only called for RO/AC queries; it  would be really bad to eat exceptions here for write operations "
'Hive','Hive','Hive','//  TODO: Implement this when tez is upgraded. TEZ-3550 '
'Hive','Hive','Hive','//  TODO: there should be a better way to do this, code just needs to be modified '
'Hive','Hive','Hive','//  TODO Session re-use completely disabled for doAs=true. Always launches a new session. '
'Hive','Hive','Hive','//  TODO In case of a failure to heartbeat, tasks for the specific DAG should ideally be KILLED '
'Hive','Hive','Hive','//  TODO Check if all required tables are allowed, if so, get it from cache '
'Hive','Hive','Hive','//  TODO: Only the qualified name should be left here '
'Hive','Hive','Hive','//  FIXME: this is a secret contract; reusein getAggrKey() creates a more closer relation to the StatsGatherer '
'Hive','Hive','Hive',"//  Note: it's not quite clear why this is done inside this if. Seems like it should be on the top level. "
'Hive','Hive','Hive','//  TODO: why is this synchronized? '
'Hive','Hive','Hive','//  TODO: local cache is created once, so the configs for future queries will not be honored. '
'Hive','Hive','Hive',"//  Support for dynamic partitions can be added later   The following is not optimized:   insert overwrite table T1(ds='1', hr) select key, value, hr from T2 where ds = '1';   where T1 and T2 are bucketed by the same keys and partitioned by ds. hr "
'Hive','Hive','Hive','//  FIXME: using real scaling by new/old ration might yield better results? '
'Hive','Hive','Hive','// todo: try this with acid default - it seem making table acid in listener is too late '
'Hive','Hive','Hive','/*  * Context class for operator tree walker for partition pruner. * TODO: this class may be not useful.  */'
'Hive','Hive','Hive','//  Thrift cannot write read-only buffers... oh well.   TODO: actually thrift never writes to the buffer, so we could use reflection to         unset the unnecessary read-only flag if allocation/copy perf becomes a problem. '
'Hive','Hive','Hive','//  TODO should be replaced by CliServiceClient '
'Hive','Hive','Hive','//  @deprecated in favour of {@link #Builder(HCatTable, boolean)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: Change ExprNodeConverter to be independent of Partition Expr '
'Hive','Hive','Hive','//  We are not going to verify SD for each partition. Just verify for the table.   ToDo: we need verify the partition column instead '
'Hive','Hive','Hive',"// todo: ConditionalTask#addDependentTask(Task) doesn't do the right thing: HIVE-18978 "
'Hive','Hive','Hive','// TODO: Can columns retain virtualness out of union '
'Hive','Hive','Hive','//  TODO: why do we invent our own error path op top of the one from Future.get? '
'Hive','Hive','Hive','//  TODO is there a more correct way to get the literal value for the Object? '
'Hive','Hive','Hive','/*  * todo: This need review re: thread safety.  Various places (see callsers of * {@link SessionState#setCurrentSessionState(SessionState)}) pass SessionState to forked threads. * Currently it looks like those threads only read metadata but this is fragile. * Also, maps (in SessionState) where tempt table metadata is stored are concurrent and so * any put/get crosses a memory barrier and so does using most {@code java.util.concurrent.*} * so the readers of the objects in these maps should have the most recent view of the object. * But again, could be fragile.  */'
'Hive','Hive','Hive','//  arguments then we can use a more efficient form. '
'Hive','Hive','Hive','//  TODO: Something is preventing the process from terminating after main(), adding exit() as hacky solution. '
'Hive','Hive','Hive',"//  TODO: write error to the channel? there's no mechanism for that now. "
'Hive','Hive','Hive','//  TODO: reuse columnvector-s on hasBatch - save the array by column? take apart each list. '
'Hive','Hive','Hive',"//  todo: hold onto this predicate, so that we don't add it to the Filter Operator. "
'Hive','Hive','Hive',"//  TODO Ideally, remove elements from this once it's known that no tasks are linked to the instance (all deallocated) "
'Hive','Hive','Hive','//  TODO: can we blindly copy sort trait? What if inputs changed and we   are now sorting by different cols '
'Hive','Hive','Hive','//  TODO: This works different in remote and embedded mode.   In embedded mode, no exception happens. '
'Hive','Hive','Hive','//  UNDONE: Need to copy the object. '
'Hive','Hive','Hive','//  did remove those and gave CBO the proper AST. That is kinda hacky. '
'Hive','Hive','Hive','//  FIXME: consider other operator info as well..not just conf? '
'Hive','Hive','Hive','//  check # of dp   TODO: add an option to skip this if number of partitions checks is done by Triggers via   CREATED_DYNAMIC_PARTITION counter '
'Hive','Hive','Hive','/*  vertex is started, but not complete  */'
'Hive','Hive','Hive','//  TODO: need the description of how these maps are kept consistent. '
'Hive','Hive','Hive','//  UNDONE: Need to copy the object? '
'Hive','Hive','Hive','//  TODO filter->expr   TODO functionCache   TODO constraintCache   TODO need sd nested copy?   TODO String intern   TODO monitor event queue   TODO initial load slow?   TODO size estimation '
'Hive','Hive','Hive',"//  TODO not 100% sure about this.  This call doesn't set the compression type in the conf   file the way getHiveRecordWriter does, as ORC appears to read the value for itself.  Not   sure if this is correct or not. "
'Hive','Hive','Hive','/*    * TODO : Refactor   *   * There is an upcoming patch that refactors this bit of code. Currently, the idea is the following:   *   * By default, ReplCopyWork will behave similarly to CopyWork, and simply copy   * along data from the source to destination.   * If the flag readSrcAsFilesList is set, changes the source behaviour of this CopyTask, and   * instead of copying explicit files, this will then fall back to a behaviour wherein an _files is   * read from the source, and the files specified by the _files are then copied to the destination.   *   * This allows us a lazy-copy-on-source and a pull-from destination semantic that we want   * to use from replication.    */'
'Hive','Hive','Hive','/*  A scratch variable is created here. This could be optimized in the future     * by perhaps using thread-local storage to allocate this scratch field.      */'
'Hive','Hive','Hive','//  Ideally there should be a better way to determine that the followingWork contains   a dynamic partitioned hash join, but in some cases (createReduceWork()) it looks like   the work must be created/connected first, before the GenTezProcContext can be updated   with the mapjoin/work relationship. '
'Hive','Hive','Hive','// Future thought: this may be expensive so consider having a thread pool run in parallel '
'Hive','Hive','Hive','/*      * Number of rows processed between checks for minReductionHashAggr factor     * TODO: there is overlap between numRowsCompareHashAggr and checkInterval      */'
'Hive','Hive','Hive','//  TODO: LlapNodeId is just a host+port pair; we could make this class more generic. '
'Hive','Hive','Hive',"//  Note: we assume here that plan has been validated beforehand, so we don't verify "
'Hive','Hive','Hive','//  Implement in future, if needed. '
'Hive','Hive','Hive','//  TODO: move this into ctor? EW would need to create CacheWriter then '
'Hive','Hive','Hive','//  After SPARK-2321, we only use JobMetricsListener to get job metrics   TODO: remove it when the new API provides equivalent functionality '
'Hive','Hive','Hive','//  TODO: could we do this only if the OF is actually used? '
'Hive','Hive','Hive','//  TODO: we may add app name, etc. later '
'Hive','Hive','Hive','//  TODO no fk across catalogs '
'Hive','Hive','Hive','//  TODO: This does not work because materialized views need the creation metadata   to be updated in case tables used were replicated to a different database.  run("CREATE MATERIALIZED VIEW " + dbName + ".mat_view AS SELECT a FROM " + dbName + ".ptned where b=1", driver);  verifySetup("SELECT a from " + dbName + ".mat_view", ptn_data_1, driver); '
'Hive','Hive','Hive','//  FIXME: oss seems to contain duplicates '
'Hive','Hive','Hive','//  TODO: danger of stack overflow... needs a retry limit? '
'Hive','Hive','Hive','//  Cannot drop db1 because mv1 uses one of its tables   TODO: Error message coming from metastore is currently not very concise   (foreign key violation), we should make it easily understandable '
'Hive','Hive','Hive','//  TODO: ideally, QueryTracker should have fragment-to-query mapping. '
'Hive','Hive','Hive','//  TODO: WTF? The old code seems to just drop the ball here. '
'Hive','Hive','Hive',"//  Hack to initialize cache with 0 expiry time causing it to return a new hive client every time   Otherwise the cache doesn't play well with the second test method with the client gets closed() in the   tearDown() of the previous test "
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatPartition.#getLocation()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO HIVE-12449. Make use of progress notifications once Hive starts sending them out.   progressNotified = task.getAndClearProgressNotification(); '
'Hive','Hive','Hive','//  TODO Evil!  Need to figure out a way to remove this sleep. '
'Hive','Hive','Hive','//  TODO: all the extrapolation logic should be moved out of this class, '
'Hive','Hive','Hive','//  FIXME: this add seems suspicious...10 lines below the value returned by this method used as betterDS '
'Hive','Hive','Hive','//  this is a hack for now to handle the group by case '
'Hive','Hive','Hive','//  All other distinct keys will just be forwarded. This could be optimized... '
'Hive','Hive','Hive','//  This is a workaround for DERBY-6358 and Oracle bug; it is pretty horrible. '
'Hive','Hive','Hive','// @TODO This is fetching all the rows at once from broker or multiple historical nodes   Move to use scan query to avoid GC back pressure on the nodes '
'Hive','Hive','Hive','// todo: strictly speaking there is a bug here.  heartbeat*() commits but both heartbeat and  checkLock() are in the same retry block, so if checkLock() throws, heartbeat is also retired '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#partCols(List<FieldSchema>)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive',"//  Wow, something's really wrong. "
'Hive','Hive','Hive','//  UNDONE: Does this random range need to go as high as 38? '
'Hive','Hive','Hive',"//  TODO : Java 1.7+ support using String with switches, but IDEs don't all seem to know that.   If casing is fine for now. But we should eventually remove this. Also, I didn't want to   create another enum just for this. "
'Hive','Hive','Hive','//  We have found an invalid decimal value while enforcing precision and   scale. Ideally,   we would replace it with null here, which is what Hive does. However,   we need to plumb   this thru up somehow, because otherwise having different expression   type in AST causes   the plan generation to fail after CBO, probably due to some residual   state in SA/QB.   For now, we will not run CBO in the presence of invalid decimal '
'Hive','Hive','Hive','//  Code initially inspired by Google ObjectExplorer.   TODO: roll in the direct-only estimators from fields. Various other optimizations possible. '
'Hive','Hive','Hive','//  Dirty hack as this will throw away spaces and other things - find a better '
'Hive','Hive','Hive','//  TODO: should local cache also be by fileId? Preserve the original logic for now. '
'Hive','Hive','Hive','//  TODO: do we need to get to child? '
'Hive','Hive','Hive','//  TODO: refactor with cache impl? it has the same merge logic '
'Hive','Hive','Hive','/*    * Dirty hack to set the environment variables using reflection code. This method is for testing   * purposes only and should not be used elsewhere    */'
'Hive','Hive','Hive','//  TODO: Decorelation of subquery should be done before attempting   Partition Pruning; otherwise Expression evaluation may try to execute   corelated sub query. '
'Hive','Hive','Hive','/*    * TODO: 1) isSamplingPred 2) sampleDesc 3) isSortedFilter    */'
'Hive','Hive','Hive','// @TODO it will be nice to refactor it '
'Hive','Hive','Hive','// todo: this should not throw  todo: this should take "comment" as parameter to set in CC_META_INFO to provide some context for the failure '
'Hive','Hive','Hive','//  TODO: replace this with a Map? '
'Hive','Hive','Hive','//  TODO: remove some of these fields as needed? '
'Hive','Hive','Hive','//  TODO: this is not valid. Function names for built-in UDFs are specified in   FunctionRegistry, and only happen to match annotations. For user UDFs, the   name is what user specifies at creation time (annotation can be absent, '
'Hive','Hive','Hive','//  TODO: verify that this is correct '
'Hive','Hive','Hive','//  TODO: we could try to get the declaring object and infer argument... stupid Java. '
'Hive','Hive','Hive','//  close&destroy is used in seq coupling most of the time - the difference is either not clear; or not relevant - remove? '
'Hive','Hive','Hive','// todo: this doesn;t check if compaction is already running (even though Initiator does but we '
'Hive','Hive','Hive',"//  This is a little bit weird. We'll do the MS call outside of the lock. Our caller calls us   under lock, so we'd preserve the lock state for them; their finally block will release the "
'Hive','Hive','Hive','// todo: we really need some comments to explain exactly why each of these is removed '
'Hive','Hive','Hive','//  ### FIXME: this is broken for multi-line SQL '
'Hive','Hive','Hive','// Not implemented '
'Hive','Hive','Hive',"//  Slice boundaries may not match split boundaries due to torn rows in either direction,   so this counter may not be consistent with splits. This is also why we increment   requested bytes here, instead of based on the split - we don't want the metrics to be   inconsistent with each other. No matter what we determine here, at least we'll account   for both in the same manner. "
'Hive','Hive','Hive','//  This is kinda hacky - we "know" these are LlaSerDeDataBuffer-s. '
'Hive','Hive','Hive','//  TODO: perhaps can be made more efficient by creating a byte[] directly '
'Hive','Hive','Hive',"// this is not strictly accurate, but 'type' cannot be null. "
'Hive','Hive','Hive',"//  TODO: for non columnar we don't need to do this... might as well update all stats. "
'Hive','Hive','Hive','//  TODO: this should ideally not create AddPartitionDesc per partition '
'Hive','Hive','Hive','//  TODO: should we also whitelist input formats here? from mapred.input.format.class '
'Hive','Hive','Hive','//  Not public since we must have the deserialize read object. '
'Hive','Hive','Hive','//  TODO: checking 2 children is useless, compare already does that. '
'Hive','Hive','Hive','//  TODO: why does the original code not just use _dataStream that it passes in as stream? '
'Hive','Hive','Hive',"//  This is a bogus hack because it copies the contents of the SQL file   intended for creating derby databases, and thus will inexorably get   out of date with it.  I'm open to any suggestions on how to make this   read the file in a build friendly way. "
'Hive','Hive','Hive','//  This if/else chain looks ugly in the inner loop, but given that it will be 100% the same   for a given operator branch prediction should work quite nicely on it.   RecordUpdateer expects to get the actual row, not a serialized version of it.  Thus we '
'Hive','Hive','Hive',"// TODO this has to find a better home, it's also hardcoded as default in hive would be nice "
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#sortCols(ArrayList<Order>)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO? add upstream? '
'Hive','Hive','Hive','//  TODO: Should have a check on the server side. Embedded metastore throws   NullPointerException, remote throws MetaException '
'Hive','Hive','Hive',"//  load the list of DP partitions and return the list of partition specs   TODO: In a follow-up to HIVE-1361, we should refactor loadDynamicPartitions   to use Utilities.getFullDPSpecs() to get the list of full partSpecs.   After that check the number of DPs created to not exceed the limit and   iterate over it and call loadPartition() here.   The reason we don't do inside HIVE-1361 is the latter is large and we "
'Hive','Hive','Hive',"//  There are 3 options for this ConditionalTask:   1) Merge the partitions   2) Move the partitions (i.e. don't merge the partitions)   3) Merge some partitions and move other partitions (i.e. merge some partitions and don't   merge others) in this case the merge is done first followed by the move to prevent   conflicts.   TODO: if we are not dealing with concatenate DDL, we should not create a merge+move path "
'Hive','Hive','Hive','/*    * TODO: this would be more flexible doing a SQL select statement rather than using InputFormat directly   * see {@link org.apache.hive.hcatalog.streaming.TestStreaming#checkDataWritten2(Path, long, long, int, String, String...)}   * @param numSplitsExpected   * @return   * @throws Exception    */'
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getDbName()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO HIVE-16134. Differentiate between EXTERNAL_PREEMPTION_WAITQUEU vs EXTERNAL_PREEMPTION_FINISHABLE? '
'Hive','Hive','Hive','//  TODO: pointless '
'Hive','Hive','Hive','//  This is kind of not pretty, but this is how we detect whether buffer was cached.   We would always set this for lookups at put time. '
'Hive','Hive','Hive',"//  TODO: move these test parameters to more specific places... there's no need to have them here "
'Hive','Hive','Hive','//  TODO: fs checksum only available on hdfs, need to         find a solution for other fs (eg, local fs, s3, etc) '
'Hive','Hive','Hive','//  FIXME: possible alternative: move both OpSignature/OpTreeSignature into   under some class as nested ones; and that way this factory level caching can be made "transparent" '
'Hive','Hive','Hive','//  Neither "expired" nor "olderThan" criteria selected. This better not be an attempt to delete tokens. '
'Hive','Hive','Hive','//  FIXME: Hadoop3 made the incompatible change for dfs.client.datanode-restart.timeout   while spark2 is still using Hadoop2.   Spark requires Hive to support Hadoop3 first then Spark can start   working on Hadoop3 support. Remove this after Spark supports Hadoop3. '
'Hive','Hive','Hive','/*    * Variables used by LLAP daemons.   * TODO: Eventually auto-populate this based on prefixes. The conf variables   * will need to be renamed for this.    */'
'Hive','Hive','Hive','//  TODO: setFileMetadata could just create schema. Called in two places; clean up later. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#comment()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  this is workaround for hadoop-17 - libjars are not added to classpath of the '
'Hive','Hive','Hive','/* todo: we need some sort of validation phase over original AST to make things user friendly; for example, if     original command refers to a column that doesn\'t exist, this will be caught when processing the rewritten query but     the errors will point at locations that the user can\'t map to anything     - VALUES clause must have the same number of values as target table (including partition cols).  Part cols go last in Select clause of Insert as Select     todo: do we care to preserve comments in original SQL?     todo: check if identifiers are propertly escaped/quoted in the generated SQL - it\'s currently inconsistent      Look at UnparseTranslator.addIdentifierTranslation() - it does unescape + unparse...     todo: consider "WHEN NOT MATCHED BY SOURCE THEN UPDATE SET TargetTable.Col1 = SourceTable.Col1 "; what happens when source is empty?  This should be a runtime error - maybe not      the outer side of ROJ is empty => the join produces 0 rows.  If supporting WHEN NOT MATCHED BY SOURCE, then this should be a runtime error     */'
'Hive','Hive','Hive',"//  TODO: wtf? This doesn't do anything. "
'Hive','Hive','Hive','//  TODO: why is this needed? '
'Hive','Hive','Hive',"/*  * NOTE: this whole logic is replicated from Calcite's RelDecorrelator *  and is exteneded to make it suitable for HIVE *    We should get rid of this and replace it with Calcite's RelDecorrelator *    once that works with Join, Project etc instead of Join, Project. *    At this point this has differed from Calcite's version significantly so cannot *    get rid of this. * * RelDecorrelator replaces all correlated expressions (corExp) in a relational * expression (RelNode) tree with non-correlated expressions that are produced * from joining the RelNode that produces the corExp with the RelNode that * references it. * * <p>TODO:</p> * <ul> *   <li>replace {@code CorelMap} constructor parameter with a RelNode *   <li>make {@link #currentRel} immutable (would require a fresh *      RelDecorrelator for each node being decorrelated)</li> *   <li>make fields of {@code CorelMap} immutable</li> *   <li>make sub-class rules static, and have them create their own *   de-correlator</li> * </ul>  */"
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#serdeParam(Map<String, String>)}.   To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  CONCERN: Leaking scratch column? '
'Hive','Hive','Hive','//  TODO: this is an ugly hack; see the same in LlapTaskCommunicator for discussion. '
'Hive','Hive','Hive','//  Derby and Oracle do not interpret filters ANSI-properly in some cases and need a workaround. '
'Hive','Hive','Hive','//  TODO : currently not testing the following scenarios:     a) Multi-db wh-level REPL LOAD - need to add that     b) Insert into tables - quite a few cases need to be enumerated there, including dyn adds. '
'Hive','Hive','Hive','/*    * TODO: 1. PPD needs to get pushed in to TS   *   * @param scanRel   * @return    */'
'Hive','Hive','Hive','//  2. Convert NONACIDORCTBL to ACID table.  //todo: remove trans_prop after HIVE-17089 '
'Hive','Hive','Hive','//  FIXME: possibly the distinction between table/partition is not need; however it was like this before....will change it later '
'Hive','Hive','Hive',"//  don't take directories into account for quick stats TODO: wtf? "
'Hive','Hive','Hive',"/*    * Fixup the children and parents of a new vector child.   *   * 1) Add new vector child to the vector parent's children list.   *   * 2) Copy and fixup the parent list of the original child instead of just assuming a 1:1   *    relationship.   *   *    a) When the child is MapJoinOperator, it will have an extra parent HashTableDummyOperator   *       for the MapJoinOperator's small table.  It needs to be fixed up, too.    */"
'Hive','Hive','Hive','//  TODO: The copy of data is unnecessary, but there is no work-around '
'Hive','Hive','Hive','/*    * Get the list of partitions that need to update statistics.   * TODO: we should reuse the Partitions generated at compile time   * since getting the list of partitions is quite expensive.   *   * @return a list of partitions that need to update statistics.   * @throws HiveException    */'
'Hive','Hive','Hive','//  TODO: This test should be removed once ACID tables replication is supported. '
'Hive','Hive','Hive','//  TODO: there is no easy and reliable way to compute the memory used by the executor threads and on-heap cache. '
'Hive','Hive','Hive','//  TODO: normally, the result is not necessary; might make sense to pass false '
'Hive','Hive','Hive','//  Remove new-alloc flag on first use. Full unlock after that would imply force-discarding   this buffer is acceptable. This is kind of an ugly compact between the cache and us. '
'Hive','Hive','Hive','//  Only attempt to do this, if cmd was successful.   FIXME: it would be probably better to move this to an after-execution '
'Hive','Hive','Hive','//  TODO Cleanup pending tasks etc, so that the next dag is not affected. '
'Hive','Hive','Hive','//  TODO: does this include partition columns? '
'Hive','Hive','Hive','//            work on BytesColumnVector output columns??? '
'Hive','Hive','Hive','//  Two ReduceSinkOperators are correlated means that   they have same sorting columns (key columns), same partitioning columns,   same sorting orders, and no conflict on the numbers of reducers.   TODO: we should relax this condition   TODO: we need to handle aggregation functions with distinct keyword. In this case,   distinct columns will be added to the key columns. '
'Hive','Hive','Hive','//  FIXME: move TestJsonSerDe from hcat to serde2 '
'Hive','Hive','Hive','//  TODO Confirm this is safe '
'Hive','Hive','Hive',"//  TODO: execute errors like this currently don't return good error "
'Hive','Hive','Hive','//  THIS IS NOT WORKING workaround is to set it as part of java opts -Duser.timezone="UTC" '
'Hive','Hive','Hive','//  simply get the next day and go back half a day. This is not ideal but seems to work. '
'Hive','Hive','Hive',"//  TODO: maybe we should throw this as-is too. ThriftCLIService currently catches Exception,         so the combination determines what would kill the HS2 executor thread. For now,         let's only allow OOM to propagate. "
'Hive','Hive','Hive','//  TODO May be possible to do finer grained locks. '
'Hive','Hive','Hive','//  TODO: this check is somewhat bogus as the maxJvmMemory != Xmx parameters (see annotation in LlapServiceDriver) '
'Hive','Hive','Hive','//  TODO: Check if maximum size compatible with AbsoluteKeyOffset.maxSize. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#escapeChar()}. '
'Hive','Hive','Hive','//  If the sorted columns is a superset of bucketed columns, store this fact.   It can be later used to   optimize some group-by queries. Note that, the order does not matter as   long as it in the first '
'Hive','Hive','Hive','//  FIXME : replace with hive copy once that is copied '
'Hive','Hive','Hive','//  TODO: revisit the fence '
'Hive','Hive','Hive','//  TODO: 1) How to handle collisions? 2) Should we be cloning ColumnInfo or not? '
'Hive','Hive','Hive','//  Optimize the scenario when there are no grouping keys and no distinct - 2   map-reduce jobs are not needed '
'Hive','Hive','Hive','//  Join key expression is likely some expression involving functions/operators, so there   is no actual table column for this. But the ReduceSink operator should still have an   output column corresponding to this expression, using the columnInternalName.   TODO: does tableAlias matter for this kind of expression? '
'Hive','Hive','Hive','//  TODO: why does Tez API use "Object" for this? '
'Hive','Hive','Hive','//  TODO: this log statement looks wrong '
'Hive','Hive','Hive',"//  Relying on a task succeeding to reset the exponent.   There's no notifications on whether a task gets accepted or not. That would be ideal to   reset this. "
'Hive','Hive','Hive','//  We need to override these methods due to difference in nullability between Hive and   Calcite for the return types of the aggregation  (in particular, for COUNT and SUM0).   TODO: We should close the semantics gaps between Hive and Calcite for nullability of   aggregation calls return types. This might be useful to trigger some additional   rewriting rules that would remove unnecessary predicates, etc. '
'Hive','Hive','Hive',"//  Cancel job if the monitor found job submission timeout.   TODO: If the timeout is because of lack of resources in the cluster, we should   ideally also cancel the app request here. But w/o facilities from Spark or YARN,   it's difficult to do it on hive side alone. See HIVE-12650. "
'Hive','Hive','Hive','//  TODO: Should be checked on server side. On Embedded metastore it throws   NullPointerException, on Remote metastore it throws TTransportException '
'Hive','Hive','Hive','//  TODO: do we ever need the port? we could just do away with nodeId altogether. '
'Hive','Hive','Hive',"/*    * Metastore related options that the db is initialized against. When a conf   * var in this is list is changed, the metastore instance for the CLI will   * be recreated so that the change will take effect.   * TODO - I suspect the vast majority of these don't need to be here.  But it requires testing   * before just pulling them out.    */"
'Hive','Hive','Hive',"//  Originals split won't work due to MAPREDUCE-7086 issue in FileInputFormat. "
'Hive','Hive','Hive',"//  TODO: VectorizedParquetRecordReader doesn't support map, array now, the value of   ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR should be updated after support these data   types. "
'Hive','Hive','Hive','//  TODO: if there are more fields perhaps there should be an array of class. '
'Hive','Hive','Hive','//  Some columns in select are pruned. This may happen if those are constants.   TODO: the best solution is to hook the operator before fs with the select operator.    See smb_mapjoin_20.q for more details.  '
'Hive','Hive','Hive','//  TODO: getUserFromAuthenticator? '
'Hive','Hive','Hive','//  TODO: this seems wrong (following what Hive Regular does) '
'Hive','Hive','Hive',"//  TODO: we're asking the metastore what its configuration for this var is - we may   want to revisit to pull from client side instead. The reason I have it this way   is because the metastore is more likely to have a reasonable config for this than   an arbitrary client. "
'Hive','Hive','Hive','//  TODO: can this result in cross-thread reuse of session state? '
'Hive','Hive','Hive',"//  This condition-check could have been avoided, but to honour the old   default of not calling if it wasn't set, we retain that behaviour.   TODO:cleanup after verification that the outer if isn't really needed here "
'Hive','Hive','Hive','//  TODO support only non nested case '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#mapKeysTerminatedBy()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO: get rid of this '
'Hive','Hive','Hive','// todo: this is not remotely accurate if you have many (relevant) original files '
'Hive','Hive','Hive','//  TODO: we could remove extra copy for isUncompressed case by copying directly to cache. '
'Hive','Hive','Hive',"//  TODO HIVE-11687 It's possible for a bunch of tasks to come in around the same time, without the   actual executor threads picking up any work. This will lead to unnecessary rejection of tasks. "
'Hive','Hive','Hive','//  conflict when loaded. Some issue with framework which needs to be relook into later. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#fileFormat()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive',"//  dangerous; let's explicitly add an incomplete CB. "
'Hive','Hive','Hive','//  This is not a complete list, barely make information schema work '
'Hive','Hive','Hive','//  TODO: perhaps we should also summarize the triggers pointing to invalid pools. '
'Hive','Hive','Hive','//  TODO: could we instead get FS from path here and add normal files for every UGI? '
'Hive','Hive','Hive',"//  We cannot get to root TableScan operator, likely because there is a join or group-by   between topOp and root TableScan operator. We don't handle that case, and simply return "
'Hive','Hive','Hive','//  REVIEW:  are we supposed to be applying the getReadColumnIDs '
'Hive','Hive','Hive','/*    * todo: this should accept a file of table names to exclude from non-acid to acid conversion   * todo: change script comments to a preamble instead of a footer   *   * how does rename script work?  "hadoop fs -mv oldname newname"    * and what what about S3?   * How does this actually get executed?   * all other actions are done via embedded JDBC   *   *    */'
'Hive','Hive','Hive','//  TODO: the global lock might be to coarse here. '
'Hive','Hive','Hive','// todo: enums? that have both field name and value list '
'Hive','Hive','Hive','//  if the result is not boolean and not all partition agree on the   result, we don\'t remove the condition. Potentially, it can miss   the case like "where ds % 3 == 1 or ds % 3 == 2"   TODO: handle this case by making result vector to handle all   constant values. '
'Hive','Hive','Hive','//  Need to remove this static hack. But this is the way currently to get a session. '
'Hive','Hive','Hive',"//  TODO : code section copied over from SerDeUtils because of non-standard json production there   should use quotes for all field names. We should fix this there, and then remove this copy.   See http://jackson.codehaus.org/1.7.3/javadoc/org/codehaus/jackson/JsonParser.Feature.html#ALLOW_UNQUOTED_FIELD_NAMES   for details - trying to enable Jackson to ignore that doesn't seem to work(compilation failure   when attempting to use that feature, so having to change the production itself. "
'Hive','Hive','Hive','//  Assume we should have the exact same object.   TODO: we could also compare the schema and SerDe, and pass only those to the call         instead; most of the time these would be the same and LLAP IO can handle that. '
'Hive','Hive','Hive','// todo: HIVE-15549  SORT_PARTITION_EDGE '
'Hive','Hive','Hive','//  TODO - Allow the branch to be specified as a parameter to ptest, rather than requiring a separate property file. '
'Hive','Hive','Hive',"//  Note that the tableExists flag as used by Auth is kinda a hack and   assumes only 1 table will ever be imported - this assumption is broken by   REPL LOAD.     However, we've not chosen to expand this to a map of tables/etc, since   we have expanded how auth works with REPL DUMP / REPL LOAD to simply   require ADMIN privileges, rather than checking each object, which   quickly becomes untenable, and even more so, costly on memory. "
'Hive','Hive','Hive',"//  TODO Change after HIVE-9987. For now, there's no rack matching. "
'Hive','Hive','Hive','/*    * Only a small set of operations is allowed inside an explicit transactions, e.g. DML on   * Acid tables or ops w/o persistent side effects like USE DATABASE, SHOW TABLES, etc so   * that rollback is meaningful   * todo: mark all operations appropriately    */'
'Hive','Hive','Hive','// todo: once multistatement txns are supported, add a test to run next 2 statements in a single txn '
'Hive','Hive','Hive','//  TODO HiveQueryId extraction by parsing the Processor payload is ugly. This can be improved   once TEZ-2672 is fixed. '
'Hive','Hive','Hive',"//  UNDONE: Why don't these methods take decimalPlaces? "
'Hive','Hive','Hive','/*     * Serializes decimal64 up to the maximum 64-bit precision (18 decimal digits).    *    * NOTE: Major assumption: the fast decimal has already been bounds checked and a least    * has a precision <= DECIMAL64_DECIMAL_DIGITS.  We do not bounds check here for better    * performance.     */'
'Hive','Hive','Hive','//  TODO: Refactor this and do in a more object oriented manner '
'Hive','Hive','Hive',"//  Some data is missing from the stream for PPD uncompressed read (because index offset is   relative to the entire stream and we only read part of stream if RGs are filtered; unlike   with compressed data where PPD only filters CBs, so we always get full CB, and index offset   is relative to CB). To take care of the case when UncompressedStream goes seeking around by   its incorrect (relative to partial stream) index offset, we will increase the length by our   offset-relative-to-the-stream, and also account for it in buffers (see createDiskRangeInfo).   So, index offset now works; as long as noone seeks into this data before the RG (why would   they), everything works. This is hacky... Stream shouldn't depend on having all the data. "
'Hive','Hive','Hive','//  TODO HIVE-15865 Ideally sort these by completion time, once that is available. '
'Hive','Hive','Hive','/*    * Generate a temporary path for dynamic partition pruning in Spark branch   * TODO: no longer need this if we use accumulator!   * @param basePath   * @param id   * @return    */'
'Hive','Hive','Hive','//  TODO: probably temporary before HIVE-13698; after that we may create one per session. '
'Hive','Hive','Hive',"//  FIXME manager's EndOfBatch threadlocal can be deleted "
'Hive','Hive','Hive',"//  TODO: most of the time, there's no in-memory. Use an array? "
'Hive','Hive','Hive',"//  TODO: could we tell the policy that we don't care about these and have them evicted? or we         could just deallocate them when unlocked, and free memory + handle that in eviction.         For now, just abandon the blocks - eventually, they'll get evicted. "
'Hive','Hive','Hive','//  A single concurrent request per node is currently hardcoded. The node includes a port number   so different AMs on the same host count as different nodes; we only have one request type,   and it is not useful to send more than one in parallel. '
'Hive','Hive','Hive','//  TODO MS-SPLIT Switch this back once HiveMetaStoreClient is moved.  req.setCapabilities(HiveMetaStoreClient.TEST_VERSION); '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getTableType()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  Currently MAP type is not supported. Add it back when Arrow 1.0 is released. '
'Hive','Hive','Hive','//  TODO: why CAS if the result is not checked? '
'Hive','Hive','Hive',"//  TODO: Shouldn't we propgate vc? is it vc col from tab or all vc "
'Hive','Hive','Hive','//  TODO: readEncodedColumns is not supposed to throw; errors should be propagated thru   consumer. It is potentially holding locked buffers, and must perform its own cleanup.   Also, currently readEncodedColumns is not stoppable. The consumer will discard the   data it receives for one stripe. We could probably interrupt it, if it checked that. '
'Hive','Hive','Hive',"//  REVIEW jvs 29-Oct-2007:  Shouldn't it also be incorporating   the flavor attribute into the description? "
'Hive','Hive','Hive','//  Requirements: for Bucket, bucketed by their keys on both sides and fitting in memory   Obtain number of buckets  TODO: Incase of non bucketed splits would be computed based on data size/max part size '
'Hive','Hive','Hive','//  Note: later we may be able to set multiple things together (except LIKE). '
'Hive','Hive','Hive','//  May be null in tests   TODO: see javadoc '
'Hive','Hive','Hive','//  XXX: makes no sense for me... possibly not needed anymore '
'Hive','Hive','Hive','//        So, the indices should line up... to be fixed in SE v2? '
'Hive','Hive','Hive','/*     * The method for altering table props; may set the table to MM, non-MM, or not affect MM.    * todo: All such validation logic should be TransactionValidationListener    * @param tbl object image before alter table command (or null if not retrieved yet).    * @param props prop values set in this alter table command     */'
'Hive','Hive','Hive','//  TODO : verify if skipping charset here is okay '
'Hive','Hive','Hive','//  TODO: support dynamic partition for CTAS '
'Hive','Hive','Hive','//  TODO :  Some extra validation can also be added as this is a user provided parameter. '
'Hive','Hive','Hive','//  todo: add time of abort, which is not currently tracked. '
'Hive','Hive','Hive','//  TODO: dump the end if wrapping around? '
'Hive','Hive','Hive','//  TODO: Currently ignores GBY and PTF which may also buffer data in memory. '
'Hive','Hive','Hive',"//  The queryId could either be picked up from the current request being processed, or   generated. The current request isn't exactly correct since the query is 'done' once we   return the results. Generating a new one has the added benefit of working once this   is moved out of a UDTF into a proper API.   Setting this to the generated AppId which is unique.   Despite the differences in TaskSpec, the vertex spec should be the same. "
'Hive','Hive','Hive','//  Workaround for DN bug on Postgres:   http://www.datanucleus.org/servlet/forum/viewthread_thread,7985_offset '
'Hive','Hive','Hive','//  If necessary, divide and multiply to get rid of fractional digits. '
'Hive','Hive','Hive','// TODO: use common thread pool later? '
'Hive','Hive','Hive','//  register all permanent functions. need improvement '
'Hive','Hive','Hive',"//  TODO: perhaps this could use a better implementation... for now even the Hive query result         set doesn't support this, so assume the user knows what he's doing when calling us. "
'Hive','Hive','Hive','//  This is our problem -- it means the configuration was wrong. '
'Hive','Hive','Hive','//  to be used by clients of ServiceRegistry TODO: this is unnecessary '
'Hive','Hive','Hive','//  TODO: should this also handle ACID operation, etc.? seems to miss a lot of stuff from HIF. '
'Hive','Hive','Hive',"//  TODO Will these checks work if some other user logs in. Isn't a doAs check required somewhere here as well.   Should a doAs check happen here instead of after the user test.   With HiveServer2 - who is the incoming user in terms of UGI (the hive user itself, or the user who actually submitted the query) "
'Hive','Hive','Hive',"//  TODO: get rid of deepCopy after making sure callers don't use references "
'Hive','Hive','Hive',"//  TODO: this is fishy - we init object inspectors based on first tag. We         should either init for each tag, or if rowInspector doesn't really         matter, then we can create this in ctor and get rid of firstRow. "
'Hive','Hive','Hive','//  Snapshot was outdated when locks were acquired, hence regenerate context,   txn list and retry   TODO: Lock acquisition should be moved before analyze, this is a bit hackish.   Currently, we acquire a snapshot, we compile the query wrt that snapshot,   and then, we acquire locks. If snapshot is still valid, we continue as usual. '
'Hive','Hive','Hive','//  TODO: option to allow converting ORC file to insert-only transactional? '
'Hive','Hive','Hive',"//  TODO: calculate this instead. Just because we're writing to the location doesn't mean that it'll   always be wanted in the meta store right away. "
'Hive','Hive','Hive','//  TODO: propagate this error to TezJobMonitor somehow? Without using killQuery '
'Hive','Hive','Hive','//  All users belong to public role implicitly, add that role   TODO MS-SPLIT Change this back to HiveMetaStore.PUBLIC once HiveMetaStore has moved to   stand-alone metastore.  MRole publicRole = new MRole(HiveMetaStore.PUBLIC, 0, HiveMetaStore.PUBLIC); '
'Hive','Hive','Hive','/*    * Create a bare TableSnapshotRegionSplit. Needed because Writables require a   * default-constructed instance to hydrate from the DataInput.   *   * TODO: remove once HBASE-11555 is fixed.    */'
'Hive','Hive','Hive','//  TODO: do better with handling types of Exception here '
'Hive','Hive','Hive','//  todo: returns json string. should recreate object from it? '
'Hive','Hive','Hive','//  TODO: in these methods, do we really need to deepcopy? '
'Hive','Hive','Hive','//  TODO: numTasksToPreempt is currently always 1. '
'Hive','Hive','Hive',"//  TODO Optimization: Add a check to see if there's any capacity available. No point in "
'Hive','Hive','Hive','//  Wait a while for existing tasks to terminate   XXX this will wait forever... :) '
'Hive','Hive','Hive','//  todo replace below with joda-time, which supports timezone '
'Hive','Hive','Hive','//  TODO: why is this inconsistent with what we get by names? '
'Hive','Hive','Hive','// Not implemented. '
'Hive','Hive','Hive','// TODO this should be returning a class not just an int '
'Hive','Hive','Hive','//  there are 2 or more distincts, or distinct is not on count   TODO: may be the same count(distinct key), count(distinct key)   TODO: deal with duplicate count distinct key '
'Hive','Hive','Hive','//  id - TODO: use a non-zero index to check for offset errors. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#comment(String)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  TODO:pc need to enhance this with complex fields and getType_all function '
'Hive','Hive','Hive','//  Hive adds the same mapping twice... I wish we could fix stuff like that. '
'Hive','Hive','Hive','// todo: this should be moved to be an inner class of ReaderWrite as that is the only place it    is used '
'Hive','Hive','Hive','//  HarFileSystem has a bug where this method does not work properly   if the underlying FS is HDFS. See MAPREDUCE-1877 for more   information. This method is from FileSystem. '
'Hive','Hive','Hive','// TODO: Clean up/refactor assumptions '
'Hive','Hive','Hive','//  TODO This executor seems unnecessary. Here and TezChild '
'Hive','Hive','Hive',"//  TODO: Verify GB having is not a seperate filter (if so we shouldn't   introduce derived table) "
'Hive','Hive','Hive','/*  This is the TestPerformance Cli Driver for integrating performance regression tests as part of the Hive Unit tests. Currently this includes support for : 1. Running explain plans for TPCDS workload (non-partitioned dataset)  on 30TB scaleset. TODO : 1. Support for partitioned data set 2. Use HBase Metastore instead of DerbyThis suite differs from TestCliDriver w.r.t the fact that we modify the underlying metastoredatabase to reflect the dataset before running the queries. */'
'Hive','Hive','Hive','//  Hack note - different split strategies return differently typed lists, yay Java.   This works purely by magic, because we know which strategy produces which type. '
'Hive','Hive','Hive','//  TODO: deriveExplainAttributes should be called here, code is too fragile to move it around. '
'Hive','Hive','Hive','/*  * Stores binary key/value in sorted manner to get top-n key/value * TODO: rename to TopNHeap?  */'
'Hive','Hive','Hive','//  FIXME: isNull is not updated; which might cause problems '
'Hive','Hive','Hive','//  TODO: Should we use grpbyExprNDesc.getTypeInfo()? what if expr is   UDF '
'Hive','Hive','Hive','//  TODO: we should really probably throw. Keep the existing logic for now. '
'Hive','Hive','Hive',"/*  * It's column level Parquet reader which is used to read a batch of records for a list column. * TODO Currently List type only support non nested case.  */"
'Hive','Hive','Hive',"//  TODO: not clear why we don't do the rest of the cleanup if dagClient is not created.         E.g. jobClose will be called if we fail after dagClient creation but no before... "
'Hive','Hive','Hive','// TODO HIVE-16862: Implement a similar feature like "hive.tez.dynamic.semijoin.reduction" in hive on spark '
'Hive','Hive','Hive','//  TODO: Currently we do not expose any runtime info for non-streaming tables.   In future extend this add more information regarding table status.   e.g. Total size of segments in druid, loadstatus of table on historical nodes etc. '
'Hive','Hive','Hive','//  This is rather obscure. The end of last row cached is precisely at the split end offset.   If the split is in the middle of the file, LRR would read one more row after that,   therefore as unfortunate as it is, we have to do a one-row read. However, for that to   have happened, someone should have supplied a split that ends inside the last row, i.e.   a few bytes earlier than the current split, which is pretty unlikely. What is more likely   is that the split, and the last row, both end at the end of file. Check for this. '
'Hive','Hive','Hive','//  TODO: this should also happen on any error. Right now this task will just fail. '
'Hive','Hive','Hive','//  TODO null can also mean that this operation was interrupted. Should we really try to re-create the session in that case ? '
'Hive','Hive','Hive','//  TODO: Should we wait for the entry to actually be deleted from HDFS? Would have to   poll the reader count, waiting for it to reach 0, at which point cleanup should occur. '
'Hive','Hive','Hive','//  FIXME for ctas this is still needed because location is not set sometimes '
'Hive','Hive','Hive','//  TODO Consolidate this code with TezChild. '
'Hive','Hive','Hive','//  TODO: is this check even needed given what the caller checks? '
'Hive','Hive','Hive','//  FIXME: file paths in strings should be changed to either File or Path ... anything but String '
'Hive','Hive','Hive','//  TODO: why is "&& !isAcidIUDoperation" needed here? '
'Hive','Hive','Hive','//  Get all simple fields for partitions and related objects, which we can map one-on-one.   We will do this in 2 queries to use different existing indices for each one.   We do not get table and DB name, assuming they are the same as we are using to filter.   TODO: We might want to tune the indexes instead. With current ones MySQL performs   poorly, esp. with \'order by\' w/o index on large tables, even if the number of actual   results is small (query that returns 8 out of 32k partitions can go 4sec. to 0sec. by   just adding a \\"PART_ID\\" IN (...) filter that doesn\'t alter the results to it, probably '
'Hive','Hive','Hive',"//  Tez session relies on a threadlocal for open... If we are on some non-session thread,   just use the same SessionState we used for the initial sessions.   Technically, given that all pool sessions are initially based on this state, shoudln't   we also set this at all times and not rely on an external session stuff? We should   probably just get rid of the thread local usage in TezSessionState. "
'Hive','Hive','Hive',"//  hive input format doesn't handle the special condition of no paths + 1   split correctly. "
'Hive','Hive','Hive','//     not external itself. Is that the case? Why? '
'Hive','Hive','Hive','//  TODO: this is a stopgap fix. We really need to change all mappings by unique node ID,         or at least (in this case) track the latest unique ID for LlapNode and retry all '
'Hive','Hive','Hive','//  FIXME: druid storage handler relies on query.id to maintain some staging directories   expose queryid to session level '
'Hive','Hive','Hive',"//  TODO - we need to speed this up for the normal path where all partitions are under   the table and we don't have to stat every partition "
'Hive','Hive','Hive','//  if this function is frequently used, we need to optimize this. '
'Hive','Hive','Hive',"//  This is ugly in two ways...   1) We assume that LlapWrappableInputFormatInterface has NullWritable as first parameter.      Since we are using Java and not, say, a programming language, there's no way to check.   2) We ignore the fact that 2nd arg is completely incompatible (VRB -> Writable), because      vectorization currently works by magic, getting VRB from IF with non-VRB value param.   So we just cast blindly and hope for the best (which is obviously what happens). "
'Hive','Hive','Hive','//  TODO: two possible improvements         1) Right now we kill all the queries here; we could just kill -qpDelta.         2) After the queries are killed queued queries would take their place.            If we could somehow restart queries we could instead put them at the front '
'Hive','Hive','Hive',"//  This method is inefficient. It's only used when something crosses buffer boundaries. "
'Hive','Hive','Hive',"//  TODO: why doesn't this check class name rather than toString? "
'Hive','Hive','Hive','//  TODO: Modify Thrift IDL to generate export stage if needed '
'Hive','Hive','Hive',"//  Workaround for testing since tests can't set the env vars. "
'Hive','Hive','Hive',"//  TODO: the memory release could be optimized - we could release original buffers after we         are fully done with each original buffer from disk. For now release all at the end;         it doesn't increase the total amount of memory we hold, just the duration a bit.         This is much simpler - we can just remember original ranges after reading them, and         release them at the end. In a few cases where it's easy to determine that a buffer         can be freed in advance, we remove it from the map. "
'Hive','Hive','Hive','//  TODO: perhaps add counters for separate things and multiple buffer cases. '
'Hive','Hive','Hive','//  TODO: this might only be applicable to TezSessionPoolManager; try moving it there? '
'Hive','Hive','Hive',"//  TODO CAT - a number of these need to be updated.  Don't bother with deprecated methods as   this is just an internal class.  Wait until we're ready to move all the catalog stuff up   into ql. "
'Hive','Hive','Hive','//  in case of outer joins, we need to pull in records from the sides we still   need to produce output for apart from the big table. for e.g. full outer join   TODO: this reproduces the logic of the loop that was here before, assuming '
'Hive','Hive','Hive','//  TODO: not clear why this check and skipSeek are needed. '
'Hive','Hive','Hive','//  TODO: is this a safe assumption (name collision, external names...) '
'Hive','Hive','Hive','//  TODO: Cast Function in Calcite have a bug where it infer type on cast throws '
'Hive','Hive','Hive','// @TODO FIX this, we actually do not need this anymore, '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getTableName()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  Based on UserGroupInformation::createProxyUser.   TODO: use a proper method after we can depend on HADOOP-13081. '
'Hive','Hive','Hive',"//  TODO : isn't there a prior impl of an isDirectory utility PathFilter so users don't have to write their own? "
'Hive','Hive','Hive','//  get rid of trivial case first, so that we can safely assume non-null '
'Hive','Hive','Hive',"//  get the tmp URI path; it will be a hdfs path if not local mode   TODO [MM gap?]: this doesn't work, however this is MR only.        The path for writer and reader mismatch:        Dump the side-table for tag ... -local-10004/HashTable-Stage-1/MapJoin-a-00-(ds%3D2008-04-08)mm_2.hashtable        Load back 1 hashtable file      -local-10004/HashTable-Stage-1/MapJoin-a-00-srcsortbucket3outof4.txt.hashtable "
'Hive','Hive','Hive','//  TODO: this duplicates a method in ORC, but the method should actually be here. '
'Hive','Hive','Hive','//  TODO: will this work correctly with ACID? '
'Hive','Hive','Hive','//  filter columns may have -1 as index which could be partition column in SARG.   TODO: should this then be >=? '
'Hive','Hive','Hive','//  TODO: this interface is ugly. The two implementations are so far apart feature-wise '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#linesTerminatedBy()}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  validate is false by default if we enable the constraint   TODO: A constraint like NOT NULL could be enabled using ALTER but VALIDATE remains    false in such cases. Ideally VALIDATE should be set to true to validate existing data '
'Hive','Hive','Hive','//  TODO: this needs to be enhanced once change management based filesystem is implemented '
'Hive','Hive','Hive','// todo: it would be nice to check the contents of the files... could use orc.FileDump - it has   methods to print to a supplied stream but those are package private '
'Hive','Hive','Hive','/*      * Why no null and class checks?     * With the new design a WindowingSpec must contain a WindowFunctionSpec.     * todo: cleanup datastructs.      */'
'Hive','Hive','Hive','/*      * RW lock ensures we have a consistent view of the file data, which is important given that     * we generate "stripe" boundaries arbitrarily. Reading buffer data itself doesn\'t require     * that this lock is held; however, everything else in stripes list does.     * TODO: make more granular? We only care that each one reader sees consistent boundaries.     *       So, we could shallow-copy the stripes list, then have individual locks inside each.      */'
'Hive','Hive','Hive','//  TODO: wtf? '
'Hive','Hive','Hive','//  TODO Avoid reading this from the environment '
'Hive','Hive','Hive','//  TODO: we wish we could cache the Hive object, but it\'s not thread safe, and each         threadlocal we "cache" would need to be reinitialized for every query. This is         a huge PITA. Hive object will be cached internally, but the compat check will be         done every time inside get(). '
'Hive','Hive','Hive',"//  TODO: can we merge neighboring splits? So we don't init so many readers. "
'Hive','Hive','Hive',"//  Don't break! We might find a better match later. "
'Hive','Hive','Hive',"//  No stats exist for this key; add a new object to the cache   TODO: get rid of deepCopy after making sure callers don't use references "
'Hive','Hive','Hive','//  TODO: in the current impl, triggers are added to RP. For tez, no pool triggers (mapping between trigger name and   pool name) will exist which means all triggers applies to tez. For LLAP, pool triggers has to exist for attaching   triggers to specific pools.   For usability,   Provide a way for triggers sharing/inheritance possibly with following modes   ONLY - only to pool   INHERIT - child pools inherit from parent '
'Hive','Hive','Hive','//  TODO: Using 0 might be wrong; might need to walk down to find the '
'Hive','Hive','Hive','//  TODO: this should come through RelBuilder to the constructor as opposed to '
'Hive','Hive','Hive',"//  TODO : the contains message check is fragile, we should refactor SemanticException to be   queriable for error code, and not simply have a message   NOTE : IF_EXISTS might also want to invoke this, but there's a good possibility   that IF_EXISTS is stricter about table existence, and applies only to the ptn.   Therefore, ignoring IF_EXISTS here. "
'Hive','Hive','Hive','//  TODO : we were discussing an iter interface, and also a LazyTuple   change this when plans for that solidifies. '
'Hive','Hive','Hive','//  TODO: add method to UDFBridge to say if it is a cast func '
'Hive','Hive','Hive','//  TODO Unregister the task for state updates, which could in turn unregister the node. '
'Hive','Hive','Hive','//  Note: we assume 0-length split is correct given now LRR interprets offsets (reading an   extra row). Should we instead assume 1+ chars and add 1 for isUnfortunate? '
'Hive','Hive','Hive','//  TODO Maybe add the YARN URL for the app. '
'Hive','Hive','Hive','//  Note: this particular bit will not work for MM tables, as there can be multiple         directories for different MM IDs. We could put the path here that would account         for the current MM ID being written, but it will not guarantee that other MM IDs         have the correct buckets. The existing code discards the inferred data when the '
'Hive','Hive','Hive','//  TODO: not having aliases for path usually means some bug. Should it give up? '
'Hive','Hive','Hive','//  TODO Get rid of MapOutputInfo if possible '
'Hive','Hive','Hive',"//  TODO: this object is created once to call one method and then immediately destroyed.         So it's basically just a roundabout way to pass arguments to a static method. Simplify? "
'Hive','Hive','Hive','//  TODO This should be passed in the TaskAttemptContext instead '
'Hive','Hive','Hive','//  FIXME: use a different exception type? '
'Hive','Hive','Hive',"/*      * This is little complicated.  First we look for our own config values on this.  If those     * aren't set we use the Hive ones.  But Hive also has multiple ways to do this, so we need to     * look in both of theirs as well.  We can't use theirs directly because they wrap the     * codahale reporters in their own and we do not.      */"
'Hive','Hive','Hive','// TODO should replace with BytesWritable.copyData() once Hive  removes support for the Hadoop 0.20 series. '
'Hive','Hive','Hive',"//  If the import statement specified that we're importing to an external   table, we seem to be doing the following:      a) We don't allow replacement in an unpartitioned pre-existing table      b) We don't allow replacement in a partitioned pre-existing table where that table is external   TODO : Does this simply mean we don't allow replacement in external tables if they already exist?      If so(i.e. the check is superfluous and wrong), this can be a simpler check. If not, then      what we seem to be saying is that the only case we allow is to allow an IMPORT into an EXTERNAL      table in the statement, if a destination partitioned table exists, so long as it is actually "
'Hive','Hive','Hive','// todo: handle Insert Overwrite as well: HIVE-18154 '
'Hive','Hive','Hive','//  TODO HIVE-15865: Include information about pending requests, and last   allocation time once YARN Service provides this information. '
'Hive','Hive','Hive',"//  TODO: At this point we don't know the slot number of the requested host, so can't rollover to next available "
'Hive','Hive','Hive',"//  will this be true here?   Don't create a new object if we are already out of memory "
'Hive','Hive','Hive','//  TODO Replace this with a ExceptionHandler / ShutdownHook '
'Hive','Hive','Hive','//  NOTE: this can be called outside of HS2, without calling setupPool. Basically it should be         able to handle not being initialized. Perhaps we should get rid of the instance and '
'Hive','Hive','Hive',"/*    * RowResolver of outer query. This is used to resolve co-rrelated columns in Filter   * TODO:   *  this currently will only be able to resolve reference to parent query's column   *  this will not work for references to grand-parent column    */"
'Hive','Hive','Hive','//  TODO use stripe statistics to jump over stripes '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#fileFormat(String)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive',"//  TODO: Why is this needed (doesn't represent any cols) "
'Hive','Hive','Hive','//  TODO: this is invalid for SMB. Keep this for now for legacy reasons. See the other overload. '
'Hive','Hive','Hive','//  TODO: fix this '
'Hive','Hive','Hive','//  This probably should not happen; but it does... at least also stop the consumer. '
'Hive','Hive','Hive','//  This seems like a very wrong implementation. '
'Hive','Hive','Hive','// todo: should make abortTxns() write something into TXNS.TXN_META_INFO about this '
'Hive','Hive','Hive','//  registry again just in case. TODO: maybe we should enforce that. '
'Hive','Hive','Hive','//  TODO: lossy conversion, distance is considered seconds similar to timestamp '
'Hive','Hive','Hive','//  TODO: This is fraught with peril. '
'Hive','Hive','Hive','//  TODO Not the best way to share the address '
'Hive','Hive','Hive','/*  * This maps a split (path + offset) to an index based on the number of locations provided. * * If locations do not change across jobs, the intention is to map the same split to the same node. * * A big problem is when nodes change (added, removed, temporarily removed and re-added) etc. That changes * the number of locations / position of locations - and will cause the cache to be almost completely invalidated. * * TODO: Support for consistent hashing when combining the split location generator and the ServiceRegistry. *  */'
'Hive','Hive','Hive','//  The list is empty.   Too many concurrent operations; spurious failure.   List is drained and recreated concurrently.   Same for the OTHER list; spurious.   TODO: the fact that concurrent re-creation of other list necessitates full stop is not         ideal... the reason is that the list NOT being re-created still uses the list         being re-created for boundary check; it needs the old value of the other marker.         However, NO_DELTA means the other marker was already set to a new value. For now,         assume concurrent re-creation is rare and the gap before commit is tiny. '
'Hive','Hive','Hive','//  The record count from these counters may not be correct if the input vertex has   edges to more than one vertex, since this value counts the records going to all   destination vertices. '
'Hive','Hive','Hive','//  TODO: why is this copy-pasted from HiveInputFormat? '
'Hive','Hive','Hive','//  negative length should take precedence over positive value? '
'Hive','Hive','Hive','//  TODO: use DiskRangeList instead '
'Hive','Hive','Hive',"// todo: shouldn't ignoreEmptyFiles be set based on ExecutionEngine? "
'Hive','Hive','Hive',"//  All ErrorAndSolutions that ErrorHeuristic has generated. For the same error, they   should be the same though it's possible that different file paths etc "
'Hive','Hive','Hive','//  Different paths if running locally vs a remote fileSystem. Ideally this difference should not exist. '
'Hive','Hive','Hive',"// todo: should this not be passed in the c'tor? "
'Hive','Hive','Hive','//  Currently, deserialization of complex types is not supported '
'Hive','Hive','Hive','//  TODO: what about partitions not in the default location? '
'Hive','Hive','Hive','//  TODO: we currently put task info everywhere before we submit it and know the "real" node id.         Therefore, we are going to store this separately. Ideally, we should roll uniqueness '
'Hive','Hive','Hive','//  It would be nice if OI could return typeInfo... '
'Hive','Hive','Hive','// TODO replace IgnoreKeyTextOutputFormat with a  HiveOutputFormatWrapper in StorageHandler '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#getNumBuckets()}. '
'Hive','Hive','Hive','// TODO This line can be removed once precommit jenkins jobs move to Java 8 '
'Hive','Hive','Hive','//  Recovery is not implemented yet for PPD path. '
'Hive','Hive','Hive','//  ShimLoader.getHadoopShims().isSecurityEnabled() will only check that   hadoopAuth is not simple, it does not guarantee it is kerberos '
'Hive','Hive','Hive','//  Find the class that has this method.   Note that Method.getDeclaringClass() may not work here because the method '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatAddPartitionDesc.#create(HCatPartition)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  fs.permission.AccessControlException removed by HADOOP-11356, but Hive users on older   Hadoop versions may still see this exception .. have to reference by name. '
'Hive','Hive','Hive','// this is dumb. HiveOperation is not always set. see HIVE-16447/HIVE-16443 '
'Hive','Hive','Hive','//  TODO: Once HIVE-18948 is in, should be able to retrieve writeIdList from the conf.  cachedWriteIdList = AcidUtils.getValidTxnWriteIdList(conf);   '
'Hive','Hive','Hive','//  This is a non-pool session, get rid of it. '
'Hive','Hive','Hive','//  TODO: remove this '
'Hive','Hive','Hive','//  Not implemented '
'Hive','Hive','Hive','//  TODO: we only ever use one row of these at a time. Why do we need to cache multiple? '
'Hive','Hive','Hive','/*    * getDeserializer   *   * Get the Deserializer for a table.   *   * @param conf   *          - hadoop config   * @param table   *          the table   * @return   *   Returns instantiated deserializer by looking up class name of deserializer stored in   *   storage descriptor of passed in table. Also, initializes the deserializer with schema   *   of table.   * @exception MetaException   *              if any problems instantiating the Deserializer   *   *              todo - this should move somewhere into serde.jar   *    */'
'Hive','Hive','Hive','//  Not pretty, but we need a way to get the size '
'Hive','Hive','Hive','//  See ctor comment.   TODO: we should get rid of this '
'Hive','Hive','Hive','//  in addition to that Druid allow numeric dimensions now so this check is not accurate '
'Hive','Hive','Hive','//  converted = true; // [TODO]: should we check & convert type to String and set it to true? '
'Hive','Hive','Hive',"//  TODO: ideally we should make a special form of insert overwrite so that we:         1) Could use fast merge path for ORC and RC.         2) Didn't have to create a table. "
'Hive','Hive','Hive','//  TODO: policy on deserialization errors '
'Hive','Hive','Hive','//  TODO: Do we need to keep track of RR, ColNameToPosMap for every op or '
'Hive','Hive','Hive','// Creating new QueryState unfortunately causes all .q.out to change - do this in a separate ticket  Sharing QueryState between generating the plan and executing the query seems bad '
'Hive','Hive','Hive',"//  TODO: we currently pass null counters because this doesn't use LlapRecordReader.         Create counters for non-elevator-using fragments also? "
'Hive','Hive','Hive',"//  TODO: Not sure that this is the correct behavior. It doesn't make sense to create the   partition with column with invalid type. This should be investigated later. "
'Hive','Hive','Hive','//  todo: use SemanticAnalyzer::genExprNodeDesc   currently SA not available to PTFTranslator. '
'Hive','Hive','Hive','//  TODO: we might as well kill the AM at this point. How do we do that from here? '
'Hive','Hive','Hive',"//  bitsets can't be correctly serialized by Kryo's default serializer "
'Hive','Hive','Hive','//  TODO Ideally move some of the other cleanup code from resetCurrentDag over here '
'Hive','Hive','Hive','/*  * TODO:pc remove application logic to a separate interface.  */'
'Hive','Hive','Hive','// todo: should this be OK for MM table? '
'Hive','Hive','Hive','//  TODO: this is a limitation of the AST rewriting approach that we will   not be able to overcome till proper integration of full multi-insert   queries with Calcite is implemented.   The current rewriting gather references from insert clauses and then   updates them with the new subquery references. However, if insert   clauses use * or tab.*, we cannot resolve the columns that we are   referring to. Thus, we just bail out and those queries will not be   currently optimized by Calcite.   An example of such query is:   FROM T_A a LEFT JOIN T_B b ON a.id = b.id   INSERT OVERWRITE TABLE join_result_1   SELECT a.*, b.*   INSERT OVERWRITE TABLE join_result_3   SELECT a.*, b.*; '
'Hive','Hive','Hive','//  TODO: delete tables/databases? '
'Hive','Hive','Hive','// TODO: Improve this '
'Hive','Hive','Hive',"//  TODO: this only applies to current thread, so it's not useful at all. "
'Hive','Hive','Hive','//  Tracks tasks which could not be allocated immediately.   Tasks are tracked in the order requests come in, at different priority levels.   TODO HIVE-13538 For tasks at the same priority level, it may be worth attempting to schedule tasks with '
'Hive','Hive','Hive','//  FIXME: current objective is to keep the previous outputs...but this is possibly bad.. '
'Hive','Hive','Hive','//  Assume the IO is enabled on the daemon by default. We cannot reasonably check it here. '
'Hive','Hive','Hive','// todo: since HIVE-16669 is not done, Minor compact compacts insert delta as well - it should not  Assert.assertTrue("Actual line(file) " + i + " bc: " + rs.get(i), rs.get(i).endsWith(expected2[i][1])); '
'Hive','Hive','Hive','/*    * Send dropped partition notifications. Subscribers can receive these notifications for a   * particular table by listening on a topic named "dbName.tableName" with message selector   * string {@value org.apache.hive.hcatalog.common.HCatConstants#HCAT_EVENT} =   * {@value org.apache.hive.hcatalog.common.HCatConstants#HCAT_DROP_PARTITION_EVENT}.   * </br>   * TODO: DataNucleus 2.0.3, currently used by the HiveMetaStore for persistence, has been   * found to throw NPE when serializing objects that contain null. For this reason we override   * some fields in the StorageDescriptor of this notification. This should be fixed after   * HIVE-2084 "Upgrade datanucleus from 2.0.3 to 3.0.1" is resolved.    */'
'Hive','Hive','Hive','/*  A nice error message should be given to user.  */'
'Hive','Hive','Hive','//  Is smbJoin possible? We need correct order '
'Hive','Hive','Hive','//  A lot of these methods could be done more efficiently by operating on the Text value   directly, rather than converting to HiveChar. '
'Hive','Hive','Hive',"//  it's only for GBY which should forward all values associated with the key in the range   of limit. new value should be attatched with the key but in current implementation,   only one values is allowed. with map-aggreagtion which is true by default,   this is not common case, so just forward new key/value and forget that (todo) "
'Hive','Hive','Hive','//  ### REVIEW: oops, somebody left the last command   unterminated; should we fix it for them or complain?   For now be nice and fix it. '
'Hive','Hive','Hive','/*    * Checks whether a given url is in a valid format.   *   * The current uri format is: jdbc:hive://[host[:port]]   *   * jdbc:hive:// - run in embedded mode jdbc:hive://localhost - connect to   * localhost default port (10000) jdbc:hive://localhost:5050 - connect to   * localhost port 5050   *   * TODO: - write a better regex. - decide on uri format    */'
'Hive','Hive','Hive',"//  Don't fail -- would be better to actually compute a range of [90,+inf) "
'Hive','Hive','Hive','// todo: is this pre or post upgrade?  todo: can different tables be in different FileSystems? '
'Hive','Hive','Hive','//  Bloating partinfo with inputJobInfo is not good '
'Hive','Hive','Hive','//  We do not need to generate the QB again, but rather we use it directly '
'Hive','Hive','Hive',"//  TODO: ideally we'd register TezCounters here, but it seems impossible before registerTask. "
'Hive','Hive','Hive','//  TODO: We have a cache for Table objects in SemanticAnalyzer::getTableObjectByName()   We need to move that cache elsewhere and use it from places like this. '
'Hive','Hive','Hive','//  TODO Change the indexCache to be a guava loading cache, rather than a custom implementation. '
'Hive','Hive','Hive','//  todo: fix comment as of HIVE-14988 '
'Hive','Hive','Hive','//  TODO: some SessionState internals are not thread safe. The compile-time internals are synced         via session-scope or global compile lock. The run-time internals work by magic!         They probably work because races are relatively unlikely and few tools run parallel         queries from the same session.         1) OperationState should be refactored out of SessionState, and made thread-local. '
'Hive','Hive','Hive','//  FIXME extract the right info type '
'Hive','Hive','Hive','//  TODO: should this be configurable via annotation or extending @RunWith annotation? '
'Hive','Hive','Hive','//  Needs more explanation here   Xmx is not the max heap value in JDK8. You need to subtract 50% of the survivor fraction   from this, to get actual usable memory before it goes into GC '
'Hive','Hive','Hive','//  TODO: in union20.q the tab alias is not properly propagated down the   operator tree. This happens when UNION ALL is used as sub query. Hence, even   if column statistics are available, the tab alias will be null which will fail   to get proper column statistics. For now assume, worst case in which   denominator is 2. '
'Hive','Hive','Hive','//  Optional feature not implemented '
'Hive','Hive','Hive',"//  TODO, we don't support this, but we should, since users may create an empty partition and   then load data into it. "
'Hive','Hive','Hive','//  TODO: backward compat for Hive <= 0.12. Can be removed later. '
'Hive','Hive','Hive','//  @deprecated in favour of {@link HCatTable.#storageHandler(String)}. To be removed in Hive 0.16. '
'Hive','Hive','Hive','//  FIXME : implement consolidateEvent(..) similar to dumpEvent(ev,evRoot) '
'Hive','Hive','Hive','//  TODO: Support checking multiple child operators to merge further. '
'Hive','Hive','Hive','//  According to calcite, it is going to be removed before Calcite-2.0   TODO: to handle CorrelationId '
'Hive','Hive','Hive',"//  TODO: if there's versioning/etc., it will come in here. For now we rely on external         locking or ordering of calls. This should potentially return a Future for that. "
'Hive','Hive','Hive','// todo: should this be done for MM?  is it ok to use CombineHiveInputFormat with MM? '
'Maven','Maven','Maven','/*                      * TODO Extensions like Flex Mojos use custom scopes like "merged", "internal", "external", etc. In                     * order to don\'t break backward-compat with those, only warn but don\'t error out.                      */'
'Maven','Maven','Maven',"/*      * TODO this needs to accept a {@link OverConstrainedVersionException} as returned by     *       {@link #getVersionRangeViolation(int)} but it's not used like that in     *       DefaultLegacyArtifactCollector      */"
'Maven','Maven','Maven',"//  it's the building of the grandchild project, having already cached the child project   (but not the parent project), which causes the problem. "
'Maven','Maven','Maven','//  TODO I would like to get rid of this. jvz. '
'Maven','Maven','Maven',"/*          * NOTE: This should be considered a quirk to support interop with Maven's legacy ArtifactDeployer which         * processes one artifact at a time and hence cannot associate the artifacts from the same project to use the         * same timestamp+buildno for the snapshot versions. Allowing the caller to pass in metadata from a previous         * deployment allows to re-establish the association between the artifacts of the same project.          */"
'Maven','Maven','Maven',"//  TODO I'm really wondering where this method belongs; smells like it should be on MavenProject, but for some   reason it isn't ? This localization is kind-of a code smell. "
'Maven','Maven','Maven',"//  TODO: hack because metadata isn't generated in m2e correctly and i want to run the maven i have in the "
'Maven','Maven','Maven','//  TODO this does not belong here. '
'Maven','Maven','Maven','//  this is FOUL!          snapshotArtifact.isSnapshot(); '
'Maven','Maven','Maven',"//  NOTE: There's java.nio.charset.MalformedInputException and sun.io.MalformedInputException "
'Maven','Maven','Maven','/*      * Derive the path portion of the given URL.     *     * @param url the repository URL     * @return the basedir of the repository     * TODO need to URL decode for spaces?      */'
'Maven','Maven','Maven','// TODO restore these if it makes sense '
'Maven','Maven','Maven','//  TODO could the configuration be passed to lookup and the configurator known to plexus via the descriptor   so that this method could entirely be handled by a plexus lookup? '
'Maven','Maven','Maven','// TODO error reporting '
'Maven','Maven','Maven',"//  TODO This replacing shouldn't be necessary as user.home should be in the "
'Maven','Maven','Maven',"//  TODO currently this is first wins, but really we should take the latest by comparing either the   snapshot timestamp, or some other timestamp later encoded into the metadata.   TODO this needs to be repeated here so the merging doesn't interfere with the written metadata    - we'd be much better having a pristine input, and an ongoing metadata for merging instead "
'Maven','Maven','Maven','//  TODO what about wildcards? Just specifying groups? versions? '
'Maven','Maven','Maven','//  TODO Use StringUtils here '
'Maven','Maven','Maven','//  TODO From a concurrency perspective, this class is not good. The combination of mutable/immutable state is not nice '
'Maven','Maven','Maven','//  TODO we probably want to warn the user that he is building an artifact with   different values than in dependencyManagement '
'Maven','Maven','Maven','//  ---------------------------------------------------------------------------------   I\'m not sure if this last regexp was really intended to disallow the usage of   network paths as user.home directory. Unfortunately it did. I removed it and   have not detected any problems yet.   ---------------------------------------------------------------------------------   path = path.replaceAll( "//", "/" ); '
'Maven','Maven','Maven','//  TODO better way than static? this might hide messages in a reactor '
'Maven','Maven','Maven','/*  * This exception is thrown if an application attempts to attach * two of the same artifacts to a single project. * * @author pgier * @author jdcasey * TODO Make this a checked exception, and modify the API of MavenProjectHelper. * Currently, this modification would create compatibility problems for existing plugins.  */'
'Maven','Maven','Maven','// TODO lifecycles being executed  TODO what runs in each phase  TODO plugins that need downloading  TODO project dependencies that need downloading  TODO unfortunately the plugins need to be downloaded in order to get the plugin.xml file. need to externalize this        from the plugin archive.  TODO this will be the class that people get in IDEs to modify '
'Maven','Maven','Maven','/*          * NOTE: For plugins that depend on other plugin artifacts the plugin realm contains more than one plugin         * descriptor. However, only the first descriptor is of interest.          */'
'Maven','Maven','Maven','//  TODO not sure about this here, and may want a getLog on here as well/instead '
'Maven','Maven','Maven','//  TODO Does this check need to happen here? Had to add the same call   below when we iterate on child nodes -- will that suffice? '
'Maven','Maven','Maven','//  TODO MNG-5766 changes likely made this redundant '
'Maven','Maven','Maven',"//  TODO Move this to plexus-utils' PathTool. "
'Maven','Maven','Maven','//  go find the version. This is a total hack. See previous comment. '
'Maven','Maven','Maven',"/*          * NOTE: This is primarily to keep backward-compat with Maven 2.x which did not validate that dependencies are         * unique within a single POM. Upon multiple declarations, 2.x just kept the last one but retained the order of         * the first occurrence. So when we're in lenient/compat mode, we have to deal with such broken POMs and mimic         * the way 2.x works. When we're in strict mode, the removal of duplicates just saves other merging steps from         * aftereffects and bogus error messages.          */"
'Maven','Maven','Maven','//  TODO Validate for < 0? '
'Maven','Maven','Maven','/*          * MNG-4312: We neither have reserved all of the above magic expressions nor is their set fixed/well-known (it         * gets occasionally extended by newer Maven versions). This imposes the risk for existing plugins to         * unintentionally use such a magic expression for an ordinary system property. So here we check whether we         * ended up with a magic value that is not compatible with the type of the configured mojo parameter (a string         * could still be converted by the configurator so we leave those alone). If so, back off to evaluating the         * expression from properties only.          */'
'Maven','Maven','Maven',"//    This is not ideal but there are events specifically for configuration from the CLI which I don't   believe are really valid but there are ITs which assert the right events are published so this   needs to be supported so the EventSpyDispatcher needs to be put in the CliRequest so that   it can be accessed by configuration processors. "
'Maven','Maven','Maven','//  TODO could we use a map? Maybe if the parent did that for components too, as this is too vulnerable to '
'Maven','Maven','Maven','//  TODO current policy is to retain the original version - is this correct, do we need strategies or is that handled elsewhere? '
'Maven','Maven','Maven','//  TODO The configuration for the lifecycle needs to be externalized so that I can use the annotations properly for the   wiring and reference and external source for the lifecycle configuration. '
'Maven','Maven','Maven','//  TODO a similar test should be created to test the dependency management (basically all usages   of DefaultModelBuilder.getCache() are affected by MNG-6530 '
'Maven','Maven','Maven',"//  TODO shouldn't the versions be merged across relocations? "
'Maven','Maven','Maven','//  TODO this should not need to be handed off... '
'Maven','Maven','Maven','//  note this will not be hit for Maven 1.x project.xml as it is an incompatible schema '
'Maven','Maven','Maven',"//  TODO push all common bits back to plexus cli and prepare for transition to Guice. We don't need 50 ways to make CLIs "
'Maven','Maven','Maven','//  ------------------------------------------------------------------------   Metadata Resolution Exceptions: ArtifactResolutionExceptions   ------------------------------------------------------------------------ '
'Maven','Maven','Maven','// TODO why is this using the context '
'Maven','Maven','Maven',"//  TODO !![jc; 28-jul-2005] check this; if we're using '-r' and there are aggregator tasks, this will result in weirdness. "
'Maven','Maven','Maven',"//  Validate versions aren't inherited when using parent ranges the same way as when read externally. "
'Maven','Maven','Maven','//  TODO need to externalize CliRequest '
'Maven','Maven','Maven','//    We should get a whole slew of dependencies resolving this artifact transitively '
'Maven','Maven','Maven','//  NOTE: We SHOULD NOT be inheriting status, since this is an assessment of the POM quality.   NOTE: We SHOULD NOT be inheriting relocation, since this relates to a single POM '
'Maven','Maven','Maven','//  TODO could be more efficient by sorting the list and then moving along the restrictions in order? '
'Maven','Maven','Maven','//  set the recommended version   TODO maybe its better to just pass the range through to retrieval and use a   transformation? '
'Maven','Maven','Maven',"//    There are too many ConfigurationProcessors so we don't know which one to run so report the error.   "
'Maven','Maven','Maven','//  1.any < 1.1 ? '
'Maven','Maven','Maven','/*  * Exception that occurs when an artifact file is used, but has not been resolved. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO it may be better for artifact.getFile() to throw it - perhaps it is a runtime exception?  */'
'Maven','Maven','Maven','//  TODO log message or throw exception? '
'Maven','Maven','Maven','/*      * NOTE: This exists merely for backward-compat with legacy-style lifecycle definitions and allows configuration     * injection to work instead of failing.      */'
'Maven','Maven','Maven','//  This class needs to stick around because it was exposed the the remote resources plugin started using it instead of   getting the repositories from the project. '
'Maven','Maven','Maven','//  Maven 2.x quirk: an artifact always points at the local repo, regardless whether resolved or not '
'Maven','Maven','Maven','//  TODO Optimize; or maybe just rewrite the whole way aggregating mojos are being run. '
'Maven','Maven','Maven','/*              * NOTE: getId() was added in 3.x and is as such not implemented by plugins compiled against 2.x APIs.              */'
'Maven','Maven','Maven',"//  TODO don't catch exception "
'Maven','Maven','Maven','//  TODO use settings? '
'Maven','Maven','Maven','/*      * TODO: Whether duplicates should be removed looks like an option for the generated merger.      */'
'Maven','Maven','Maven','// TODO These two tests display a lack of symmetry with respect to the input which is a free form string and the        mojo descriptor which comes back. All the free form parsing needs to be done somewhere else, this is        really the function of the CLI, and then the pre-processing of that output still needs to be fed into        a hinting process which helps flesh out the full specification of the plugin. The plugin manager should        only deal in concrete terms -- all version finding mumbo jumbo is a customization to base functionality        the plugin manager provides. '
'Maven','Maven','Maven','// TODO this will be the basis of the customizable lifecycle execution so need to figure this out quickly. '
'Maven','Maven','Maven','//  TODO Use the following two instead of manageArtifact   TODO Remove ResolutionListenerDM interface '
'Maven','Maven','Maven',"//  We have collected all the problems so let's mimic the way the old code worked and just blow up right here.   That's right lets just let it rip right here and send a big incomprehensible blob of text at unsuspecting   users. Bad dog!"
'Maven','Maven','Maven','//  note: see MNG-3454. This causes a problem, but fixing it may break more.'
'Maven','Maven','Maven',"//  FIXME: This is hacky. What if module directory doesn't match artifactid, and parent   is coming from the repository?? "
'Maven','Maven','Maven','//  NOTE: DuplicateArtifactAttachmentException is currently unchecked, so be careful removing this try/catch!   This is necessary to avoid creating compatibility problems for existing plugins that use   MavenProjectHelper.attachArtifact(..). '
'Maven','Maven','Maven','/*  * Describes a version transformation during artifact resolution. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO try and refactor to remove abstract main.methods - not particular happy about current design  */'
'Maven','Maven','Maven','/*      * @return the required dependencies in a specified scope     * TODO the name is not intelligible      */'
'Maven','Maven','Maven',"//  TODO shouldn't need to double up on this work, only done for simplicity of handling   recommended "
'Maven','Maven','Maven','//    Trying to give loggers back is a bad idea. Ceki said so :-)   notice to self: what was this method supposed to do?   '
'Maven','Maven','Maven','//  TODO Kristian wonders if this class really is necessary and if it overlaps other concepts. '
'Maven','Maven','Maven','//  TODO might be better to have source.retrieve() throw a specific exception for this   situation '
'Maven','Maven','Maven','//  This is really a wagon TransferFailedException so something went wrong after we successfully   retrieved the metadata. '
'Maven','Maven','Maven','/*  * Filter to exclude from a list of artifact patterns. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO I think this is equiv. to exclusion set filter in maven-core  */'
'Maven','Maven','Maven',"//  TODO this is only to provide a project for plugins that don't need a project to execute but need some   of the values from a MavenProject. Ideally this should be something internal and nothing outside Maven "
'Maven','Maven','Maven','//  TODO why MVN adds dot /./ in paths??? '
'Maven','Maven','Maven','//  TODO introducing a space here...not sure what else to do but collapse whitespace '
'Maven','Maven','Maven','//  igorf: Way too many declared exceptions!'
'Maven','Maven','Maven','/*  * Describes repository directory metadata. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO not happy about the store method - they use "this"  */'
'Maven','Maven','Maven','//  TODO We currently cannot tell which <dependencyManagement> section contained the management        information. When the resolver provides this information, these log messages should be updated        to contain it. '
'Maven','Maven','Maven','//  TODO Hack to make the cycle detection the same for the new graph builder '
'Maven','Maven','Maven','//  TODO the antrun plugin has its own configurator, the only plugin that does. might need to think about how that works   TODO remove the coreArtifactFilterManager '
'Maven','Maven','Maven',"//    TODO jvz Why isn't all this checking the job of the duty of the workspace resolver, we know that we   have a model that is suitable, yet more checks are done here and the one for the version is problematic   before because with parents as ranges it will never work in this scenario.   "
'Maven','Maven','Maven','/*      * TODO: The order of the merged list could be controlled by an attribute in the model association: target-first,     * source-first, dominant-first, recessive-first      */'
'Maven','Maven','Maven','//  TODO add better exception '
'Maven','Maven','Maven','//  TODO let the scope handler deal with this '
'Maven','Maven','Maven','//  artifact or not. things like the stupid dummy artifact coming from surefire.'
'Maven','Maven','Maven','//  this is just silly, lookupList should return an empty list! '
'Maven','Maven','Maven','//  TODO This needs to be colorized '
'Maven','Maven','Maven','/*      * TODO: Whether the merge continues recursively into an existing node or not could be an option for the generated     * merger      */'
'Maven','Maven','Maven','/*  * Specific problems during resolution that we want to account for: * <ul> *   <li>missing metadata</li> *   <li>version range violations</li> *   <li>version circular dependencies</li> *   <li>missing artifacts</li> *   <li>network/transfer errors</li> *   <li>file system errors: permissions</li> * </ul> * * @author Jason van Zyl * TODO carlos: all these possible has*Exceptions and get*Exceptions main.methods make the clients too *       complex requiring a long list of checks, need to create a parent/interface/encapsulation *       for the types of exceptions  */'
'Maven','Maven','Maven',"/*      * TODO this needs to accept a {@link OverConstrainedVersionException} as returned by     *       {@link #getVersionRangeViolation(int)} but it's not used like that in     *       {@link org.apache.maven.repository.legacy.resolver.DefaultLegacyArtifactCollector}      */"
'Maven','Maven','Maven',"//  MAVENAPI FIXME: the DAG used is NOT only used to represent the dependency relation,   but also for <parent>, <build><plugin>, <reports>. We need multiple DAG's   since a DAG can only handle 1 type of relationship properly.   Usecase:  This is detected as a cycle:   org.apache.maven:maven-plugin-api                -(PARENT)->   org.apache.maven:maven                           -(inherited REPORTING)->   org.apache.maven.plugins:maven-checkstyle-plugin -(DEPENDENCY)->   org.apache.maven:maven-plugin-api   In this case, both the verify and the report goals are called   in a different lifecycle. Though the compiler-plugin has a valid usecase, although   that seems to work fine. We need to take versions and lifecycle into account. "
'Maven','Maven','Maven',"//  Don't want the artifact's version in here, as this is stored in the directory above that "
'Maven','Maven','Maven','/*  * Use a regular expression search to find and resolve expressions within the POM. * * @author jdcasey Created on Feb 3, 2005 * TODO Consolidate this logic with the PluginParameterExpressionEvaluator, minus deprecations/bans.  */'
'Maven','Maven','Maven','//  FIXME: Filter out the inherited == false stuff! '
'Maven','Maven','Maven','/*      * TODO pluginDescriptor classRealm and artifacts are set as a side effect of this     *      call, which is not nice.     * @throws PluginResolutionException      */'
'Maven','Maven','Maven','//  We need to set the file here or the resolver will fail with an NPE, not fully equipped to deal   with multiple local repository implementations yet. '
'Maven','Maven','Maven','//  TODO if it was null, we really need to go find them now... or is this taken care of by the ordering? '
'Maven','Maven','Maven',"//  This won't be valid, but it constructs something easy to read in the error message "
'Maven','Maven','Maven','//  TODO This should eventually be migrated to DefaultPathTranslator. '
'Maven','Maven','Maven',"/*                      * NOTE: Other configurators like the map-oriented one don't call into the listener, so do it the                     * hard way.                      */"
'Maven','Maven','Maven','/*  * Wraps an active project instance to be able to receive updates from its artifact without affecting the original * attributes of this artifact. * * @author <a href="mailto:brett@apache.org">Brett Porter</a> * TODO I think this exposes a design flaw in that the immutable and mutable parts of an artifact are in one class and * should be split. ie scope, file, etc depend on the context of use, whereas everything else is immutable.  */'
'Maven','Maven','Maven','//  Some better conventions for the test poms needs to be created and each of these tests   that represent a verification of a specification item needs to be a couple lines at most.   The expressions help a lot, but we need a clean to pick up a directory of POMs, automatically load   them into a resolver, create the expression to extract the data to validate the Model, and the URI   to validate the properties. We also need a way to navigate from the Tex specification documents to '
'Maven','Maven','Maven',"//  TODO classpath check doesn't belong here - that's the other method "
'Maven','Maven','Maven','//  TODO Not entirely the same message '
'Maven','Maven','Maven','//  TODO this could be a lot nicer... should really be in the snapshot transformation? '
'Maven','Maven','Maven','//  TODO should this be part of mediation? '
'Maven','Maven','Maven',"//  FIXME: somehow report to the user   that there are too many '..' elements.   For now, ignore the extra '..'. "
'Maven','Maven','Maven','/*              * MNG-4900: Hack to workaround deficiency of legacy API which makes it impossible for plugins to access the             * global profile manager which is required to build a POM like a CLI invocation does. Failure to consider             * the activated profiles can cause repo declarations to be lost which in turn will result in artifact             * resolution failures, in particular when using the enhanced local repo which guards access to local files             * based on the configured remote repos.              */'
'Maven','Maven','Maven','//  TODO without #, this could just be an evaluate call... '
'Maven','Maven','Maven',"//    Builder, concurrency and parallelism     We preserve the existing main.methods for builder selection which is to look for various inputs in the threading   configuration. We don't have an easy way to allow a pluggable builder to provide its own configuration   parameters but this is sufficient for now. Ultimately we want components like Builders to provide a way to   extend the command line to accept its own configuration parameters."
'Maven','Maven','Maven','//  TODO ick. this forces the OCE that should have come from the previous call. It is still '
'Maven','Maven','Maven',"// Maybe it's better to move some of those main.methods to separate class (SoC)."
'Maven','Maven','Maven','//  TODO Not sure how best to set these for this implementation... '
'Maven','Maven','Maven',"/*          * NOTE: This should be considered a quirk to support interop with Maven's legacy ArtifactDeployer which         * processes one artifact at a time and hence cannot associate the artifacts from the same project to use the         * same version index. Allowing the caller to pass in metadata from a previous deployment allows to re-establish         * the association between the artifacts of the same project.          */"
'Maven','Maven','Maven',"//  TODO shouldn't need a file intermediatary - improve wagon to take a stream "
'Maven','Maven','Maven','//  TODO should we deprecate? '
'Maven','Maven','Maven',"//  shouldn't it be java-sources given the classifier?   shouldn't it be false given the classifier? "
'Maven','Maven','Maven','//  validation error, continue project building and delay failing to help IDEs   result.getProblems().addAll(e.getProblems()) ? '
'Maven','Maven','Maven','/*  * The bean containing the Mojo descriptor.<br> * For more information about the usage tag, have a look to: * <a href="https://maven.apache.org/developers/mojo-api-specification.html"> * https://maven.apache.org/developers/mojo-api-specification.html</a> * * TODO is there a need for the delegation of MavenMojoDescriptor to this? * Why not just extend ComponentDescriptor here?  */'
'Maven','Maven','Maven','//  TODO add better exception that can detail the two conflicting artifacts '
'Maven','Maven','Maven','//  TODO Remove this! '
'Maven','Maven','Maven','//  TODO also do this logging for other metadata? '
'Maven','Maven','Maven','/*          * NOTE: From Artifact.hasClassifier(), an empty string and a null both denote "no classifier". However, some         * plugins only check for null, so be sure to nullify an empty classifier.          */'
'Maven','Maven','Maven','//  TODO not sure that it should assume this, maybe the calls to addMetadata should pre-merge, then artifact   replaces? '
'Maven','Maven','Maven','//  Why are we just ignoring this exception? Are exceptions are being used for flow control '
'Maven','Maven','Maven','//  TODO This is too early for build extensions, so maybe just remove it? '
'Maven','Maven','Maven','/*          * The workspace/reactor is in flux so we better not assume definitive information for any of its         * artifacts/projects.          */'
'Maven','Maven','Maven',"//  blech! this isn't even intelligible as a method name. provided for   consistency... "
'Maven','Maven','Maven','/*  * Pseudo test to generate documentation fragment about supported CLI options. TODO such documentation generation code * should not be necessary as unit test but should be run during site generation (Velocity? Doxia macro?)  */'
'Maven','Maven','Maven','//  TODO throw something instead? '
'Poi','Poi','Poi','//  Complex file   TODO '
'Poi','Poi','Poi','//  Sometimes, the grpprl does not contain data at every offset. I have no idea why this happens. '
'Poi','Poi','Poi','/* @todo handle table sprms from complex files */'
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): dsi.setDocparts(P_DOCPARTS); '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): assertNull(dsi.getDocparts());   FIXME (byte array properties not yet implemented): assertNull(dsi.getHeadingPair()); '
'Poi','Poi','Poi','//  TODO clone some more properties ?  '
'Poi','Poi','Poi','/*  TODO: handle rect path  */'
'Poi','Poi','Poi','// TODO -- implement these as needed  BrtFileVersion(128), //file version '
'Poi','Poi','Poi','// TODO: depending on the formatId getDateTimeText() should return formatted date  assertEquals("08/12/08", notesHdd.getDateTimeText()); '
'Poi','Poi','Poi','/*  * Test Freeform object. * The Freeform shape is constructed from java.awt.GeneralPath. * Check that the get/set path accessors are consistent. * (TODO: verification of Bezier curves is more difficult due to rounding error.  Figure out a test approach for that) * * @author Yegor Kozlov  */'
'Poi','Poi','Poi','//  TODO: Can these ever have formatting on them? '
'Poi','Poi','Poi','//  "A .. B" not valid syntax for "A:B"   and there\'s no other valid expression that fits this grammar '
'Poi','Poi','Poi','//  PDXNAN(0x006F,0x0C65,"PDXnan"), // invalid combo '
'Poi','Poi','Poi','//  Copy merged regions that are fully contained on the row   FIXME: is this something that rowShifter could be doing? '
'Poi','Poi','Poi','/* @todo handle large PAPX from data stream */'
'Poi','Poi','Poi','/*  TODO update body element, update xwpf element, verify that         * incoming paragraph belongs to this document or if not, XML was         * copied properly (namespace-abbreviations, etc.)          */'
'Poi','Poi','Poi','/*  *\tTest to see if Range.insertBefore() works even if the Range contains a *\tCharacterRun that uses Unicode characters. * * TODO - re-enable me when unicode paragraph stuff is fixed!  */'
'Poi','Poi','Poi','//  Some files seem to lie about their unicode status, which      is very very pesky. Try to work around these, but this '
'Poi','Poi','Poi','//  TODO - check the formula once tables and    arrays are properly supported '
'Poi','Poi','Poi','//  TODO: handle LCID codes '
'Poi','Poi','Poi','//  TODO: use new properties '
'Poi','Poi','Poi','//  TODO Update this to expose first and last sheet indexes '
'Poi','Poi','Poi',"//  We get an error when we parse [Content_Types].xml   because it's not a valid URI. "
'Poi','Poi','Poi',"//  TODO Work out how to report this, given we can't change the method signature... "
'Poi','Poi','Poi','/*  * TODO: document me *  * @author Sergey Vladimirov (vlsergey {at} gmail {dot} com)  */'
'Poi','Poi','Poi','//  FIXME: is this something that rowShifter could be doing? '
'Poi','Poi','Poi','// TODO: default "autobreaks" is different in HSSF and XSSF '
'Poi','Poi','Poi','//  We need a new CTXf for the main styles   TODO decide on a style ctxf '
'Poi','Poi','Poi','// TODO: implement more dashing styles '
'Poi','Poi','Poi',"/*          * HACK: Detect compressed images. In reality there should be some way         * to determine this from the first 32 bytes, but I can't see any         * similarity between all the samples I have obtained, nor any         * similarity in the data block contents.          */"
'Poi','Poi','Poi','//  TODO: handle palette colors and alpha(?) value '
'Poi','Poi','Poi','//  TODO: check size   TODO: check size   TODO: check size '
'Poi','Poi','Poi',"//       assertRefPtgA1('V', getPtgs(cell), 6); // FIXME! "
'Poi','Poi','Poi',"//  Excel's # with value 0 will output empty where Java will output 0. This hack removes the # from the format. "
'Poi','Poi','Poi','//  Todo - check text too, once bug fixed '
'Poi','Poi','Poi','//  TODO: check if we can break here, i.e. if a page can have more than 1 break on the same id '
'Poi','Poi','Poi','/*      * Apply a custom filter     *     * <p>     * A custom AutoFilter specifies an operator and a value.     * There can be at most two customFilters specified, and in that case the parent element     * specifies whether the two conditions are joined by \'and\' or \'or\'. For any cells whose     * values do not meet the specified criteria, the corresponding rows shall be hidden from     * view when the filter is applied.     * </p>     *     * <p>     * Example:     * <blockquote><pre>     *  AutoFilter filter = sheet.setAutoFilter(CellRangeAddress.valueOf("A1:F200"));     *  filter.applyFilter(0, FilterOperator.GreaterThanOrEqual", "0.2");     *  filter.applyFilter(1, FilterOperator.LessThanOrEqual"", "0.5");     * </pre></blockquote>     * </p>     *     * @param columnIndex 0-based column index     * @param operator the operator to apply     * @param criteria top or bottom value used in the filter criteria.     *     * TODO YK: think how to combine AutoFilter with with DataValidationConstraint, they are really close relatives     * void applyFilter(int columnIndex, FilterOperator operator, String criteria);      */'
'Poi','Poi','Poi',"//  TODO - this data seems to require two extra bytes padding. not sure where original file is.   it's not bug 38607 attachment 17639 "
'Poi','Poi','Poi','//  FIXME: this function is a self-fulfilling prophecy: this test will always pass as long '
'Poi','Poi','Poi','// FIXME: XSSFCell and HSSFCell expose different interfaces. getErrorCellString would be helpful here '
'Poi','Poi','Poi','/*         * Exponent sign handling is complex.        *        * In DecimalFormat, you never put the sign in the format, and the sign only        * comes out of the format if it is negative.        *        * In Excel, you always say whether to always show the sign ("e+") or only        * show negative signs ("e-").        *        * Also in Excel, where you put the sign in the format is NOT where it comes        * out in the result.  In the format, the sign goes with the "e"; in the        * output it goes with the exponent value.  That is, if you say "#e-|#" you        * get "1e|-5", not "1e-|5". This makes sense I suppose, but it complicates        * things.        *        * Finally, everything else in this formatting code assumes that the base of        * the result is the original format, and that starting from that situation,        * the indexes of the original special characters can be used to place the new        * characters.  As just described, this is not true for the exponent\'s sign.        * <p>        * So here is how we handle it:        *        * (1) When parsing the format, remove the sign from after the \'e\' and put it        * before the first digit of the exponent (where it will be shown).        *        * (2) Determine the result\'s sign.        *        * (3) If it\'s missing, put the sign into the output to keep the result        * lined up with the output. (In the result, "after the \'e\'" and "before the        * first digit" are the same because the result has no extra chars to be in        * the way.)        *        * (4) In the output, remove the sign if it should not be shown ("e-" was used        * and the sign is negative) or set it to the correct value.         */'
'Poi','Poi','Poi','//  FIXME: forgot to reassign!  cols = sheet1.getCTWorksheet().getColsArray(0); '
'Poi','Poi','Poi','//  ExpPtg is used for array formulas and shared formulas.   it is currently unsupported, and may not even get implemented here '
'Poi','Poi','Poi','/*      * To avoid accident changes to the template, you should be able     *  to create a SXSSFWorkbook from a read-only XSSF one, then     *  change + save that (only). See bug #60010     * TODO Fix this to work!      */'
'Poi','Poi','Poi',"//  It's a special formula condition.   TODO: Check whether the condition cell contains a formula and return #VALUE! if it doesn't. "
'Poi','Poi','Poi','//  TODO - would be nice to remove this '
'Poi','Poi','Poi','//  This override is used only in order to test failing for HSSF. Please remove method after code is fixed on hssf,    so that original method from BaseTestSheetShiftColumns can be executed.  '
'Poi','Poi','Poi','//  int, not short ... :( '
'Poi','Poi','Poi','//  TODO - add getFormat() to interface PictureData and genericise wb.getAllPictures() '
'Poi','Poi','Poi',"//  TODO - remove 've == null' condition once AreaEval is fixed "
'Poi','Poi','Poi','//  TODO - remove this method '
'Poi','Poi','Poi','//  POI uses UnknownPtg when the encoded Ptg array seems to be corrupted.   This seems to occur in very rare cases (e.g. unused name formulas in bug 44774, attachment 21790)   In any case, formulas are re-parsed before execution, so UnknownPtg should not get here '
'Poi','Poi','Poi','//  Hack the FAT so that it goes 0->1->2->0 '
'Poi','Poi','Poi',"//  TODO - shouldn't BlankEval.INSTANCE be used always instead of null?   null seems to occur when the blank cell is part of an area ref (but not reliably) "
'Poi','Poi','Poi','//  TODO Is CommonCrawl 265 = 0x109 the one above or below? '
'Poi','Poi','Poi','// TODO, read byte to figure out the type of error '
'Poi','Poi','Poi','//  TODO: handle PaintStyle '
'Poi','Poi','Poi','//  this already failed! Hex2Dec did not correctly handle RefEval '
'Poi','Poi','Poi','// TODO column styles are not yet supported by XSSF '
'Poi','Poi','Poi',"//  TODO Add support for removing these kinds of nested runs,    which aren't on the CTP -> R array, but CTP -> XXX -> R array "
'Poi','Poi','Poi','//  Oh dear, something has gone wrong... '
'Poi','Poi','Poi','//  not implemented ... also not in the specs '
'Poi','Poi','Poi','//  fix header size, sometimes this is invalid '
'Poi','Poi','Poi','//  TODO How best to warn of a short read? '
'Poi','Poi','Poi','/*  * This class is a friendly wrapper on top of the more scary HSLFSlideShow. * * TODO: - figure out how to match notes to their correct sheet (will involve * understanding DocSlideList and DocNotesList) - handle Slide creation cleaner  */'
'Poi','Poi','Poi','//  TODO - no idea if this is right '
'Poi','Poi','Poi','//  TODO: convert the data to the cell format '
'Poi','Poi','Poi','//  TODO - when does this occur? '
'Poi','Poi','Poi','/*     * To ensure we can create a file >2gb in size, as well as to    *  extend existing files past the 2gb boundary.    *    * Note that to run this test, you will require 2.5+gb of free    *  space on your TMP/TEMP partition/disk    *    * Note that to run this test, you need to be able to mmap 2.5+gb    *  files, which may need bigger kernel.shmmax and vm.max_map_count    *  settings on Linux.    *    * TODO Fix this to work...     */'
'Poi','Poi','Poi','//  This bug is currently open. This test will fail with "expected error not thrown" when the bug has been fixed.   When this happens, change this from @Test(expected=...) to @Test '
'Poi','Poi','Poi','// FIXME: change to protected if/when SXSSFHyperlink class is created '
'Poi','Poi','Poi','/*  *\tTest to see if Range.replaceText() works even if the Range contains a *\tCharacterRun that uses Unicode characters. * * TODO - re-enable me when unicode paragraph stuff is fixed!  */'
'Poi','Poi','Poi','/*  * Represents autofiltering for the specified worksheet. * * <p> * Filtering data is a quick and easy way to find and work with a subset of data in a range of cells or table. * For example, you can filter to see only the values that you specify, filter to see the top or bottom values, * or filter to quickly see duplicate values. * </p> * * TODO YK: For now (Aug 2010) POI only supports setting a basic autofilter on a range of cells. * In future, when we support more auto-filter functions like custom criteria, sort, etc. we will add * corresponding methods to this interface.  */'
'Poi','Poi','Poi','//  FIXME: remove try, catch, and testPassesNow, skipTest when test passes '
'Poi','Poi','Poi','/*  FIXME copied from {@link org.apache.poi.ss.TestWorkbookFactory}  */'
'Poi','Poi','Poi','//  TODO - check contents '
'Poi','Poi','Poi',"/*  * This handles reading and writing a stream within a *  {@link POIFSFileSystem}. It can supply an iterator *  to read blocks, and way to write out to existing and *  new blocks. * Most users will want a higher level version of this,  *  which deals with properties to track which stream *  this is. * This only works on big block streams, it doesn't *  handle small block ones. * This uses the new NIO code *  * TODO Implement a streaming write method, and append  */"
'Poi','Poi','Poi','//  FIXME: Move these constants into an enum '
'Poi','Poi','Poi','// FIXME: should be false, no need to create rows where src is only to copy them to dest '
'Poi','Poi','Poi','//  TODO add support for TargetMode.EXTERNAL relations. '
'Poi','Poi','Poi',"//  TODO - DOLLAR() function impl is NQR   result should be StringEval, with leading '$' and thousands separators "
'Poi','Poi','Poi','/* \t * Sets the URL of the link\t * TODO: Figure out if we should always set both\t  */'
'Poi','Poi','Poi','//  FIXME: this class implements a lot of path joining and splitting logic that   is already implemented in java.nio.file.Path.   This class should heavily leverage Java library code to reduce the number of lines of code that POI has to maintain and test '
'Poi','Poi','Poi','//  The directory lacks a name! '
'Poi','Poi','Poi',"// don't really need this. spec is confusing regarding this  sprm "
'Poi','Poi','Poi','//  TODO - Current examples(3) from junits only have zero length username.  '
'Poi','Poi','Poi','//  TODO: handle relative coordinates '
'Poi','Poi','Poi','//  TODO .xls version available too, add HSSF support then check  '
'Poi','Poi','Poi','//  TODO calculation of tint might be incorrect '
'Poi','Poi','Poi','//  Dummy implementation - not used! '
'Poi','Poi','Poi','//  not sure why this is only 2 bytes, but it is... go figure '
'Poi','Poi','Poi','//  TODO Implement the rest of this, see bug #57184 '
'Poi','Poi','Poi','//  TODO - what about NameX ? '
'Poi','Poi','Poi','// TODO: implement this '
'Poi','Poi','Poi','//  TODO - make writing possible '
'Poi','Poi','Poi','//  FIXME: Array Formula set with Sheet.setArrayFormula() instead of cell.setFormula() '
'Poi','Poi','Poi','//  TODO: check for XXE '
'Poi','Poi','Poi','//  TODO Add support for Even/Odd headings and footers '
'Poi','Poi','Poi','//  FIXME: _sheetName may be null, depending on the entry point.   Perhaps it would be better to declare _sheetName is never null, using an empty string to represent a 2D reference. '
'Poi','Poi','Poi','//  TODO - no Random - tests should be completely deterministic '
'Poi','Poi','Poi','//  FIXME: may want to defer to the TempFile with a persistent file creation strategy to the test output dir '
'Poi','Poi','Poi',"//  TODO Figure out if we're in 1900 or 1904   EXCEL functions round up nearly a half second (probably to prevent floating point "
'Poi','Poi','Poi','/*         // FIXME: Array Formula set with Sheet.setArrayFormula() instead of cell.setFormula()        assertEquals("[Array Formula] N10 cell type", CellType.FORMULA, cell.getCellType());        assertEquals("[Array Formula] N10 cell formula", "{SUM(H10:J10*{1,2,3})}", cell.getCellFormula());        cell = CellUtil.getCell(destRow2, col);        // FIXME: Array Formula set with Sheet.setArrayFormula() instead of cell.setFormula()        assertEquals("[Array Formula] N11 cell type", CellType.FORMULA, cell.getCellType());        assertEquals("[Array Formula] N11 cell formula", "{SUM(H11:J11*{1,2,3})}", cell.getCellFormula());      */'
'Poi','Poi','Poi','//  TODO repeat above code for missing charts: Bubble, Doughnut, OfPie and Stock '
'Poi','Poi','Poi','//  TODO Decode this properly '
'Poi','Poi','Poi','//  0x8??? ones are outlook specific, and not standard MAPI   TODO See http://msdn.microsoft.com/en-us/library/ee157150%28v=exchg.80%29   for some   info on how we might decode them properly in the future '
'Poi','Poi','Poi','//  Formula based strings   TODO Find some then test '
'Poi','Poi','Poi','/*  * Implementation of the DMin function: * Finds the minimum value of a column in an area with given conditions. *  * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */'
'Poi','Poi','Poi','//  workaround for too wide pens ... just arbitrary reduce high values ... '
'Poi','Poi','Poi','//  TOOD: implement Non-Cmap-Lookup correctly '
'Poi','Poi','Poi','//  Comes from Iterators etc.   TODO Decide if we can handle these better whilst    still sticking to the iterator contract '
'Poi','Poi','Poi','//  TODO: very non-optimal '
'Poi','Poi','Poi','//  TODO: add trailing \\u0000?  '
'Poi','Poi','Poi','//  FIXME: What happens if level is in between two levels (an even number)? '
'Poi','Poi','Poi','/*      * Get the raw value flags. TODO Also provide getters for the flag meanings      */'
'Poi','Poi','Poi','//  FIXME: test failing case '
'Poi','Poi','Poi',"/*     * Note - this test runs several times, to ensure that things    *  don't get broken as we write out and read back in again    * TODO - Make this work with 3+ runs     */"
'Poi','Poi','Poi','//  TODO - support charts properly in usermodel '
'Poi','Poi','Poi',"//  Workaround for XMLBEANS-512 - ensure that when we parse    the file, we start with a fresh XML Parser each time,    and avoid the risk of getting a SaxHandler that's in error "
'Poi','Poi','Poi','//  TODO: ok to ignore? '
'Poi','Poi','Poi','//  TODO ... read from graphics context??? '
'Poi','Poi','Poi','//  TODO Re-check sheet contents   TODO Re-check formula evaluation '
'Poi','Poi','Poi','//  TODO Fix the exception this incorrectly triggers  assertEquals(" $   - ",  cfUS.apply(Double.valueOf(0)).text);   TODO Fix these to not have an incorrect bonus 0 on the end   assertEquals(" "+pound+"   -  ", cfUK.apply(Double.valueOf(0)).text);  assertEquals(" -    "+euro+"  ", cfFR.apply(Double.valueOf(0)).text); '
'Poi','Poi','Poi','/*  * TODO Bring more of the logic over from XWPFParagraph  */'
'Poi','Poi','Poi','//  TODO: assertEquals("Minimum row number is 0.", e.getMessage()); '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): si.setThumbnail(P_THUMBNAIL); '
'Poi','Poi','Poi','/*      * Builds a Picture object for a Picture stored as     *  Escher.     * TODO We need to pass in the PICF data too somehow!      */'
'Poi','Poi','Poi','//  Index the Parent Group chunks for easy lookup   TODO Is this the right way? '
'Poi','Poi','Poi',"//  TODO Support IconSet + Other CFs with 2 rules          assertEquals(2, cf.getNumberOfRules());          cr = cf.getRule(0);          assertIconSetPercentages(cr, IconSet.GYR_3_TRAFFIC_LIGHTS_BOX, 0d, 33d, 67d);          cr = cf.getRule(1);          assertEquals(ConditionType.FORMULA, cr.getConditionType());          assertEquals(ComparisonOperator.NO_COMPARISON, cr.getComparisonOperation());          // TODO Why aren't these two the same between formats? "
'Poi','Poi','Poi','//  TODO Look up more of these in the latest [MS-XLS] doc and move to getBiffName '
'Poi','Poi','Poi','//  TODO: better exception class '
'Poi','Poi','Poi','//  TODO: check why we always clear this ... '
'Poi','Poi','Poi','//  TODO - enable XSSF test '
'Poi','Poi','Poi','//  TODO: to be validated ...   like anisotropic, but use x-axis as reference '
'Poi','Poi','Poi','//  Tricky, not stored directly in poifs   TODO '
'Poi','Poi','Poi','// TODO add other shape types which can not contain text '
'Poi','Poi','Poi','/*  find a better solution  */'
'Poi','Poi','Poi','//  TODO Decode the value into an offset   TODO Look up the chunk based on that '
'Poi','Poi','Poi','/*      * Test of getPath method, of class DConRefRecord.     * @todo different types of paths.      */'
'Poi','Poi','Poi','//             // TODO - trivial differences in ContinueRecord break locations              // Sample data should be checked against what most recent Excel version produces.              // maybe tweaks are required in ContinuableRecordOutput              assertArrayEquals(origData, ser_output);          } '
'Poi','Poi','Poi','/*  @todo handle cell shading */'
'Poi','Poi','Poi','//  TODO: good to ignore? '
'Poi','Poi','Poi','//  TODO: is "velvetSweatshop" the default password? '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): assertEquals(P_, dsi.getHeadingPair()); '
'Poi','Poi','Poi',"/*                  * too bad, this start field mark doesn't have corresponding end                 * field mark or separator field mark in fields table                  */"
'Poi','Poi','Poi','//  TODO Load element with XMLBeans or dynamic table   TODO Check every element/namespace for compliance '
'Poi','Poi','Poi','//  something went wrong. just print the whole stack trace '
'Poi','Poi','Poi','//  To do: Excel places restrictions on the available operations within a list formula.   Some things like union and intersection are not allowed. '
'Poi','Poi','Poi','//  TODO: actually evaluate the formula / NPE checks '
'Poi','Poi','Poi','// Given that we basically iterate through the rows in order,  For a performance improvement, it would be better to return an instance of  an iterator and use that instance throughout, rather than recreating one and  having to move it to the right position. '
'Poi','Poi','Poi','//  TODO - do we need "Workbook.records.remove(...);" similar to that in Workbook.removeName(int namenum) {}? '
'Poi','Poi','Poi','//  Tricky:   fourth arg supplied but evaluates to blank   this does not get the default value '
'Poi','Poi','Poi','//  bad because zero is not a valid row number   this should get parsed as "B1" '
'Poi','Poi','Poi','//  TODO - Handle CRC checking on the output side '
'Poi','Poi','Poi','//  WARNING - this is wrong!   The file name should be showing, but bug #45970 is fixed '
'Poi','Poi','Poi','//  not available here, unless it exists and is unimplemented in cfRuleRecord '
'Poi','Poi','Poi','//  TODO: support inline table style '
'Poi','Poi','Poi',"//  TODO Shouldn't it become [2] like the others? "
'Poi','Poi','Poi','//  TODO Detect if it is multi-valued, since if it is   then even fixed-length strings store their multiple   values in another chunk (much as variable length ones) '
'Poi','Poi','Poi','//  TODO avoid StringIndexOutOfBounds '
'Poi','Poi','Poi',"//  TODO Some files, such as TestVisioWithCodepage.vsd, are currently   triggering this for values that don't look like codepages   See Bug #52258 for details "
'Poi','Poi','Poi','//  TODO - are these ~Field used / necessary '
'Poi','Poi','Poi','/*      * TODO - parse conditional format formulas properly i.e. produce tRefN and tAreaN instead of tRef and tArea     * this call will produce the wrong results if the formula contains any cell references     * One approach might be to apply the inverse of SharedFormulaRecord.convertSharedFormulas(Stack, int, int)     * Note - two extra parameters (rowIx &amp; colIx) will be required. They probably come from one of the Region objects.     *     * @param formula  The formula to parse, excluding the leading equals sign.     * @param sheet  The sheet that the formula is on.     * @return <code>null</code> if <tt>formula</tt> was null.      */'
'Poi','Poi','Poi','//  can this clumsy generic syntax be improved? '
'Poi','Poi','Poi','//  TODO: check if issuerName is different on getTBSCertificate   issuerName = PrincipalUtil.getIssuerX509Principal(certificate).getName().replace(",", ", "); '
'Poi','Poi','Poi','/*      * @param fcStart The start of the text for this property, in characters.     * @param fcEnd   The end of the text for this property, in characters.     * @param buf     FIXME: Old documentation is: "grpprl The property description in compressed form."      */'
'Poi','Poi','Poi','//  TODO: calculate integrity hmac while reading the stream   for a post-validation of the data '
'Poi','Poi','Poi','//  workaround for not having the vmlDrawing filled '
'Poi','Poi','Poi','//  not implemented ... only for OLE objects in the specs '
'Poi','Poi','Poi','//  see 2.3.4.9 Password Verification (Standard Encryption)   ... The number of bytes used by the encrypted Verifier hash MUST be 32 ...   TODO: check and trim/pad the hashes to 32 '
'Poi','Poi','Poi',"//  TODO Shouldn't we use XWPFNumbering or similar here?   TODO Make it easier to change "
'Poi','Poi','Poi','/*      * Chooses a new boolean value for the cell when its type is changing.<p>     *     * Usually the caller is calling setCellType() with the intention of calling     * setCellValue(boolean) straight afterwards.  This method only exists to give     * the cell a somewhat reasonable value until the setCellValue() call (if at all).     * TODO - perhaps a method like setCellTypeAndValue(CellType, Object) should be introduced to avoid this      */'
'Poi','Poi','Poi','//  TODO: update this test for meaningful functional behavior '
'Poi','Poi','Poi','/*  @todo handle word defined table styles */'
'Poi','Poi','Poi','/*      * Determines if there is a page break at the indicated row     * @param row FIXME: Document this!     * @return FIXME: Document this!      */'
'Poi','Poi','Poi',"//  TODO Identify if we're doing 1900 or 1904 date windowing "
'Poi','Poi','Poi','//  TODO - not a real Ptg   0x01   0x02   0x03   0x04   0x05   0x06   0x07   0x08   0x09   0x0a   0x0b   0x0c   0x0d   0x0e   0x0f   0x10   0x11   0x12   0x13   0x14   0x15   0x16 '
'Poi','Poi','Poi','// HACK: do a "cheat" clone, see Record.java for more information '
'Poi','Poi','Poi','/*              * it is not very good, but what can do without breaking current             * API? --sergey              */'
'Poi','Poi','Poi',"//  as the integrity hmac needs to contain the StreamSize,   it's not possible to calculate it on-the-fly while buffering   TODO: add stream size parameter to getDataStream() "
'Poi','Poi','Poi',"//  TODO - c2 unused but changing next line ('c'->'c2') causes test to fail "
'Poi','Poi','Poi','//  TODO: what is the reaction for readOnly=false and styles.isEmpty()? '
'Poi','Poi','Poi','/* \t * Formats the given numeric of date cells contents as a String, in as\t * close as we can to the way that Excel would do so. Uses the various\t * format records to manage this.\t *\t * TODO - move this to a central class in such a way that hssf.usermodel can\t * make use of it too\t * \t * @param cell the cell\t * \t * @return the given numeric of date cells contents as a String\t  */'
'Poi','Poi','Poi','//  XOR-Obfuscation   TODO: XOR-Obfuscation is currently flawed - although the de-/obfuscation initially works,   it suddenly differs from the result of encrypted files via Office ...   and only very small files can be opened without file validation errors '
'Poi','Poi','Poi','//  Workaround   sheet.addIgnoredErrors(new CellReference(cell.getRowIndex(), cell.getColumnIndex(), false, false),          IgnoredErrorType.NUMBER_STORED_AS_TEXT); '
'Poi','Poi','Poi','/*      * Normalize a URI/part name     * TODO: find a better way ...      */'
'Poi','Poi','Poi',"//  TODO: The colors don't match 100% the results of Powerpoint, maybe because we still   operate in sRGB and not scRGB ... work in progress ... "
'Poi','Poi','Poi','//  Work out what to add the picture to, then add both the    picture and the relationship for it   TODO Should we have an interface for this sort of thing? '
'Poi','Poi','Poi','//  XXX: shall we support fill? '
'Poi','Poi','Poi','//  TODO: case-sensitive? '
'Poi','Poi','Poi','//  TODO: find out how we can find the mastersheet base on the slide layout type, i.e.   getSlideRecord().getSlideAtom().getSSlideLayoutAtom().getGeometryType() '
'Poi','Poi','Poi','//  TODO: close() re-writes the sample-file?! Resort to revert() for now to close file handle... '
'Poi','Poi','Poi','//  TODO Fix this to convert line to equivalent value, or deprecate this in '
'Poi','Poi','Poi','//  TODO: implement support for denormalized XMLs (see   OpenOffice part 4: chapter 3.5.1.7) '
'Poi','Poi','Poi','/*      * Check if cell range A contains cell range B (B <= A)     *      * TODO: move this into {@link CellRangeAddressBase}     *      * @param crA cell range A     * @param crB cell range B     * @return true if cell range A contains cell range B      */'
'Poi','Poi','Poi','//  Check for bits that only apply when attached to a core document   TODO Make this nicer by tracking the XWPFFootnotes directly '
'Poi','Poi','Poi','/*      * TODO - would not be required if calling code used RecordStream or similar      */'
'Poi','Poi','Poi','//  TODO: handle srcUnit '
'Poi','Poi','Poi','//  TODO: What is this? '
'Poi','Poi','Poi','//  TODO - simplify logic using a generalised record ordering '
'Poi','Poi','Poi','//  FIXME: (performance optimization) this should be moved outside the for-loop so that comments only needs to be iterated over once. '
'Poi','Poi','Poi','//  FIXME: serves same purpose as org.apache.poi.xssf.usermodel.XSSFEvaluationSheet$CellKey '
'Poi','Poi','Poi',"//  FIXME: can these be merged with {@link CellType}?   are the numbers specific to the HSSF formula record format or just a poor-man's enum? "
'Poi','Poi','Poi','/*      * FIXME:     * bug 58779: Closing an XMLSlideShow that was created with {@link SlideShowFactory#create(File)} modifies the file     *     * @param filename the sample filename or full path of the slideshow to check before and after closing     * @param ss the slideshow to close or revert      */'
'Poi','Poi','Poi','//  XXX: temporary workaround for old Word95 document '
'Poi','Poi','Poi','//  TODO - check the contents '
'Poi','Poi','Poi','//  tricky: indexing outside of A10:A12 '
'Poi','Poi','Poi','//  This is not a very useful test as written. It is not worth the execution time for a unit test '
'Poi','Poi','Poi','//  TODO: implement! '
'Poi','Poi','Poi',"//  TODO This should be 2, but we don't support CFEX formattings yet, see #58149 "
'Poi','Poi','Poi','//  TODO: Check for NaN '
'Poi','Poi','Poi','//  TODO: fix me '
'Poi','Poi','Poi','//  TODO: support rich text fragments '
'Poi','Poi','Poi','//  TODO: dead fields? '
'Poi','Poi','Poi','//  TODO: some documents fail currently...  XSSFFormulaEvaluator evaluator = new XSSFFormulaEvaluator(wb);  evaluator.evaluateAll(); '
'Poi','Poi','Poi','//  TODO Are these right? '
'Poi','Poi','Poi','//  TODO: any properties??? '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): assertEquals(P_, dsi.getDocparts()); '
'Poi','Poi','Poi','// this is a complete hack.  The challenge is that there  can be many 0 length or junk streams that are uncompressed  look in the first 20 characters for "Attribute" '
'Poi','Poi','Poi','// TODO: it is possible to have an SDT that contains a cell in within a row  need to modify this code so that it pulls out SDT wrappers around cells, too. '
'Poi','Poi','Poi','//  TODO: implement setting bullet color to null '
'Poi','Poi','Poi','// TODO: Convert this to generate an AreaReference '
'Poi','Poi','Poi','//  TODO: fails XMLExportTest, is this ok? '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): dsi.setHeadingPair(P_HEADING_PAIR); '
'Poi','Poi','Poi','/*      * tests that the create record function returns a properly      * constructed record in the case of a continued record.     * TODO - need a real world example to put in a unit test      */'
'Poi','Poi','Poi',"//  casting here is wrong, but there's no other way of getting the value,   as it doesn't seem to be exposed by complex types (even though this   is a mixed type) "
'Poi','Poi','Poi','//  TODO - prune this method out of the hierarchy '
'Poi','Poi','Poi','//  wrong size '
'Poi','Poi','Poi','//  TODO: check why original bitmaps scale/behave differently to vector based images '
'Poi','Poi','Poi','//  TODO Could we do the read-only case with MapMode.PRIVATE instead?   See https://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.MapMode.html#PRIVATE   Or should we have 3 modes instead of the current boolean -     read-write, read-only, read-to-write-elsewhere?  '
'Poi','Poi','Poi','//  TODO: find out character style for empty, but bulleted/numbered lines '
'Poi','Poi','Poi','/*      * Retrieves the region at the row/column indicated     * @param main FIXME: Document this!     * @return The Break or null if no break exists at the row/col specified.      */'
'Poi','Poi','Poi','//  this is not implemented yet '
'Poi','Poi','Poi','//  TODO - refactor cell reference parsing logic to one place.   Current known incarnations:     FormulaParser.GetName()     CellReference.parseSheetName() (here)     AreaReference.separateAreaRefs()     SheetNameFormatter.format() (inverse) '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): assertEquals(P_THUMBNAIL, si.getThumbnail()); '
'Poi','Poi','Poi','//  TODO: fix line width calculation '
'Poi','Poi','Poi','//  NOTE: This is currently based on current behavior of POI, somehow   what POI returns in the calls to collapsed/hidden is not fully matching    the examples in the spec or I did not fully understand how POI stores the data internally... '
'Poi','Poi','Poi','//  I do not really like it!! '
'Poi','Poi','Poi','//  TODO - replace no-arg constructor with this logic '
'Poi','Poi','Poi','/*      * Determines if there is a page break at the indicated column     * @param column FIXME: Document this!     * @return FIXME: Document this!      */'
'Poi','Poi','Poi',"//  hack because I can't figure out how to get XMLBeans to parse a sub-element in a standalone manner "
'Poi','Poi','Poi','/*                      * TODO: make sense of the remaining bytes                     * According to the spec they consist of:                     * 1. 16-byte  GUID: This field MUST equal                     *    {0xF4815879, 0x1D3B, 0x487F, 0xAF, 0x2C, 0x82, 0x5D, 0xC4, 0x85, 0x27, 0x63}                     * 2. Serial version, this field MUST equal 0 if present.                     * 3. URI Flags                      */'
'Poi','Poi','Poi','//  TODO: implement second operation based on playback device context '
'Poi','Poi','Poi','/* \t * TODO - use simple JDK methods on {@link File} instead:<br>\t * {@link File#getParentFile()} instead of {@link FileHelper#getDirectory(File)\t * {@link File#getName()} instead of {@link FileHelper#getFilename(File)\t  */'
'Poi','Poi','Poi','//  TODO implement or throw exception if not supported '
'Poi','Poi','Poi','//  TODO - RowRecord column boundaries need to be updated for cell comments too '
'Poi','Poi','Poi','// The token_1_columns and token_2_rows do not follow the documentation.  The number of physical rows and columns is actually +1 of these values.  Which is not explicitly documented. '
'Poi','Poi','Poi','//  TODO - do we need "this.records.remove(...);" similar to that in this.removeName(int namenum) {}? '
'Poi','Poi','Poi','//  FIXME: this may be faster if it looped over array formulas directly rather than looping over each cell in   the region and searching if that cell belongs to an array formula '
'Poi','Poi','Poi','//  TODO: is immutable ??? '
'Poi','Poi','Poi','// passing HSSFRichTextString is incorrect '
'Poi','Poi','Poi','//  workaround for IBM JDK assigning the classname to the lowercase instance provided by Definer!?!   I could not find out why that happens, the wrong assignment seems to be done somewhere deep inside Ant itself   or even in IBM JDK as Oracle JDK does not have this problem. '
'Poi','Poi','Poi','//  Check the CF colours   TODO '
'Poi','Poi','Poi',"//  FIXME: should be protected   FindBugs, category MALICIOUS_CODE, FI_PUBLIC_SHOULD_BE_PROTECTED   A class's finalize() method should have protected access, not public "
'Poi','Poi','Poi','//                     // TODO - would like to keep the chart aggregate packed, but one unit test needs attention                      records.add(chartAgg); '
'Poi','Poi','Poi','/*      * A protected sheet with comments, when written out by     * POI, ends up upsetting excel.     * TODO Identify the cause and add extra asserts for     * the bit excel cares about      */'
'Poi','Poi','Poi',"/*      * TODO - while this is internally consistent, I'm not     *  completely clear in all cases what it's supposed to     *  be doing... Someone who understands the goals a little     *  better should really review this!      */"
'Poi','Poi','Poi','/*  * A variable length {@link PropertyValue} that is backed by a {@link Chunk} * TODO Provide a way to link these up with the chunks  */'
'Poi','Poi','Poi',"/*         //TODO: figure out why this isn't working        data[0] = (byte)0xF9;        data[1] = (byte)0xD8;        assertCharEquals('\\u88CF', data);      */"
'Poi','Poi','Poi','//  TODO: implement TextCFException10 structure '
'Poi','Poi','Poi','//  TODO - update OOO document to include this value '
'Poi','Poi','Poi','/*              * YK: reading the ClipboardData packet (VT_CF) is not quite             * correct. The size of the data is determined by the first four             * bytes of the packet while the current implementation calculates             * it in the Section constructor. Test files in Bugzilla 42726 and             * 45583 clearly show that this approach does not always work. The             * workaround below attempts to gracefully handle such cases instead             * of throwing exceptions.             *             * August 20, 2009              */'
'Poi','Poi','Poi','//  TODO - this code probably never executes '
'Poi','Poi','Poi','/*      *      * @return the blur radius of the shadow     * TODO: figure out how to make sense of this property when rendering shadows       */'
'Poi','Poi','Poi',"//  TODO - problems with OBJ sub-records stream   MS spec says first sub-record is always CommonObjectDataSubRecord,   and last is always EndSubRecord. OOO spec does not mention ObjRecord(0x005D).   Existing POI test data seems to violate that rule. Some test data   seems to contain garbage, and a crash is only averted by stopping at   what looks like the 'EndSubRecord' "
'Poi','Poi','Poi','//  @deprecated 3.15 beta 2. getVerticalAlignment will only work on VerticalAlignment enums instead of codes in the future. '
'Poi','Poi','Poi','/* \t * TODO - these are all formulas which currently (Apr-2008) break on ooxml \t  */'
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): static final byte[] P_THUMBNAIL = new byte[123]; '
'Poi','Poi','Poi',"//  TODO - if we are confident that this sanity check is not required, we can remove 'value' from plain value cache entry "
'Poi','Poi','Poi','// TODO: simplify this to get ibody elements in order '
'Poi','Poi','Poi','//  TODO: replace it, by applyTransform???? '
'Poi','Poi','Poi','//  This one defines it   TODO Save it somewhere '
'Poi','Poi','Poi','/*  * This enumeration value indicates the type of vertical alignment for a cell, i.e., * whether it is aligned top, bottom, vertically centered, justified or distributed. *  * <!-- FIXME: Identical to {@link org.apache.poi.ss.usermodel.VerticalAlignment}. Should merge these to * {@link org.apache.poi.common.usermodel}.VerticalAlignment in the future. -->  */'
'Poi','Poi','Poi','//  TODO - bug elsewhere in POI - something wrong with encoding of NOT() function '
'Poi','Poi','Poi','//  FIXME: remove type casting when copyCellFrom(Cell, CellCopyPolicy) is added to Cell interface '
'Poi','Poi','Poi','/*  This is case-sensitive. Is that correct?  */'
'Poi','Poi','Poi','//  can you believe it? excel returns nper as a fraction!?? '
'Poi','Poi','Poi','//  Some files from Crystal Reports lack the is16BitUnicode byte    the remaining fields, which is naughty '
'Poi','Poi','Poi','//  TODO this needs to be migrated out into section code '
'Poi','Poi','Poi','//  TODO should we have this stuff in the FormulaEvaluator? '
'Poi','Poi','Poi','// Had to add this and TIME_ZONE_PAT to handle tz with colons.  When we move to Java 7, we should be able to add another  date format to DATE_FORMATS that uses XXX and get rid of this  and TIME_ZONE_PAT   TODO Fix this after the Java 7 upgrade '
'Poi','Poi','Poi','/*      * Make sure the DN is encoded using the same order as present     * within the certificate. This is an Office2010 work-around.     * Should be reverted back.     *     * XXX: not correct according to RFC 4514.     *     * @return when true, the issuer DN is used instead of the issuer X500 principal      */'
'Poi','Poi','Poi','//  TODO: check if approximation via rotating only the bounds (instead of the shape) is sufficient '
'Poi','Poi','Poi','//  This includes text booleans "TRUE" and "FALSE".  They are not valid. '
'Poi','Poi','Poi','/*  * This class performs a D* calculation. It takes an {@link IDStarAlgorithm} object and * uses it for calculating the result value. Iterating a database and checking the * entries against the set of conditions is done here. * * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */'
'Poi','Poi','Poi','//  TODO Fix up for Word 6/95 '
'Poi','Poi','Poi','// TODO: What is this? '
'Poi','Poi','Poi','/*      * Convert a string to {@link java.net.URI}     *     * If  part name is not a valid URI, it is resolved as follows:     * <p>     * 1. Percent-encode each open bracket ([) and close bracket (]).</li>     * 2. Percent-encode each percent (%) character that is not followed by a hexadecimal notation of an octet value.</li>     * 3. Un-percent-encode each percent-encoded unreserved character.     * 4. Un-percent-encode each forward slash (/) and back slash (\\).     * 5. Convert all back slashes to forward slashes.     * 6. If present in a segment containing non-dot (?.?) characters, remove trailing dot (?.?) characters from each segment.     * 7. Replace each occurrence of multiple consecutive forward slashes (/) with a single forward slash.     * 8. If a single trailing forward slash (/) is present, remove that trailing forward slash.     * 9. Remove complete segments that consist of three or more dots.     * 10. Resolve the relative reference against the base URI of the part holding the Unicode string, as it is defined     * in ?5.2 of RFC 3986. The path component of the resulting absolute URI is the part name.     *</p>     *     * @param   value   the string to be parsed into a URI     * @return  the resolved part name that should be OK to construct a URI     *     * TODO YK: for now this method does only (5). Finish the rest.      */'
'Poi','Poi','Poi','/*      * Determines if there is a page break at the indicated column     *     * @param column FIXME: Document this!     * @return FIXME: Document this!      */'
'Poi','Poi','Poi','// TODO: move test file to framework and fix this '
'Poi','Poi','Poi',"/* \t * The example file attached to bugzilla 45046 is a clear example of Name records being present\t * without an External Book (SupBook) record.  Excel has no trouble reading this file.<br>\t * TODO get OOO documentation updated to reflect this (that EXTERNALBOOK is optional).\t *\t * It's not clear what exact steps need to be taken in Excel to create such a workbook\t  */"
'Poi','Poi','Poi','//  TODO Fix this, we are randomly adding a 0 at the end that shouldn\'t be there  assertEquals(" $    -   ", dfUS.formatRawCellContents( 0.0, -1, "_-$* #,##0.00_-;-$* #,##0.00_-;_-$* \\"-\\"??_-;_-@_-")); '
'Poi','Poi','Poi','//  TODO Add methods to allow adding a HyperlinkRun or a FieldRun '
'Poi','Poi','Poi','//  then iterate through the scratchpad renderers     this could be nicely implemented via a j.u.ServiceLoader, but OSGi makes things complicated ...   https://blog.osgi.org/2013/02/javautilserviceloader-in-osgi.html '
'Poi','Poi','Poi','//  TODO Discover if these older documents can ever hold Unicode Strings?    (We think not, because they seem to lack a Piece table)      What we have here is a wretched hack.  We need to figure out    how to get the correct charset for the doc. '
'Poi','Poi','Poi','/* \t * Number rendering examples as observed from Excel.\t * TODO - some are currently disabled because POI does not pass these cases yet\t  */'
'Poi','Poi','Poi','//  copy attributes, as they might be removed by merging with the new column   TODO: check if this fix is really necessary or if the sweeping algorithm   in addCleanColIntoCols needs to be adapted ... '
'Poi','Poi','Poi','// TODO: figure out why these two aren\'t passing  assertContains(txt, "\\u2019\\u0078 block2");//make sure smart quote is extracted correctly '
'Poi','Poi','Poi','//  disabled test from superclass   TODO - support shifting of page breaks '
'Poi','Poi','Poi','//  TODO: check for recursive loops, when color getter also reference   a different color type '
'Poi','Poi','Poi','/*  * Types of ignored workbook and worksheet error. *  * TODO Implement these for HSSF too, using FeatFormulaErr2, *  see bugzilla bug #46136 for details  */'
'Poi','Poi','Poi','//  TOOD: get a real example file ... to actual test the FBSE entry   not sure where the foDelay block is '
'Poi','Poi','Poi','//  TOOD:   - set width according unit type   - provide logic for different start and end cap   - provide standard caps like diamondd   - support custom caps '
'Poi','Poi','Poi','/*  * Format a value according to the standard Excel behavior.  This "standard" is * not explicitly documented by Microsoft, so the behavior is determined by * experimentation; see the tests. * <p> * An Excel format has up to four parts, separated by semicolons.  Each part * specifies what to do with particular kinds of values, depending on the number * of parts given: * <dl> * <dt>One part (example: <tt>[Green]#.##</tt>)</dt> * <dd>If the value is a number, display according to this one part (example: green text, * with up to two decimal points). If the value is text, display it as is.</dd> *  * <dt>Two parts (example: <tt>[Green]#.##;[Red]#.##</tt>)</dt> * <dd>If the value is a positive number or zero, display according to the first part (example: green * text, with up to two decimal points); if it is a negative number, display * according to the second part (example: red text, with up to two decimal * points). If the value is text, display it as is.</dd> *  * <dt>Three parts (example: <tt>[Green]#.##;[Black]#.##;[Red]#.##</tt>)</dt> * <dd>If the value is a positive * number, display according to the first part (example: green text, with up to * two decimal points); if it is zero, display according to the second part * (example: black text, with up to two decimal points); if it is a negative * number, display according to the third part (example: red text, with up to * two decimal points). If the value is text, display it as is.</dd> *  * <dt>Four parts (example: <tt>[Green]#.##;[Black]#.##;[Red]#.##;[@]</tt>)</dt> * <dd>If the value is a positive number, display according to the first part (example: green text, * with up to two decimal points); if it is zero, display according to the * second part (example: black text, with up to two decimal points); if it is a * negative number, display according to the third part (example: red text, with * up to two decimal points). If the value is text, display according to the * fourth part (example: text in the cell\'s usual color, with the text value * surround by brackets).</dd> * </dl> * <p> * A given format part may specify a given Locale, by including something *  like <tt>[$$-409]</tt> or <tt>[$&pound;-809]</tt> or <tt>[$-40C]</tt>. These *  are (currently) largely ignored. You can use {@link DateFormatConverter} *  to look these up into Java Locales if desired. * <p> * In addition to these, there is a general format that is used when no format * is specified. *  * TODO Merge this with {@link DataFormatter} so we only have one set of *  code for formatting numbers. * TODO Re-use parts of this logic with {@link ConditionalFormatting} / *  {@link ConditionalFormattingRule} for reporting stylings which do/don\'t apply * TODO Support the full set of modifiers, including alternate calendars and *  native character numbers, as documented at https://help.libreoffice.org/Common/Number_Format_Codes  */'
'Poi','Poi','Poi',"/*      * TODO - (May-2008) fix subclasses of AreaPtg 'AreaN~' which are used in shared formulas.     * see similar comment in ReferencePtg      */"
'Poi','Poi','Poi','//  TODO: write text? '
'Poi','Poi','Poi',"//  TODO Identify what excel doesn't like, and check for that "
'Poi','Poi','Poi','/*  * Helper class to handle the Visio compatible *  streaming LZW compression. * Need our own class to handle keeping track of the *  code buffer, pending bytes to write out etc. *   * TODO Fix this, as it starts to go wrong on *  large streams   */'
'Poi','Poi','Poi',"//  Excel supports 2+ part conditional data formats, eg positive/negative/zero,    or (>1000),(>0),(0),(negative). As Java doesn't handle these kinds    of different formats for different ranges, just +ve/-ve, we need to     handle these ourselves in a special way.   For now, if we detect 2+ parts, we call out to CellFormat to handle it   TODO Going forward, we should really merge the logic between the two classes "
'Poi','Poi','Poi','/*      * TODO: Additionally, the lbPlyPos (position_of_BOF) field of the BoundSheet8 record MUST NOT be encrypted.     *     * @return <code>true</code> if record type specified by <tt>sid</tt> is never encrypted      */'
'Poi','Poi','Poi','//  TODO Refactor this to fetch dir then do the rest '
'Poi','Poi','Poi','//  TODO - use a stronger typed exception for this condition   expected during successful test '
'Poi','Poi','Poi','//  TODO: check for SVG copying '
'Poi','Poi','Poi','// this is pure hackery for specifying the font  this happens to work on this test file, but you need to '
'Poi','Poi','Poi','//  why?  Why ask why?  But don\'t drink bud dry as its a really   crappy beer, try the czech "Budvar" beer (which is the real   budweiser though its ironically good...its sold in the USs   as czechvar  --- odd that they had the name first but can\'t   use it)... '
'Poi','Poi','Poi','//  FIXME: replace with org.apache.commons.collections.map.CaseInsensitiveMap '
'Poi','Poi','Poi','//  TODO Fix this, we are randomly adding a 0 at the end that shouldn\'t be there  assertEquals("     -   ", dfUS.formatRawCellContents(0.0, -1, "_-* #,##0.00_-;-* #,##0.00_-;_-* \\"-\\"??_-;_-@_-")); '
'Poi','Poi','Poi','//  TODO: check if paragraph/chars can be handled the same ... '
'Poi','Poi','Poi','//  TODO sometimes last byte is non-zero '
'Poi','Poi','Poi','//  TODO Should the colours be slightly different between formats? Would CFEX support help for HSSF? '
'Poi','Poi','Poi','//  TODO - adjust data validations '
'Poi','Poi','Poi','//  TODO: check if this is Java 9 compatible ... '
'Poi','Poi','Poi',"//  TODO Return a more specialised form of this, see bug #56752   Should include the cached values, for in case that book isn't available "
'Poi','Poi','Poi','//  Get more text   TODO '
'Poi','Poi','Poi',"/* \t\t * ex47747-sharedFormula.xls is a heavily cut-down version of the spreadsheet from\t\t * the attachment (id=24176) in Bugzilla 47747.  This was done to make the sample\t\t * file smaller, which hopefully allows the special data encoding condition to be\t\t * seen more easily.  Care must be taken when modifying this file since the\t\t * special conditions are easily destroyed (which would make this test useless).\t\t * It seems that removing the worksheet protection has made this more so - if the\t\t * current file is re-saved in Excel(2007) the bug condition disappears.\t\t *\t\t *\t\t * Using BiffViewer, one can see that there are two shared formula groups representing\t\t * the essentially same formula over ~20 cells.  The shared group ranges overlap and\t\t * are A12:Q20 and A20:Q27.  The locator cell ('first cell') for the second group is\t\t * Q20 which is not the top left cell of the enclosing range.  It is this specific\t\t * condition which caused the bug to occur\t\t  */"
'Poi','Poi','Poi','//  TODO to move a table from one sheet to another   CTWorksheet.getTableParts needs to be updated on both sheets '
'Poi','Poi','Poi','/*  * Implementation for the Excel function IF * <p> * Note that Excel is a bit picky about the arguments to this function, *  when serialised into {@link Ptg}s in a HSSF file. While most cases are *  pretty chilled about the R vs V state of {@link RefPtg} arguments, *  for IF special care is needed to avoid Excel showing #VALUE. * See bug numbers #55324 and #55747 for the full details on this. * TODO Fix this...  */'
'Poi','Poi','Poi',"// force all children to commit their changes into the underlying OOXML Package   TODO Shouldn't they be committing to the new one instead? "
'Poi','Poi','Poi',"//  Trigger the onDocumentRead for all the child parts   Otherwise we'll hit issues on Styles, Settings etc on save   TODO: Refactor this to not need to access protected method   from other package! Remove the static helper method once fixed!!! "
'Poi','Poi','Poi',"//  TODO - probably shouldn't initialize area ref when text is really a cell ref   Need to fix some named range stuff to get rid of this "
'Poi','Poi','Poi','//  TODO: find out, how to set this value '
'Poi','Poi','Poi','//  @Ignore("TODO Work out why the Thu 21st vs Monday 25th problem is occurring and fix") '
'Poi','Poi','Poi','/*  * Collection of convenience chunks for standard parts of the MSG file. *  * Not all of these will be present in any given file. *  * A partial list is available at: * http://msdn.microsoft.com/en-us/library/ms526356%28v=exchg.10%29.aspx *  * TODO Deprecate the public Chunks in favour of Property Lookups  */'
'Poi','Poi','Poi','//  TODO Streaming write support   TODO  then convert fixed sized write to use streaming internally   TODO Append write support (probably streaming) '
'Poi','Poi','Poi','//  TODO - what about values between (10<sup>14</sup>-0.5) and (10<sup>14</sup>-0.05) ? '
'Poi','Poi','Poi','/*      * TODO Fix these so that they work      */'
'Poi','Poi','Poi','//  workaround for office 2007 pretty-printed .rels files '
'Poi','Poi','Poi','// TODO use the correct SpreadsheetVersion '
'Poi','Poi','Poi','//  XXX: sprm code 0x6428 is sprmPBrcBetween80, but accessed property linked to sprmPBrcBar80 (0x6629) '
'Poi','Poi','Poi','//  TODO Provide a way to get the one with the filename '
'Poi','Poi','Poi',"/*      * Should be able to write then read formulas with references     *  to cells in other files, eg '[refs/airport.xls]Sheet1'!$A$2     *  or 'http://192.168.1.2/[blank.xls]Sheet1'!$A$1 .     * Additionally, if a reference to that file is provided, it should     *  be possible to evaluate them too     * TODO Fix this to evaluate for XSSF     * TODO Fix this to work at all for HSSF      */"
'Poi','Poi','Poi','//  not sure why we allow this, COUNTIFS() is only available   in OOXML, it was introduced with Office 2007 '
'Poi','Poi','Poi','//  column F: formula   TODO formulas are not yet supported  in SXSSF  cell.setCellFormula("SUM(A" + (rowIndex+1) + ":E" + (rowIndex+1)+ ")"); '
'Poi','Poi','Poi','/*  * Simple interface describing both {@link XWPFParagraph} * and {@link XWPFSDT} * <p> * TODO Should this be based on / extend {@link Paragraph}?  */'
'Poi','Poi','Poi','//  This lacks the 8 byte header size '
'Poi','Poi','Poi','//  TODO: support headers '
'Poi','Poi','Poi','// YK: TODO document each alignment option '
'Poi','Poi','Poi','//  Need to extend the stream   TODO Replace this with proper append support   For now, do the extending by hand... '
'Poi','Poi','Poi','//  @deprecated 3.15 beta 2. getHorizontalAlignment will only work on HorizontalAlignment enums instead of codes in the future. '
'Poi','Poi','Poi','/*      * Does this HSSFPatriarch contain a chart?     * (Technically a reference to a chart, since they     * get stored in a different block of records)     * FIXME - detect chart in all cases (only seems     * to work on some charts so far)      */'
'Poi','Poi','Poi','//  TODO Is this right? '
'Poi','Poi','Poi','/* \t * debug only\t * TODO - encapsulate\t  */'
'Poi','Poi','Poi','//  TODO: should this be supported?   shape.setShapeType(-1);   assertEquals(-1, shape.getShapeType());   shape.setShapeType(-1);   assertEquals(-1, shape.getShapeType()); '
'Poi','Poi','Poi','/*       * TODO - make HSSFComment more consistent when created vs read from file.      * Currently HSSFComment has two main forms (corresponding to the two constructors).   There      * are certain operations that only work on comment objects in one of the forms (e.g. deleting      * comments).      * POI is also deficient in its management of RowRecord fields firstCol and lastCol.  Those      * fields are supposed to take comments into account, but POI does not do this yet (feb 2009).      * It seems like HSSFRow should manage a collection of local HSSFComments       */'
'Poi','Poi','Poi',"//  TODO - what does '-1' mean here?  error check, bail out gracefully! "
'Poi','Poi','Poi','//  TODO: handle vflip/hflip '
'Poi','Poi','Poi','//  TODO - render full row and full column refs properly '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): static final byte[]  P_HEADING_PAIR = new byte[123]; '
'Poi','Poi','Poi','//  TODO: init classId directly in the constructor when old statics have been removed from ClassID '
'Poi','Poi','Poi',"//  TODO - this test probably isn't testing much anymore "
'Poi','Poi','Poi',"//  TODO: anything else, we don't handle yet, such as top 10 "
'Poi','Poi','Poi','//  index seems like what index the cellstyle is in the list of styles for a workbook.   not good to compare on! '
'Poi','Poi','Poi','//  FIXME: if cell belongs to a merged region, some of the merged region may have fallen outside of the random access window   In this case, getting the column width may result in an error. Need to gracefully handle this. '
'Poi','Poi','Poi','//  TODO - instantiable superclass  arbitrarily selected; may need to increase '
'Poi','Poi','Poi',"/*  * Notes: * Duplicate x values don't work most of the time because of the way the * math library handles multiple regression. * The math library currently fails when the number of x variables is >= * the sample size (see https://github.com/Hipparchus-Math/hipparchus/issues/13).  */"
'Poi','Poi','Poi','//  TODO - find a way to choose the correct date format '
'Poi','Poi','Poi',"//  TODO This isn't right, but it's what we currently generate.... "
'Poi','Poi','Poi','//  currently not implemented '
'Poi','Poi','Poi','//  TODO: charset conversion (see ecma spec)  '
'Poi','Poi','Poi','//  {   /*   * Page 31:   *   * main document must be found by examining the piece table entries   * from the 0th piece table entry from the piece table entry that   * describes cp=fib.ccpText.   */   // TODO: review   return new Range( _cpSplit.getMainDocumentStart(),   _cpSplit.getMainDocumentEnd(), this );   }     /*   * Page 31:   *   * "In a non-complex file, this means text of the: main document   begins   * at fib.fcMin in the file and continues through   * fib.fcMin+fib.ccpText."   */   int bytesStart = getFileInformationBlock().getFcMin();     int charsStart = getTextTable().getCharIndex( bytesStart );   int charsEnd = charsStart   + getFileInformationBlock().getSubdocumentTextStreamLength(   SubdocumentType.MAIN ); '
'Poi','Poi','Poi','//  FIXME: Most cells are not merged, so calling getCellWidth twice re-computes the same value twice.   Need to rewrite this to avoid unnecessary computation if this proves to be a performance bottleneck. '
'Poi','Poi','Poi','//  FIXME: replace with wb.close() when bug 58779 is resolved '
'Poi','Poi','Poi','//  FIXME (byte array properties not yet implemented): static final byte[]  P_DOCPARTS = new byte[123]; '
'Poi','Poi','Poi',"//  it doesn't work to use just a color with transparency ... "
'Poi','Poi','Poi','/*  * Utilities to read hex from files. * TODO - move to test packages  */'
'Poi','Poi','Poi','//  TODO Test for tick not bullet '
'Poi','Poi','Poi','//  TODO: check font group defaulting to Symbol '
'Poi','Poi','Poi','//  todo validate formula here, before changing the cell? '
'Poi','Poi','Poi','//  TODO: handle tile settings, currently the pattern is always streched 100% in height/width '
'Poi','Poi','Poi','// \tundocumented '
'Poi','Poi','Poi','//  TODO These values are suspected to be wrong... '
'Poi','Poi','Poi','/*      * A factory method allowing to create a conditional formatting rule     * with a cell comparison operator<p>     * TODO - formulas containing cell references are currently not parsed properly     *     * @param comparisonOperation - a constant value from     *\t\t <tt>{@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator}</tt>: <p>     * <ul>     *\t\t <li>BETWEEN</li>     *\t\t <li>NOT_BETWEEN</li>     *\t\t <li>EQUAL</li>     *\t\t <li>NOT_EQUAL</li>     *\t\t <li>GT</li>     *\t\t <li>LT</li>     *\t\t <li>GE</li>     *\t\t <li>LE</li>     * </ul>     * </p>     * @param formula1 - formula for the valued, compared with the cell     * @param formula2 - second formula (only used with     * {@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator#BETWEEN}) and     * {@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator#NOT_BETWEEN} operations)      */'
'Poi','Poi','Poi',"//  Note: Removal doesn't currently reset the first column.  It probably should but it doesn't. "
'Poi','Poi','Poi','// It hurts, hurts, hurts to create a new byte array for every record.  However, on a large Excel spreadsheet, this parser was 1/3 faster than  the ooxml sax parser (5 seconds for xssfb and 7.5 seconds for xssf.  The code is far cleaner to have the parser read all  of the data rather than having every component promise that it will read '
'Poi','Poi','Poi',"//  Manually check to make sure file isn't corrupted   TODO: develop a process for occasionally manually reviewing workbooks   to verify workbooks are not corrupted "
'Poi','Poi','Poi','//  TODO How does XSSF encode this? '
'Poi','Poi','Poi',"//  TODO: HorribleProxy can't convert array input params yet "
'Poi','Poi','Poi','//  TODO - full column references not rendering properly, absolute markers not present either '
'Poi','Poi','Poi','//  FIXME: Java 7+: use java.nio.Files#createTempDirectory '
'Poi','Poi','Poi','//  TODO - keep looping? Do we expect multiple matches? '
'Poi','Poi','Poi','/*      * TODO: data tables are stored at the workbook level in XSSF, but are bound to a single sheet.     *       The current code structure has them hanging off XSSFSheet, but formulas reference them     *       only by name (names are global, and case insensitive).     *       This map stores names as lower case for case-insensitive lookups.     *     * FIXME: Caching tables by name here for fast formula lookup means the map is out of date if     *       a table is renamed or added/removed to a sheet after the map is created.     *     *       Perhaps tables can be managed similar to PivotTable references above?      */'
'Poi','Poi','Poi','//  TODO Fix this to not have an extra 0 at the end  assertEquals(pound+"   -  ", formatter.formatCellValue(zero)); '
'Poi','Poi','Poi','//  ignore... not implemented '
'Poi','Poi','Poi','//  TODO - check the formula once tables and '
'Poi','Poi','Poi','/*      * TODO: fix and enable      */'
'Poi','Poi','Poi','//  @Ignore("TODO Work out why the Fri 22nd vs Monday 25th problem is occurring and fix") '
'Poi','Poi','Poi','//  XXX: It should be possible to derive this without concatenating the array, too. '
'Poi','Poi','Poi','/*      * This is the default Watermark paragraph; the only variable is the text message     * TODO: manage all the other variables      */'
'Poi','Poi','Poi','// TODO defaults are different in HSSF and XSSF  assertTrue(sheet.getRowSumsBelow());  assertTrue(sheet.getRowSumsRight()); '
'Poi','Poi','Poi',"//  FIXME: whitespace wasn't stripped "
'Poi','Poi','Poi','//  todo: test a manipulation on a package part, which is not signed   ... maybe in combination with #56164  '
'Poi','Poi','Poi','//  TODO - is this right? '
'Poi','Poi','Poi','//  FIXME this should be changed to private and the class marked final once HSSFDateUtil can be removed '
'Poi','Poi','Poi','// TODO: default "guts" is different in HSSF and XSSF '
'Poi','Poi','Poi','//  work around issues with dates like 1989, which appear as "89" here '
'Poi','Poi','Poi','/*  TODO:             * The object specified by this record MUST be deleted from the EMF Object Table.             * If the deleted object is currently selected in the playback device context,             * the default object for that graphics property MUST be restored.              */'
'Poi','Poi','Poi','//  TODO run more than once '
'Poi','Poi','Poi','//  TODO: if decimalPoint is null (-> index == -1), return the whole list? '
'Poi','Poi','Poi','//  TODO Add in the rest of the types '
'Poi','Poi','Poi','// YK: TODO: this is only a prototype '
'Poi','Poi','Poi','//  TODO: support formulas '
'Poi','Poi','Poi','//  TODO - add similar sanity check to ensure that Sheet.serializeIndexRecord() does not write mis-aligned offsets either '
'Poi','Poi','Poi',"//  TODO: we've already scanned the records, why should this work any better now? "
'Poi','Poi','Poi','// TODO: remove old one '
'Poi','Poi','Poi','//  TODO: add other axis types '
'Poi','Poi','Poi','//  TODO - convert this to a RecordAggregate '
'Poi','Poi','Poi','// TODO: range checking  TODO: fill this out '
'Poi','Poi','Poi','//  TODO Make sense of the raw offset value '
'Poi','Poi','Poi','//  TODO Create according XWPFComment class, extending POIXMLDocumentPart '
'Poi','Poi','Poi','//  TODO: we need to find the two points for gradient - the problem is, which point at the outline   do you take? My solution would be to apply the gradient rotation to the shape in reverse   and then scan the shape for the largest possible horizontal distance '
'Poi','Poi','Poi','//  TODO move parseBoolean to OperandResolver '
'Poi','Poi','Poi','//  TODO: handle reset auto number indexes '
'Poi','Poi','Poi','//  TODO: Do these have a good home like o.a.p.openxml4j.opc.PackageNamespaces and PackageRelationshipTypes?   These constants should be common to all of POI and easy to use by other applications such as Tika '
'Poi','Poi','Poi','//  TODO Correct this, so that the filename is shown too, see bug #56742   This is what Excel itself shows  assertEquals("\'56737.xls\'!NR_Global_B2", cRefWName.getCellFormula()); '
'Poi','Poi','Poi','//  TODO verify the constructors '
'Poi','Poi','Poi','//  FIXME: breaks if address contains a sheet name or dollar signs from an absolute CellReference '
'Poi','Poi','Poi','//  TODO: check if that list can be replaced by idx = Math.max(idx,themeIdx) '
'Poi','Poi','Poi','//  ugly typecast - TODO - make spreadsheet version more easily accessible '
'Poi','Poi','Poi','//  FIXME: (performance optimization) this should be moved outside the for-loop so that hyperlinks only needs to be iterated over once. '
'Poi','Poi','Poi','//  workaround for IBMs cipher not resetting on doFinal '
'Poi','Poi','Poi','// TODO combine testRepeatingRowsAndColums() for HSSF and XSSF '
'Poi','Poi','Poi','//  TODO: there may be a better way to delegate this '
'Poi','Poi','Poi',"//  TODO: check if this is atomic ... as transform() is probably called synchronized, it doesn't matter anyway "
'Poi','Poi','Poi','//  TODO: check for duplicate '
'Poi','Poi','Poi','//  TODO: this is not implemented ... please provide a sample, if it   ever happens to you, to come here ... '
'Poi','Poi','Poi','//  FIXME: This could be moved into LookupFunctionsTestCaseData.xls, which is tested by TestLookupFunctionsFromSpreadsheet.java '
'Poi','Poi','Poi','//  workaround for a call by XSLFSheet.importContent:   if we have already the same amount of child shapes '
'Poi','Poi','Poi','//  TODO - move these constants to test class (the only consumer) '
'Poi','Poi','Poi','//  column E: boolean   TODO booleans are shown as 1/0 instead of TRUE/FALSE '
'Poi','Poi','Poi','//  Get the hyperlinks   TODO: make me optional/separated in private function '
'Poi','Poi','Poi','//  TODO  support other types of objects '
'Poi','Poi','Poi','//  FIXME: we grew a column? '
'Poi','Poi','Poi','//  FIXME: These might affect the time zone due to daylight savings:  assertCalendarEquals(JAPAN_CALENDAR, LocaleUtil.getLocaleCalendar(2016, 00, 01));  assertCalendarEquals(JAPAN_CALENDAR, LocaleUtil.getLocaleCalendar(2016, 00, 01, 00, 00, 00)); '
'Poi','Poi','Poi','//  TODO: it seems HSSFSheet does not correctly remove comments from rows that are overwritten '
'Poi','Poi','Poi','//  FIXME: use org.apache.commons.collections.map.CaseInsensitiveMap '
'Poi','Poi','Poi','//  FIXME: if srcRows contains gaps or null values, clear out those rows that will be overwritten   how will this work with merging (copy just values, leave cell styles in place?) '
'Poi','Poi','Poi','//  some Records do not implement clone ?!    equals instead of instanceof is on purpose here to only skip exactly this class and not any derived ones '
'Poi','Poi','Poi','//  TODO: fix gradient types, this mismatches with the MS-ODRAW definition ...   need to handle (not only) the type (radial,rectangular,linear),   the direction, e.g. top right, and bounds (e.g. for rectangular boxes) '
'Poi','Poi','Poi','//  FIXME: is special behavior needed if srcRows and destRows belong to the same sheets and the regions overlap? '
'Poi','Poi','Poi','/*      * A factory method allowing to create a conditional formatting rule     * with a cell comparison operator<p>     * TODO - formulas containing cell references are currently not parsed properly     *     * @param comparisonOperation - a constant value from     *\t\t <tt>{@link org.apache.poi.hssf.record.CFRuleBase.ComparisonOperator}</tt>: <p>     * <ul>     *\t\t <li>BETWEEN</li>     *\t\t <li>NOT_BETWEEN</li>     *\t\t <li>EQUAL</li>     *\t\t <li>NOT_EQUAL</li>     *\t\t <li>GT</li>     *\t\t <li>LT</li>     *\t\t <li>GE</li>     *\t\t <li>LE</li>     * </ul>     * </p>     * @param formula1 - formula for the valued, compared with the cell     * @param formula2 - second formula (only used with     * {@link org.apache.poi.ss.usermodel.ComparisonOperator#BETWEEN}) and     * {@link org.apache.poi.ss.usermodel.ComparisonOperator#NOT_BETWEEN} operations)      */'
'Poi','Poi','Poi','//  TODO Do properly '
'Poi','Poi','Poi','//  This one uses a shared formula   TODO Retrieve the shared formula and tweak it to     match the current cell '
'Poi','Poi','Poi','//  FIXME: return Collections.unmodifiableList? '
'Poi','Poi','Poi','/*      * TODO: figure out why it fails with "RecordFormatException: 0 bytes written but getRecordSize() reports 80"      */'
'Poi','Poi','Poi','/*  * Counts the number of cells that contain numeric data within *  the list of arguments. * * Excel Syntax * COUNT(value1,value2,...) * Value1, value2, ...   are 1 to 30 arguments representing the values or ranges to be counted. * * TODO: Check this properly matches excel on edge cases *  like formula cells, error cells etc  */'
'Poi','Poi','Poi','// TODO apply the dataformat for this cell '
'Poi','Poi','Poi','/* @todo verify the constructors */'
'Poi','Poi','Poi','//  partB contains SHEET_NAME_DELIMITER   TODO - are references like "Sheet1!A1:Sheet1:B2" ever valid?     FormulaParser has code to handle that. '
'Poi','Poi','Poi','// TODO analyze textCfException when have some test data '
'Poi','Poi','Poi',"/*      * Resolves a cell or area reference dynamically.     * @param workbookName the name of the workbook containing the reference.  If <code>null</code>     * the current workbook is assumed.  Note - to evaluate formulas which use multiple workbooks,     * a {@link CollaboratingWorkbooksEnvironment} must be set up.     * @param sheetName the name of the sheet containing the reference.  May be <code>null</code>     * (when <tt>workbookName</tt> is also null) in which case the current workbook and sheet is     * assumed.     * @param refStrPart1 the single cell reference or first part of the area reference.  Must not     * be <code>null</code>.     * @param refStrPart2 the second part of the area reference. For single cell references this     * parameter must be <code>null</code>     * @param isA1Style specifies the format for <tt>refStrPart1</tt> and <tt>refStrPart2</tt>.     * Pass <code>true</code> for 'A1' style and <code>false</code> for 'R1C1' style.     * TODO - currently POI only supports 'A1' reference style     * @return a {@link RefEval} or {@link AreaEval}      */"
'Poi','Poi','Poi','//  Ensure we get the right colours for these themes   TODO fix   assertEquals("FFEEECE1", wb.getTheme().getThemeColor(2).getARGBHex());   assertEquals("FF1F497D", wb.getTheme().getThemeColor(3).getARGBHex()); '
'Poi','Poi','Poi','//  TODO - "-1" is a special value being temporarily used for whole row and whole column area references.   so these checks are currently N.Q.R. '
'Poi','Poi','Poi','/*  FIXME (3): Ensure that at most "length" bytes are read.  */'
'Poi','Poi','Poi','//  FIXME: CellReference is inconsistent '
'Poi','Poi','Poi','//  this is a bit of a hack, but it works '
'Poi','Poi','Poi','// TODO make the two variable below private! '
'Poi','Poi','Poi','//  TODO - junit to prove last arg must be srcColumnIndex and not srcRowIndex '
'Poi','Poi','Poi','/*      * Test disabled pending a fix in the formula evaluator     * TODO - create MissingArgEval and modify the formula evaluator to handle this      */'
'Poi','Poi','Poi','//  TODO: check how to clone '
'Poi','Poi','Poi','//  TODO Delocalize specialized marshallers '
'Poi','Poi','Poi','//  TODO: This seems far more complex than it needs to be '
'Poi','Poi','Poi','//  TODO - this is messy   Not the most efficient way but the other way was causing too many bugs '
'Poi','Poi','Poi','//  create a new container   TODO: ... is this case really happening? '
'Poi','Poi','Poi','//  This bug is currently open. When this bug is fixed, it should not throw an AssertionError '
'Poi','Poi','Poi','//  TODO: determine master shape '
'Poi','Poi','Poi','// TODO: figure out how to convert SEG_QUADTO into SEG_CUBICTO '
'Poi','Poi','Poi','//  TODO Support OOXML-Strict, see bug #57699   xlsxStrict '
'Poi','Poi','Poi','/*  @todo handle paragraph postioning */'
'Poi','Poi','Poi',"//  TODO: this could/should be delegated to the Enum type, but that's in the usermodel package,   we may not want evaluation code there.  Of course, maybe the enum should go here in formula,   and not be returned by the SS model, but then we need the XSSF rule to expose the raw OOXML   type value, which isn't ideal either. "
'Poi','Poi','Poi','//  not implemented '
'Poi','Poi','Poi',"//  Out flag is the wrong way round!   Length wise, we're 3 longer than we say, so the max len is 19   Endian wise, we're little endian, so 0x1234 is pos 0x312 "
'Poi','Poi','Poi','//  TODO: eventually use caching here '
'Poi','Poi','Poi',"/*      * Shifts rows between startRow and endRow n number of rows.     * If you use a negative number, it will shift rows up.     * Code ensures that rows don't wrap around<p>     *      * Additionally shifts merged regions that are completely defined in these     * rows (ie. merged 2 cells on a row to be shifted).<p>     *      * TODO Might want to add bounds checking here     *     * @param startRow               the row to start shifting     * @param endRow                 the row to end shifting     * @param n                      the number of rows to shift     * @param copyRowHeight          whether to copy the row height during the shift     * @param resetOriginalRowHeight whether to set the original row's height to the default     * @param moveComments           whether to move comments at the same time as the cells they are attached to      */"
'Poi','Poi','Poi','//  FIXME: this looks very similar to getCellWithMerges below. Consider consolidating.   We should only be checking merged regions if useMergedCells is true. Why are we doing this for-loop? '
'Poi','Poi','Poi','//  Finally check the colours on the styles   TODO fix   assertEquals("FFEEECE1", cA4_EEECE1.getCellStyle().getFillForegroundXSSFColor().getARGBHex());   assertEquals("FF1F497D", cA5_1F497D.getCellStyle().getFillForegroundXSSFColor().getARGBHex()); '
'Poi','Poi','Poi','//  TODO: find a real charset mapping solution instead of hard coding for Wingdings '
'Poi','Poi','Poi','//  TOOD: check for correct placeholder handling - see org.apache.poi.hslf.model.Placeholder '
'Poi','Poi','Poi','//  TODO: inspect the CompObj record for more details, i.e. the content type '
'Poi','Poi','Poi','//  FIXME: A better exception class (IOException?) and message should be raised   indicating that the document could not be written because the output stream is closed.   see {@link org.apache.poi.openxml4j.opc.ZipPackage#saveImpl(java.io.OutputStream)} '
'Poi','Poi','Poi','//  TODO - 2 seems wrong (Jun 2008).  Maybe this method is not relevant '
'Poi','Poi','Poi','// FIXME: currently fails '
'Poi','Poi','Poi',"/*              * TODO DO not use a coded constant, find the constant in the OOXML             * classes instead, as the child of type CT_Paragraph is defined in the             * OOXML schema as 'p'              */"
'Poi','Poi','Poi','//  this is confusing: the rule is not connected to the sheet, changes are not applied '
'Poi','Poi','Poi','//  TODO: handle new HS_* enumeration values '
'Poi','Poi','Poi','//  TODO - fix case of negative subpattern differing from the    positive one by more than just the prefix+suffix, which    is all DecimalFormat supports...          assertEquals("(12.3)", dfUS.formatRawCellContents(-12.343, -1, p2dp_n1dp));          assertEquals("(12.3)", dfUS.formatRawCellContents(-12.343, -1, p2dp_n1dp_z0)); '
'Poi','Poi','Poi','//  TODO: Add DocumentProperties#equals ??? '
'Poi','Poi','Poi','/*  * Default Paragraph style, from which other styles will override * TODO Share logic with {@link XWPFParagraph} which also uses CTPPr  */'
'Poi','Poi','Poi','//  @deprecated 3.15 beta 2. getFillPattern will only work on FillPatternType enums instead of codes in the future. '
'Poi','Poi','Poi','//  FIXME: inconsistent case-sensitivity '
'Poi','Poi','Poi','/*      * Why doesnt JUnit have a method like this for doubles?      * The current impl (3.8.1) of Junit has a retar*** method     * for comparing doubles. DO NOT use that.     * TODO: This class should really be in an abstract super class     * to avoid code duplication across this project.     * @param message     * @param baseval     * @param checkval      */'
'Poi','Poi','Poi',"//  TODO: instead of returning a BufferedImage, we might return a pair of raw data + image renderer   instead, so metafiles aren't pixelated, but directly written to the output graphics context "
'Poi','Poi','Poi','//  TODO Need to fetch / use format strings '
'Poi','Poi','Poi','//  sheet BOFs for sure   TODO - find out about chart BOFs '
'Poi','Poi','Poi','//  TOOO: tell the batik guys to use secure parsing feature '
'Poi','Poi','Poi','//  TODO: some documents fail currently...   Note - as of Bugzilla 48036 (svn r828244, r828247) POI is capable of evaluating   IntersectionPtg.  However it is still not capable of parsing it.   So FormulaEvalTestData.xls now contains a few formulas that produce errors here.  HSSFFormulaEvaluator evaluator = new HSSFFormulaEvaluator(wb);  evaluator.evaluateAll(); '
'Poi','Poi','Poi','//  TODO: find out where this -1 value comes from at #57820 (link to ms docs?) '
'Poi','Poi','Poi','//  TODO: calculate bounding rectangle on anchor and set off/ext correctly '
'Poi','Poi','Poi','//  TODO - what about MemNoMemPtg? '
'Poi','Poi','Poi','//  It is not wise to have such a wide catch clause - Exception is very   close to being at the top of the inheritance hierarchy - though it   will suffice for this example as it is really not possible to recover   easilly from an exceptional set of circumstances at this point in the   program. It should however, ideally be replaced with one or more '
'Poi','Poi','Poi',"//  TODO: There's probably a better way to do this "
'Poi','Poi','Poi','//  TODO: Verify that the version syntax is valid by parsing with a version-aware parser like   org.apache.maven.artifact.versioning.DefaultArtifactVersion '
'Poi','Poi','Poi','//  TODO: placement id only "SHOULD" be unique ... check other placeholders on sheet for unique id '
'Poi','Poi','Poi','//  FIXME: add more tests to compare calendars, ignoring whether the set dates are equal '
'Poi','Poi','Poi','//  And sometimes they write out garbage :( '
'Poi','Poi','Poi','//  FIXME: use junit4 parametrization '
'Poi','Poi','Poi','//  TODO: check if a hyperlink already exists '
'Poi','Poi','Poi','//  FIXME: Verify that the footnote reference is w:endnoteReference, not w:footnoteReference '
'Poi','Poi','Poi','//  TODO: fix font height calculation    the height is given as font size + ascent + descent   as an approximation we reduce the height by a static factor  '
'Poi','Poi','Poi','//  TODO - the last 2 bytes of formula data (8,0) seem weird.  They encode to ConcatPtg, UnknownPtg   UnknownPtg is otherwise not created by any other test cases '
'Poi','Poi','Poi','//  hack to pass boolean by ref into inner class '
'Poi','Poi','Poi','//  RGB Color   RGB Color   TODO: Add Pattern constants to record '
'Poi','Poi','Poi','//  FIXME: replace with SXSSFHyperlink if it ever gets created '
'Poi','Poi','Poi','/*      * Call this whenever cell values change in the workbook, so condional formats are re-evaluated      * for all cells.     * <p>     * TODO: eventually this should work like {@link EvaluationCache#notifyUpdateCell(int, int, EvaluationCell)}     * and only clear values that need recalculation based on the formula dependency tree.      */'
'Poi','Poi','Poi',"//       assertRefPtgA1('V', getPtgs(cell), 4); // FIXME! "
'Poi','Poi','Poi','/* \t * From [MS-ODRAW].pdf sec 2.2.1<p>\t * TODO - make EscherRecordHeader {@link LittleEndianInput} aware and refactor with this\t  */'
'Poi','Poi','Poi','//  FIXME dsi.getHeadingPair(); '
'Poi','Poi','Poi','// TODO: figure out what this should be? '
'Poi','Poi','Poi','//  FIXME: add more tests to compare calendars, ignoring whether the dates are equal '
'Poi','Poi','Poi','/*      * A factory method allowing to create a conditional formatting rule with a formula.<br>     *     * The formatting rules are applied by Excel when the value of the formula not equal to 0.<p>     * TODO - formulas containing cell references are currently not parsed properly     * @param formula - formula for the valued, compared with the cell      */'
'Poi','Poi','Poi',"//  TODO: the link of the XLSF classes to the xml beans objects will   be broken, when the elements are parsed a second time.   Unfortunately, the xml schema type can't be set of the alternate   content element "
'Poi','Poi','Poi','//  the hyperlink extends over this text run, increase its length   TODO: the text run might be longer than the hyperlink '
'Poi','Poi','Poi',"/*      * If a formula references cells or named ranges in another workbook,     *  but that isn't available at evaluation time, the cached values     *  should be used instead     * TODO Add the support then add a unit test     * See bug #56752      */"
'Poi','Poi','Poi','//  TODO Are these getters correct? '
'Poi','Poi','Poi','/*  * Common interface for things that can occur * where a run (text with common stylings) can, * eg {@link XWPFRun} or {@link XWPFSDT}. * TODO More methods to follow shortly! * <p> * TODO Make this based on {@link CharacterRun}  */'
'Poi','Poi','Poi','/*  @todo revisit this  */'
'Poi','Poi','Poi',"//  TODO Why isn't this seen as 10? "
'Poi','Poi','Poi','// TODO: needs test '
'Poi','Poi','Poi','// FIXME: how many tables are there in this spreadsheet?  FIXME: what is the table name?  FIXME: what is the table name? '
'Poi','Poi','Poi','// but is it really? shouldn\'t autosizing column E use "" from E1 and SHORT from E2? '
'Poi','Poi','Poi','//  TODO: documentation and behavior do not match here! '
'Poi','Poi','Poi','//  TODO Is this completely correct? '
'Poi','Poi','Poi','//  TODO - refactor cell reference parsing logic to one place.   Current known incarnations:      FormulaParser.GetName()     CellReference.separateRefParts()      AreaReference.separateAreaRefs() (here)     SheetNameFormatter.format() (inverse) '
'Poi','Poi','Poi','//  TODO: this only works for non-rotated tables '
'Poi','Poi','Poi','//  TODO - what does this line do? '
'Poi','Poi','Poi','//  TODO: reading cell comments via Sheet does not work currently as it tries    to access the underlying sheet for this, but comments are stored as   properties on Cells... '
'Poi','Poi','Poi','// remove nodes which are empty in order to keep the output xml valid   FIXME: what should be done if currentNode.getTextContent() is null? '
'Poi','Poi','Poi','//  TODO: implement '
'Poi','Poi','Poi','//  Mixed icons - Column U   TODO Support EXT formattings '
'Poi','Poi','Poi','//  TODO Provide a wrapper round STHighlightColor, then expose getter/setter    for the highlight colour. Ideally also then add to CharacterRun interface '
'Poi','Poi','Poi','//  FIXME: what should be done if complexTypeName is null? '
'Poi','Poi','Poi','//  TODO: are these readable by some of the formats? '
'Poi','Poi','Poi',"/* \t * Changes the chart's title, but only if there\t *  was one already.\t * TODO - add in the records if not\t  */"
'Poi','Poi','Poi','/*  * Implementation of the DSum function: * Finds the total value of matching values in a column in an area with given conditions. *  * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */'
'Poi','Poi','Poi','//  TODO: log error '
'Poi','Poi','Poi','/*  bug 59775: XSSFHyperlink has wrong type if it contains a location (CTHyperlink#getLocation)     * URLs with a hash mark (#) are still URL hyperlinks, not document links      */'
'Poi','Poi','Poi','/*      * Problem with evaluation formulas due to     * NameXPtgs.     * Blows up on:     * IF(B6= (ROUNDUP(B6,0) + ROUNDDOWN(B6,0))/2, MROUND(B6,2),ROUND(B6,0))     * <p>     * TODO: delete this test case when MROUND and VAR are implemented      */'
'Poi','Poi','Poi','//  TODO Do this better '
'Poi','Poi','Poi','//  TODO: fix those cases, but ignore them for now ... '
'Poi','Poi','Poi',"//  don't rely on wmf dimensions, use dimension of anchor   TODO: check pixels vs. points for image dimension "
'Poi','Poi','Poi','//  TODO: depending on fill focus, rotation with shape and other escher properties   there are still a lot of cases where we get the gradients wrong '
'Poi','Poi','Poi','//  TODO: check for merged cols '
'Poi','Poi','Poi','//  TODO - make all these fields private '
'Poi','Poi','Poi','//  TODO: Not sure how to format this. -- DN '
'Poi','Poi','Poi',"//  TODO - is this the best way to represent 'EMPTY'? "
'Poi','Poi','Poi','/*      * Sets a page break at the indicated row     * @param row FIXME: Document this!      */'
'Poi','Poi','Poi','//  TODO: check min/max orientation '
'Poi','Poi','Poi','//  TODO - maybe same logic required for other/all built-in name records          workbook.cloneDrawings(clonedSheet.getSheet()); '
'Poi','Poi','Poi','/*      * bug 58779: Closing an XSSFWorkbook that was created with WorkbookFactory modifies the file     * FIXME: replace this method with wb.close() when bug 58779 is resolved.     *     * @param wb the workbook to close or revert      */'
'Poi','Poi','Poi','/*      * Check that we can correctly decode the whole file     * TODO Fix what looks like a padding issue      */'
'Poi','Poi','Poi','//  TODO fix calculation of tint  assertEquals(new Color(137, 137, 137), r2.getFontColor()); '
'Poi','Poi','Poi','//  TODO: to be validated ... '
'Poi','Poi','Poi','//  TODO: does this make sense? '
'Poi','Poi','Poi','//  TODO: add further members for other properties like:   - ATTACH_ADDITIONAL_INFO   - ATTACH_CONTENT_BASE   - ATTACH_CONTENT_LOCATION   - ATTACH_DISPOSITION   - ATTACH_ENCODING   - ATTACH_FLAGS   - ATTACH_LONG_PATHNAME   - ATTACH_SIZE '
'Poi','Poi','Poi','//  TODO: what does extended mean? '
'Poi','Poi','Poi','//  FIXME dsi.getDocparts(); '
'Poi','Poi','Poi','//  FIXME: Merge with org.apache.poi.ss.usermodel.ComparisonOperator and rewrite as an enum '
'Poi','Poi','Poi','// TODO: check shapeId in the cloned sheet '
'Poi','Poi','Poi','//  FIXME: this method would be more useful if it could convert any Color to an HSSFColor   Currently the only benefit of this method is to throw an IllegalArgumentException   instead of a ClassCastException. '
'Poi','Poi','Poi','//  TODO Discover if the timezone is stored somewhere else or not '
'Poi','Poi','Poi','//  TODO: find out, how to determine this value '
'Poi','Poi','Poi','//  TODO: apply scaling of drawing context to offset '
'Poi','Poi','Poi','//  FIXME: is this correct? Should it be starting out with 0 or 1 text paragraphs? '
'Poi','Poi','Poi','//  TODO Fix this '
'Poi','Poi','Poi','//  TODO Nicer column fetching '
'Poi','Poi','Poi','/*     * Gets 160 bytes through then starts going wrong...    * TODO Fix this     */'
'Poi','Poi','Poi','//  TODO YK: Formulas in rows 16 and 17 operate with ArrayPtg which isn\'t yet supported   FormulaEvaluator as of r1041407 throws "Unexpected ptg class (org.apache.poi.ss.formula.ptg.ArrayPtg)" '
'Poi','Poi','Poi','//  TODO should be moved to a sub-class '
'Poi','Poi','Poi',"//  TODO - put unknown OBJ sub-records in a different class   unknown sids in the range 0x0004-0x0013 are probably 'sub-records' of ObjectRecord   those sids are in a different number space. "
'Poi','Poi','Poi','/*  @todo verify the constructors  */'
'Poi','Poi','Poi','/*  * Streaming version of Drawing. * Delegates most tasks to the non-streaming XSSF code. * TODO: Potentially, Comment and Chart need a similar streaming wrapper like Picture.  */'
'Poi','Poi','Poi','// FIXME: This cast can be avoided. '
'Poi','Poi','Poi','//  TODO: investigate if this is just an EMF-hack or if other formats are also embedded in EMF '
'Poi','Poi','Poi','//  TODO: remove padding bytes between placeable WMF header and body? '
'Poi','Poi','Poi','/*  * <p> * 9 Jan 2010 * </p> * <p> * // TODO insert Javadoc here! * </p> * * @author epp  */'
'Poi','Poi','Poi','//  TODO Check we get a helpful error about the max size '
'Poi','Poi','Poi','/*  * Implementation of the DMax function: * Finds the maximum value of a column in an area with given conditions. *  * TODO: * - wildcards ? and * in string conditions * - functions as conditions  */'
'Poi','Poi','Poi','//  TODO - POI crashes if the formula is added before this sheet   RuntimeException("Zero length string is an invalid sheet name")   Excel doesn\'t crash but the formula doesn\'t work until it is   re-entered '
'Poi','Poi','Poi','//  21.17 cm / 2.54 cm/inch * 72dpi * 20 = 12000   15.88 cm / 2.54 cm/inch * 72dpi * 20 = 9000   TODO YK: The Picture is cropped but HWPF reads the crop parameters all zeros '
'Poi','Poi','Poi','// FIXME: Need to confirm if this is not a formula.   empirical testing shows Excel saves explicit lists surrounded by double quotes,  '
'Poi','Poi','Poi','/*              * Make sure the DN is encoded using the same order as present             * within the certificate. This is an Office2010 work-around.             * Should be reverted back.             *              * XXX: not correct according to RFC 4514.              */'
'Poi','Poi','Poi','//  TODO Check sheet contents   TODO Check formula evaluation '
'Poi','Poi','Poi','//  TODO: this is actually never executed ... '
'Poi','Poi','Poi',"/*                      * too bad, this separator field mark doesn't have                     * corresponding end field mark in fields table                      */"
'Poi','Poi','Poi','//  TODO - consider deleting this class and letting CellEvaluationFrame take care of itself '
'Poi','Poi','Poi','//  This is where excel really gets it wrong   Special numbers like Infinity and NaN are interpreted according to   the standard rules below. '
'Poi','Poi','Poi',"// TODO: figure out how to map runs/text pieces to fonts  for now, if there's a non standard codepage in one of the fonts "
'Poi','Poi','Poi','//  TODO is any token transformation required under the various ref operators? '
'Poi','Poi','Poi','//  draw borders (three 3x3 grids) '
'Poi','Poi','Poi','// TODO: move to LittleEndian? '
'Poi','Poi','Poi','//  there is a special case of this record that has only 14 bytes...undocumented! '
'Poi','Poi','Poi','/*  * Supports reading and writing of variant data.<p> * * <strong>FIXME (3):</strong> Reading and writing should be made more * uniform than it is now. The following items should be resolved: * * <ul> * * <li>Reading requires a length parameter that is 4 byte greater than the * actual data, because the variant type field is included. * * <li>Reading reads from a byte array while writing writes to an byte array * output stream. * * </ul>  */'
'Poi','Poi','Poi','//  0x17 - 0x24 reserved for international and undocumented   TODO - one junit relies on these values which seems incorrect '
'Poi','Poi','Poi','/*  something is wrong, ignoring this mark along with start mark  */'
'Poi','Poi','Poi','//  TODO Correct this! '
'Poi','Poi','Poi','//  workaround if a path has been started and no MoveTo command   has been specified before the first lineTo/splineTo '
'Poi','Poi','Poi','// hack. internal variable EscherClientAnchorRecord.shortRecord can be  initialized only in fillFields(). We need to set shortRecord=false; '
'Poi','Poi','Poi',"/* \t\t * Changes the series' title, but only if there\t\t *  was one already.\t\t * TODO - add in the records if not\t\t  */"
'Poi','Poi','Poi','//                 ValueEval ve = OperandResolver.getSingleValue(args[3], srcRowIndex, srcColumnIndex);                  // TODO R1C1 style is not yet supported '
'SpringFramework','SpringFramework','SpringFramework','//  1 will make it throw a RuntimeException - SpEL will let this through '
'SpringFramework','SpringFramework','SpringFramework',"//  simply must not bail; we don't want non-existent resources to result in an Exception "
'SpringFramework','SpringFramework','SpringFramework','//  for now just make a new array; TODO: optimize '
'SpringFramework','SpringFramework','SpringFramework','//  Read-write transaction -> flush the Hibernate Session.   Further check: only flush when not FlushMode.MANUAL. '
'SpringFramework','SpringFramework','SpringFramework',"//  some case would not have been really necessary, but we can't know this at this point). "
'SpringFramework','SpringFramework','SpringFramework',"//  this test is a bit fragile, but gets the job done, proving that an   attempt was made to look up the AJ aspect. It's due to classpath issues   in .integration-tests that it's not found."
'SpringFramework','SpringFramework','SpringFramework','//  Instantiation failure, maybe too early... '
'SpringFramework','SpringFramework','SpringFramework','/* \t * Eat an identifier, possibly qualified (meaning that it is dotted).\t * TODO AndyC Could create complete identifiers (a.b.c) here rather than a sequence of them? (a, b, c)\t  */'
'SpringFramework','SpringFramework','SpringFramework','//  TODO: broken comparison since Mockito 2.2 upgrade   verifyIdenticalInvocations(expectedLexicalHandler, actualLexicalHandler); '
'SpringFramework','SpringFramework','SpringFramework',"//  TODO don't lose generic info for the new map "
'SpringFramework','SpringFramework','SpringFramework','//  we have work todo... '
'SpringFramework','SpringFramework','SpringFramework','//  TODO Determine why setExceptionToRaise() is unused. '
'SpringFramework','SpringFramework','SpringFramework',"//  We don't trust the JMS provider: It might throw RuntimeException or Error. "
'SpringFramework','SpringFramework','SpringFramework','//  TODO Future optimization - if followed by a static method call, skip generating code here '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: Optimization: Process only if this() specifies a type and not an identifier. '
'SpringFramework','SpringFramework','SpringFramework','// FIXME revisit in case of reentrant sync deadlock'
'SpringFramework','SpringFramework','SpringFramework','//  It has already caused a field error with a rejected value. '
'SpringFramework','SpringFramework','SpringFramework','//  TODO - only handles 2-dimensional arrays '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: Make me final when deprecated methods are removed '
'SpringFramework','SpringFramework','SpringFramework','//  TODO [SPR-13537] Change equalTo(null) to equalTo(""). '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: error? '
'SpringFramework','SpringFramework','SpringFramework','//  Resolve plain BeanDefinition, without contained name: use dummy name. '
'SpringFramework','SpringFramework','SpringFramework','//  TODO May fail on either call: may want to tighten up definition '
'SpringFramework','SpringFramework','SpringFramework',"/* \t * SPR-6038: detect HSQL and stop illegal locks being taken.\t * TODO: Against Quartz 2.2, this test's job doesn't actually execute anymore...\t  */"
'SpringFramework','SpringFramework','SpringFramework','//  If they were numbers, were they compatible? '
'SpringFramework','SpringFramework','SpringFramework','//  TODO following lines are a workaround for Hibernate bug   If Hibernate throws an exception due to flush(),   it actually HAS flushed, meaning that the database   was updated outside the transaction'
'SpringFramework','SpringFramework','SpringFramework','//  TODO verify remaining output for forms 5, 6, 7, 8, and 14 (fix whitespace)'
'SpringFramework','SpringFramework','SpringFramework','//  TODO should be able to make this assertion: need to fix target handling   in AdvisedSupport  assertEquals(target2, ((Advised) proxied).getTarget()); '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: shouldn\'t the wildcard lower the score?  \t\tassertEquals(-1,  \t\t\t\tcomparator.compare(parse("/hotels/new"), parse("/hotels/new.*"))); '
'SpringFramework','SpringFramework','SpringFramework','//  TODO this will currently map, would be nice for optimization  assertTrue(ajexp.matches(HasGeneric.class));  assertFalse(ajexp.matches(TestBean.class)); '
'SpringFramework','SpringFramework','SpringFramework',"//  Plain PersistenceException wrapper for underlying exception?   Make sure the nested exception message is properly exposed,   along the lines of Spring's NestedRuntimeException.getMessage() "
'SpringFramework','SpringFramework','SpringFramework','//  Open frame not sent yet?   If in the session initialization thread, then cache, otherwise wait. '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: remove reflection when build requires JDK 9+ '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: optimize '
'SpringFramework','SpringFramework','SpringFramework','//  TODO better exception handling '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: change to ByteBufferFeeder when supported by Jackson   See https://github.com/FasterXML/jackson-core/issues/478'
'SpringFramework','SpringFramework','SpringFramework',"//  Remove corresponding bean from singleton cache, if any. Shouldn't usually   be necessary, rather just meant for overriding a context's default beans "
'SpringFramework','SpringFramework','SpringFramework','//  It would be nice to partially match a path and get any bound variables in one step '
'SpringFramework','SpringFramework','SpringFramework','//  TODO -- this fails with NPE due to ArrayToObject converter - discuss with Andy  setValueExpectError("arrayContainer.doubles[1]", new ArrayList<String>());  setValueExpectError("arrayContainer.shorts[1]", new ArrayList<String>()); '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: make sure Callback is null '
'SpringFramework','SpringFramework','SpringFramework','//  TODO if you change type pattern from org.springframework.beans..*   to org.springframework..* it also matches introduction.   Perhaps generated advisor bean definition could be made to depend   on the introduction, in which case this would not be a problem.'
'SpringFramework','SpringFramework','SpringFramework','//  JSR-330 API not available - Provider interface simply not supported then. '
'SpringFramework','SpringFramework','SpringFramework','//  TODO document this behaviour. '
'SpringFramework','SpringFramework','SpringFramework',"//  We can optimize this because it's all new:   There is no replacement of existing property values. "
'SpringFramework','SpringFramework','SpringFramework','//  one error (should not include delimiter) '
'SpringFramework','SpringFramework','SpringFramework',"// bad method (too many args, doesn't obey class contract) "
'SpringFramework','SpringFramework','SpringFramework','//  TODO replace this check: no longer possible  assertEquals(advised.getTarget(), this); '
'SpringFramework','SpringFramework','SpringFramework','//  TODO this seems rather bogus, should we eagerly show an error? '
'SpringFramework','SpringFramework','SpringFramework','//  TODO is this caching safe - passing the expression around will mean this executor is also being passed around '
'SpringFramework','SpringFramework','SpringFramework','//  TODO possible optimization here if we cache the discovered type reference, but can we do that? '
'SpringFramework','SpringFramework','SpringFramework','// FIXME inline? '
'SpringFramework','SpringFramework','SpringFramework','//  TODO revisit performance if doing a lot of case insensitive matching'
'SpringFramework','SpringFramework','SpringFramework','//  TODO might want to control this behaviour...   Do we really want to call remove after a remote exception? '
'SpringFramework','SpringFramework','SpringFramework','//  TODO support multidimensional arrays   TODO support correct syntax for multidimensional [][][] and not [,,,]'
'SpringFramework','SpringFramework','SpringFramework','//  TODO used to catch UnknownAdviceTypeException, but   with CGLIB some errors are in proxy creation and are wrapped   in aspect exception. Error message is still fine.  assertTrue(ex.getMessage().indexOf("ntroduction") > -1);'
'SpringFramework','SpringFramework','SpringFramework','//  TODO: returns just 1 as of AspectJ 1.9 beta 3, not detecting the applicable lambda expression anymore   assertEquals(2, ctx.getBean(CountingAspect.class).count); '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: fix Reactor support '
'SpringFramework','SpringFramework','SpringFramework','//  TODO this looks like a serious issue (but not a new one): the context object against which arguments are evaluated seems wrong:  \t\tevaluate("{a:1,b:2,c:3,d:4,e:5,f:6,g:7,h:8,i:9,j:10}.?[isEven(value) == \'y\']", "[2, 4, 6, 8, 10]", ArrayList.class); '
'SpringFramework','SpringFramework','SpringFramework',"//  TODO: Why does this test fail? It hasn't been run before, so it maybe never actually passed... "
'SpringFramework','SpringFramework','SpringFramework','//  TODO: what does this mean? This method is not used in SpEL so probably ignorable? '
'SpringFramework','SpringFramework','SpringFramework','//  slight hack for Linux/Unix systems '
'SpringFramework','SpringFramework','SpringFramework','//  TODO fails due to conversionservice handling of String[] to Object...  \texpression = parser.parseExpression("#append2(#stringArray)"); '
'SpringFramework','SpringFramework','SpringFramework','//  TODO Determine why connectWithError() is unused. '
'SpringFramework','SpringFramework','SpringFramework',"//  We don't trust the JDBC driver: It might throw RuntimeException or Error. "
'SpringFramework','SpringFramework','SpringFramework','//  TODO Enable TestNG test with timeout once we have a solution.'
'SpringFramework','SpringFramework','SpringFramework','//  not implemented '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: Reactor usually times out on Windows ...'
'SpringFramework','SpringFramework','SpringFramework',"//  TODO: It's just an adapter but returning 0 might still have side effects... "
'SpringFramework','SpringFramework','SpringFramework','//  Bean Validation 2.0: currently not implemented here since it would imply   a hard dependency on the new javax.validation.ClockProvider interface.   To be resolved once Spring Framework requires Bean Validation 2.0+.   Obtain the native ValidatorFactory through unwrap(ValidatorFactory.class)   instead which will fully support a getClockProvider() call as well. '
'SpringFramework','SpringFramework','SpringFramework','//  TODO could do with more refactoring around argument handling and varargs '
'SpringFramework','SpringFramework','SpringFramework','/* \t * Further TODO for compilation:\t *\t * - OpMinus with a single literal operand could be treated as a negative literal. Will save a\t *   pointless loading of 0 and then a subtract instruction in code gen.\t * - allow other accessors/resolvers to participate in compilation and create their own code\t * - A TypeReference followed by (what ends up as) a static method invocation can really skip\t *   code gen for the TypeReference since once that is used to locate the method it is not\t *   used again.\t * - The opEq implementation is quite basic. It will compare numbers of the same type (allowing\t *   them to be their boxed or unboxed variants) or compare object references. It does not\t *   compile expressions where numbers are of different types or when objects implement\t *   Comparable.     *\t * Compiled nodes:\t *\t * TypeReference\t * OperatorInstanceOf\t * StringLiteral\t * NullLiteral\t * RealLiteral\t * IntLiteral\t * LongLiteral\t * BooleanLiteral\t * FloatLiteral\t * OpOr\t * OpAnd\t * OperatorNot\t * Ternary\t * Elvis\t * VariableReference\t * OpLt\t * OpLe\t * OpGt\t * OpGe\t * OpEq\t * OpNe\t * OpPlus\t * OpMinus\t * OpMultiply\t * OpDivide\t * MethodReference\t * PropertyOrFieldReference\t * Indexer\t * CompoundExpression\t * ConstructorReference\t * FunctionReference\t * InlineList\t * OpModulus\t *\t * Not yet compiled (some may never need to be):\t * Assign\t * BeanReference\t * Identifier\t * OpDec\t * OpBetween\t * OpMatches\t * OpPower\t * OpInc\t * Projection\t * QualifiedId\t * Selection\t  */'
'SpringFramework','SpringFramework','SpringFramework','//  TODO currently failing as with new ObjectToArray converter closest constructor '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: small memory optimization here (can skip creation for methods with no advice) '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: publisherToMono/CompletableFuture vs Single (ISE on multiple elements)? '
'SpringFramework','SpringFramework','SpringFramework','//  TODO currently failing since setValue does a getValue and "Wien" string != PlaceOfBirth - check with andy '
'SpringFramework','SpringFramework','SpringFramework','//  TODO Is the resolver/executor model too pervasive in this package? '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: refactor in AbstractBeanFactory (tests for AbstractBeanFactory) '
'SpringFramework','SpringFramework','SpringFramework','//  No implementation, just an addition of the tag interface StatefulJob   in order to allow stateful method invoking jobs. '
'SpringFramework','SpringFramework','SpringFramework','//  The target does not implement the hashCode() method itself. '
'SpringFramework','SpringFramework','SpringFramework','//  TODO possible optimization - only regex match if rest of pattern matches?   Benefit likely to vary pattern to pattern '
'SpringFramework','SpringFramework','SpringFramework','//  Not implemented '
'SpringFramework','SpringFramework','SpringFramework','//  The above result is likely to be incomplete, i.e. only containing file system references.   We need to have pointers to each of the jar files on the classpath as well... '
'SpringFramework','SpringFramework','SpringFramework','//  TODO need to make this conditionally occur based on a debug flag '
'SpringFramework','SpringFramework','SpringFramework','//  TODO: maybe try and detect this as a special case in parser? '
'SpringFramework','SpringFramework','SpringFramework','//  TODO what is the end position for a method reference? the name or the last arg? '
'SpringFramework','SpringFramework','SpringFramework',"//  This method may throw any BeansException, which won't be caught   here, if there is a critical failure such as no matching field.   We can attempt to deal only with less serious exceptions. "
'SpringFramework','SpringFramework','SpringFramework','//  TODO Do we need special handling when patterns contain multiple dots? '
'SpringFramework','SpringFramework','SpringFramework','//  ---- workaround ----'
'SpringFramework','SpringFramework','SpringFramework','//  TODO correct end position?'
'SpringFramework','SpringFramework','SpringFramework','//  TODO: Consider optimization by caching the list of the aspect names '
'SpringFramework','SpringFramework','SpringFramework','/* \t * Tomcat: ClientAbortException or EOFException\t * Jetty: EofException\t * WildFly, GlassFish: java.io.IOException "Broken pipe" (already covered)\t * <p>TODO:\t * This definition is currently duplicated between HttpWebHandlerAdapter\t * and AbstractSockJsSession. It is a candidate for a common utility class.\t * @see #indicatesDisconnectedClient(Throwable)\t  */'
'SpringFramework','SpringFramework','SpringFramework',"/*  * Tests for pooling invoker interceptor. * TODO: need to make these tests stronger: it's hard to * make too many assumptions about a pool. * * @author Rod Johnson * @author Rob Harrop * @author Chris Beams * @author Stephane Nicoll  */"
'SpringFramework','SpringFramework','SpringFramework',"//  This is a hack to be able to get the generated key from a database that doesn't support   get generated keys feature. HSQL is one, PostgreSQL is another. Postgres uses a RETURNING   clause while HSQL uses a second query that has to be executed with the same connection. "
'SpringFramework','SpringFramework','SpringFramework','//  TODO Fails related to conversion service converting a String[] to satisfy Object...  \t\texpression = parser.parseExpression("sixteen(stringArray)");  \t\tassertCantCompile(expression);  \t\texpression.getValue(tc);  \t\tassertEquals("aaabbbccc", tc.s);  \t\tassertCanCompile(expression);  \t\ttc.reset();  \t\texpression.getValue(tc);  \t\tassertEquals("aaabbbccc", tc.s);  \t\ttc.reset();'
'SpringFramework','SpringFramework','SpringFramework',"//  Can't clearly figure out exact method due to type converting / autowiring! "
'SpringFramework','SpringFramework','SpringFramework','//  Workaround  caching issue... '
'SpringFramework','SpringFramework','SpringFramework','//  JCA WorkManager resolved lazily - may not be available. '
'SpringFramework','SpringFramework','SpringFramework','//  TODO unable to build correct type descriptor '
'Storm','Storm','Storm','// TODO support multiple levels of includes '
'Storm','Storm','Storm','//  When all nimbodes go down and one or few of them come up   Unfortunately there might not be an exact way to know which one contains the most updated blob, '
'Storm','Storm','Storm','//  TODO: this assumes key is only from the one field   if not we need to have order of fields in PK '
'Storm','Storm','Storm','//  the following code is duplicated in the constructor of MqttPublisher   we reproduce it here so we fail on the client side if SSL is misconfigured, rather than when the topology   is deployed to the cluster '
'Storm','Storm','Storm','//  should remove the third blob, because the first has the reset timestamp '
'Storm','Storm','Storm',"//  Get rid of multiple '/' in url"
'Storm','Storm','Storm','//  Todo: Track file offsets instead of line number '
'Storm','Storm','Storm',"//  TODO support more configuration options, for now we're defaulting to the hbase-*.xml files found on the classpath "
'Storm','Storm','Storm','// This is a bit ugly, but it works.  In order to maintain the same directory structure that existed before   we need to have storm conf, storm jar, and storm code in a shared directory, and we need to set the   permissions for that entire directory, but the tracking is on a per item basis, so we are going to end   up running the permission modification code once for each blob that is downloaded (3 times in this case).   Because the permission modification code runs in a separate process we are doing a global lock to avoid   any races between multiple versions running at the same time.  Ideally this would be on a per topology   basis, but that is a lot harder and the changes run fairly quickly so it should not be a big deal. '
'Storm','Storm','Storm','// Could not find a "fully" compatible version.  Look to see if there is a possibly compatible version right below it '
'Storm','Storm','Storm','// ResourceUtils.java is not a available on the classpath to let us parse out the resources we want. '
'Storm','Storm','Storm',"//  Files/move with non-empty directory doesn't work well on Windows   This is not atomic but it does work "
'Storm','Storm','Storm','/*  Not thread safe. Have one instance per producer thread or synchronize externally  */'
'Storm','Storm','Storm','//  TODO substitution implementation is not exactly efficient or kind to memory... '
'Storm','Storm','Storm','// TODO need a better way to do this '
'Storm','Storm','Storm','//  TODO: Need to be able to set the tick tuple time to the message timeout, ideally without parameterization '
'Storm','Storm','Storm',"/*              * Connection is unavailable. We will drop pending messages and let at-least-once message replay kick in.             *             * Another option would be to buffer the messages in memory.  But this option has the risk of causing OOM errors,             * especially for topologies that disable message acking because we don't know whether the connection recovery will             * succeed  or not, and how long the recovery will take.              */"
'Storm','Storm','Storm','//  TODO add metrics'
'Storm','Storm','Storm','//  TODO: consider adding a shuffle grouping after the spout to avoid so much routing of the args/return-info all over the place   (at least until its possible to just pack bolt logic into the spout itself) '
'Storm','Storm','Storm','//  This is a hack for non-ras scheduler topology and worker resources '
'Storm','Storm','Storm','// TODO move this logic to the model class '
'Storm','Storm','Storm','// For some reason on the new code if ackers is null we get 0??? '
'Storm','Storm','Storm','// This is a bit of a hack.  If it is a list, then it is [component, stream]  we want to format this as component:stream '
'Storm','Storm','Storm',"// TODO: DRY this code up with what's in ChainedAggregatorImpl "
'Storm','Storm','Storm','//  should we fail the tuple or kill the worker? '
'Storm','Storm','Storm','// TODO streams should be uniquely identifiable '
'Storm','Storm','Storm','// TODO I would love to standardize this... '
'Storm','Storm','Storm','//  FIXME: This class can be moved to webapp once UI porting is done. '
'Storm','Storm','Storm',"//  This isn't strictly necessary, but it doesn't hurt and ensures that the machine stays up   to date even if callbacks don't all work exactly right "
'Storm','Storm','Storm','//  To work around it we should get it an alternative (working) way. '
'Storm','Storm','Storm','//  read s1 last....  This should cause s2 to be evicted on next put '
'Storm','Storm','Storm','//  TODO more collection content type checking '
'Storm','Storm','Storm',"//  FIXME: We're using default config since it cannot be serialized   We still needs to provide some options externally "
'Storm','Storm','Storm','// TODO this can only ever be null if someone is doing something odd with mocking   We should really fix the mocking and remove this '
'Storm','Storm','Storm','// TODO put in some better exception mapping...  TODO move populateContext to a filter... '
'Storm','Storm','Storm','//  should we fail the batch or kill the worker? '
'Storm','Storm','Storm','// Getting the exact response code is a bit more complex.  TODO should use a better client '
'Storm','Storm','Storm','//  TODO: de-duplicate this logic with the code in nimbus'
'Storm','Storm','Storm',"/*      * TODO: should worker even take the topologyId as input? this should be deducible from cluster state (by searching through assignments)     * what about if there's inconsistency in assignments? -> but nimbus should guarantee this consistency.     *     * @param conf           - Storm configuration     * @param context        -     * @param topologyId     - topology id     * @param assignmentId   - assignment id     * @param supervisorPort - parent supervisor thrift server port     * @param port           - port on which the worker runs     * @param workerId       - worker id      */"
'Storm','Storm','Storm','// This is a bit ugly, but it shows how this would happen in a worker so we will use the same APIs '
'Storm','Storm','Storm','//  FIXME: stores map (topoConf), topologyContext and expose these to derived classes '
'Storm','Storm','Storm',"// Original implementation doesn't actually check if delete succeeded or not. "
'Storm','Storm','Storm',"//  it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor. "
'Storm','Storm','Storm','// This is a bit ugly The JSON we are expecting should be in the form   {"component": {"resource": value, ...}, ...}   But because value is coming from JSON it is going to be a Number, and we want it to be a Double.   So the goal is to go through each entry and update it accordingly '
'Storm','Storm','Storm','// We may (though unlikely) lose metering here if state transition is too frequent (less than a millisecond) '
'Storm','Storm','Storm',"//  do we want to throw an exception if path doesn't exist?? "
'Storm','Storm','Storm','// TODO a better way to do this would be great. '
'Storm','Storm','Storm','// TODO in the future this might be better in a common webapp location '
'Storm','Storm','Storm','//  FIXME: it should be moved to storm-client when serialization-test.clj can be removed '
'Storm','Storm','Storm','// TODO figure out how we want to deal with overrides. Users may want to add streams even when overriding other   properties. For now we just add them blindly which could lead to a potentially invalid topology. '
'Storm','Storm','Storm','// More accurate that thread.sleep, but still not great '
'Storm','Storm','Storm','//  todo, ignore the master batch coordinator ? '
'Storm','Storm','Storm','// This test is rather ugly, but it is the only way to see if the error messages are working correctly. '
'Storm','Storm','Storm','//  TODO: need to be able to replace existing fields with the function fields (like Cascading Fields.REPLACE) '
'Storm','Storm','Storm','// TODO: wrap this to set the stream name '
'Storm','Storm','Storm',"// TODO: this isn't right... it's not in the map anymore "
'Storm','Storm','Storm','// TODO: add a method for drpc stream, needs to know how to automatically do return results, etc   is it too expensive to do a batch per drpc request? '
'Storm','Storm','Storm','// TODO: do the inner join incrementally, emitting the cross join with this tuple, against all other sides  TODO: only do cross join if at least one tuple in each side '
'Storm','Storm','Storm','// TODO once everything is in java this should not be possible any more '
'Storm','Storm','Storm','// heck for backward compatibility, we need to pass TOPOLOGY_AUTO_CREDENTIALS to hbase conf  the conf instance is instance of persistentMap so making a copy. '
'Storm','Storm','Storm','//  TODO: handle regular rich spout without batches (need lots of updates to support this throughout)'
'Storm','Storm','Storm','// This is a hack to allow ZooKeeperMain to be called by this command. '
'Storm','Storm','Storm','// Perhaps there is a better way to do this??? '
'Storm','Storm','Storm','//  TODO: can optimize further by only querying backing map for keys not in the cache '
'Storm','Storm','Storm','// TODO this is causing issues... '
'Storm','Storm','Storm','/*  TODO: need to invoke a hook provided by the topology, giving it a chance to create user resources.         * this would be part of the initialization hook         * need to separate workertopologycontext into WorkerContext and WorkerUserContext.         * actually just do it via interfaces. just need to make sure to hide setResource from tasks          */'
'Storm','Storm','Storm','/*  Not implemented  */'
'Storm','Storm','Storm','//  TODO: What would be a good test to ensure that RankableObjectWithFields is at least somewhat defensively copied? '
'Storm','Storm','Storm','//  TODO: in the future, want a way to include this logic in the spout itself,   or make it unnecessary by having storm include metadata about which grouping a tuple   came from '
'Storm','Storm','Storm','//  TODO: does this work well on windows? '
'Storm','Storm','Storm','// Not enough guaranteed use the age of the topology instead.  TODO need a good way to only do this once... '
'Storm','Storm','Storm','//  Use parseWithException instead of parse so we can capture deserialization errors in the log.   They are likely to be bugs in the spout code. '
'Storm','Storm','Storm','// TODO: add logging that not all tuples were received'
'Storm','Storm','Storm',"//  TODO: take away knowledge of storm's internals here "
'Storm','Storm','Storm',"// TODO we should handle '\\n'. ref DelimitedRecordFormat "
'Storm','Storm','Storm','/*  TODO: make sure test these two functions in manual tests  */'
'Storm','Storm','Storm','// TODO get this from type instead of hardcoding to Nimbus.  establish client-server transport via plugin '
'Storm','Storm','Storm','// There is a bug in some versions that returns 0 for the uptime. '
'Storm','Storm','Storm','//  need to set active false before calling onKill() - current implementation does not return. '
'Storm','Storm','Storm','// this is kind of unnecessary for clojure '
'Storm','Storm','Storm','//  TODO this class is reserved for supporting messages with different schemas.   current only one schema in the cache '
'Storm','Storm','Storm','//  -- bad files dir config '
'Storm','Storm','Storm','//  FIXME: we can filter by listKeys() with local blobstore when STORM-1986 is going to be resolved   as a workaround, we call getBlobMeta() for all keys '
'Storm','Storm','Storm','// 1 min.  This really means something is wrong.  Even on a very slow node '
'Storm','Storm','Storm','// TODO check for null grouping args '
'Storm','Storm','Storm','// TODO perhaps we can adjust the frequency later... '
'Storm','Storm','Storm','// re-establish connection to eventhub servers using the right offset  TBD: might be optimized with cache. '
'Storm','Storm','Storm','// TODO Handle the case where there may be no schema '
'Storm','Storm','Storm',"// It seems safer not to follow symlinks, since we don't expect them here "
'Storm','Storm','Storm',"//  this is because json doesn't allow numbers as keys...   TODO: replace json with a better form of encoding "
'Storm','Storm','Storm','//  Todo: optimize this computation... perhaps inner loop can be outside to avoid rescanning tuples '
'Storm','Storm','Storm','// Likely it is because of a bug, so try to get it another way '
'Tomcat','Tomcat','Tomcat',"//  Apache doesn't output an error message if it can't find   a program "
'Tomcat','Tomcat','Tomcat','//  from commons logging. This would be my number one reason why java.util.logging   is bad - design by committee can be really bad ! The impact on performance of   using java.util.logging - and the ugliness if you need to wrap it - is far   worse than the unfriendly and uncommon default format for logs. '
'Tomcat','Tomcat','Tomcat','// REMIND: rewrite multiple headers as if received as single  REMIND: change character set  REMIND: I forgot what the previous REMIND means '
'Tomcat','Tomcat','Tomcat','/*      * Wait for Acknowledgement from other server.     * FIXME Please, not wait only for three characters, better control that the wait ack message is correct.     * @throws IOException An IO error occurred      */'
'Tomcat','Tomcat','Tomcat','/*      * Convert to char[] and fill the CharChunk.     * XXX Not optimized - it converts to String first.      */'
'Tomcat','Tomcat','Tomcat','//  FIXME - behavior if already started? '
'Tomcat','Tomcat','Tomcat','//  TODO   - Should only use body encoding if useBodyEncodingForURI is true   - Otherwise, should use URIEncoding   - The problem is that the connector is not available...   - To add to the fun, the URI default changed in Servlet 4.0 to UTF-8 '
'Tomcat','Tomcat','Tomcat',"//  TODO: This isn't pretty but it works. Significant refactoring would         be required to avoid the exception. "
'Tomcat','Tomcat','Tomcat','/*  * A <b>Cluster </b> implementation using simple multicast. Responsible for * setting up a cluster and provides callers with a valid multicast * receiver/sender. * * FIXME wrote testcases * * @author Remy Maucherat * @author Peter Rossbach  */'
'Tomcat','Tomcat','Tomcat','/*      * This only works for tokens. Quoted strings need more sophisticated     * parsing.      */'
'Tomcat','Tomcat','Tomcat','/*  * This is a very basic ASN.1 parser that provides the limited functionality * required by Tomcat. It is a long way from a complete parser. * * TODO: Consider extending this parser and refactoring the SpnegoTokenFixer to *       use it.  */'
'Tomcat','Tomcat','Tomcat','//  XXX ENCODING - this only works if encoding is UTF8-compat   ( ok for tomcat, where we compare ascii - header names, etc )!!! '
'Tomcat','Tomcat','Tomcat','//  FIXME - should we validate the return type? '
'Tomcat','Tomcat','Tomcat','//  Only try to negotiate if both client and server have at least   one protocol in common   Note: Tomcat does not explicitly negotiate http/1.1   TODO: Is this correct? Should it change? '
'Tomcat','Tomcat','Tomcat','//  FIXME How inform other session id cache like SingleSignOn '
'Tomcat','Tomcat','Tomcat','/*          * Any call to this method is a result of a problem reading from the         * client. At this point that state of the connection is unknown.         * Attempt to send a close frame to the client and then close the socket         * immediately. There is no point in waiting for a close frame from the         * client because there is no guarantee that we can recover from         * whatever messed up state the client put the connection into.          */'
'Tomcat','Tomcat','Tomcat','//  FIXME At sender ack mode this method check only the state         transfer and resend is a problem! '
'Tomcat','Tomcat','Tomcat','//  If sessions already exist in DB, remove and insert again.   TODO:   * Check if ID exists in database and if so use UPDATE.'
'Tomcat','Tomcat','Tomcat',"//  Doesn't work on all platforms - see BZ 56448. "
'Tomcat','Tomcat','Tomcat','/*                      * FIXME: should probably be checking for things like                     * pageContext, bodyContent, and parent here -akv                      */'
'Tomcat','Tomcat','Tomcat','//  Calling code should ensure that there is no data in the buffers for   non-blocking writes.   TODO Validate the assertion above'
'Tomcat','Tomcat','Tomcat',"/*  I don't know how to evaluate this!  */"
'Tomcat','Tomcat','Tomcat','/*      * This method should only be called if there is no chance that the socket     * is currently being used by the Poller. It is generally a bad idea to call     * this directly from a known error condition.      */'
'Tomcat','Tomcat','Tomcat','//  XXX   making these absolute till we work out the   addition of a PathInfo issue '
'Tomcat','Tomcat','Tomcat','//  TODO: Do we need to think about precedence of the various ways         a lambda expression may be obtained from something that         the parser thinks is a function? '
'Tomcat','Tomcat','Tomcat','//  "surrogate" - UTF is _not_ 16 bit, but 21 !!!!   ( while UCS is 31 ). Amazing... '
'Tomcat','Tomcat','Tomcat','//  PROTOCOL_ERROR is probably better than GOING_AWAY here '
'Tomcat','Tomcat','Tomcat','//  XXX   should give more detail about the illegal argument '
'Tomcat','Tomcat','Tomcat','//  TODO URLs returned by the Jar abstraction may be of the form jar:jar:        which is not a URL that can be resolved by the JRE. This should        use the JarFactory to construct and return a valid InputSource. '
'Tomcat','Tomcat','Tomcat','//  TODO: Name validation takes place in Cookie and cannot be configured         per Context. Moving it to here would allow per Context config         but delay validation until the header is generated. However,         the spec requires an IllegalArgumentException on Cookie '
'Tomcat','Tomcat','Tomcat','//  Do not do this at home. The unconstrained buffer is a DoS risk. '
'Tomcat','Tomcat','Tomcat','//  Size is supposed to be 33 without huffman, or 27 with it   TODO: use the HpackHeaderFunction to enable huffman predictably '
'Tomcat','Tomcat','Tomcat','//  Stupid - this will set the default minfo first.... '
'Tomcat','Tomcat','Tomcat','//  Work around a problem with the URLs in the security policy file.   On Windows, the use of ${catalina.[home|base]} in the policy file   results in codebase URLs of the form file:C:/... when they should   be file:/C:/...   For file: and jar: URLs, the JRE compensates for this. It does not   compensate for this for war:file:... URLs. Therefore, we do that   here '
'Tomcat','Tomcat','Tomcat','//  The Range header is present but not formatted correctly.   Could argue for a 400 response but 416 is more specific.   There is also the option to ignore the (invalid) Range header.   RFC7233#4.4 notes that many servers do ignore the Range header in   these circumstances but Tomcat has always returned a 416. '
'Tomcat','Tomcat','Tomcat',"//  TODO: should we use the Ant Project's log? "
'Tomcat','Tomcat','Tomcat','//  TODO: Should the createWebResourceSet() methods be removed to some         utility class for file system based resource sets? '
'Tomcat','Tomcat','Tomcat',"// I'm not sure this is always exactly the same "
'Tomcat','Tomcat','Tomcat','/*  Initial size - should be == average number of headers per request     *  XXX  make it configurable ( fine-tuning of web-apps )      */'
'Tomcat','Tomcat','Tomcat','/*     * sendMessage    *    * @param data ChannelMessage    * @throws IOException    * TODO Implement this org.apache.catalina.tribes.transport.IDataSender method     */'
'Tomcat','Tomcat','Tomcat','/*      * Configure the connection pool to use a DataSource according to {@link PoolConfiguration#setDataSource(Object)}     * But instead of injecting the object, specify the JNDI location.     * After a successful JNDI look, the {@link PoolConfiguration#getDataSource()} will not return null.     * @param jndiDS -the JNDI string @TODO specify the rules here.      */'
'Tomcat','Tomcat','Tomcat','//  TODO: Find a better solution than this variable '
'Tomcat','Tomcat','Tomcat','// make an assumption that an empty response is a failure. This is   a problem   if a truly empty file '
'Tomcat','Tomcat','Tomcat','//  FIXME (if possible): Not available in the OpenSSL API '
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param <T> TODO     * @param t   TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','//  FIXME - log configuration problem '
'Tomcat','Tomcat','Tomcat','/*      * @return TODO     * @since Servlet 3.0 TODO SERVLET3 - Add comments      */'
'Tomcat','Tomcat','Tomcat','//  TODO: Tests for unexpected flags. Better located in tests for section 6? '
'Tomcat','Tomcat','Tomcat',"// There's no way to specify the century in SimpleDateFormat.  We don't want to hard-code  20 since this could be wrong for the pre-2000 files. "
'Tomcat','Tomcat','Tomcat','//  XXX Should be moved to embedded '
'Tomcat','Tomcat','Tomcat','// synchronize, big time FIXME '
'Tomcat','Tomcat','Tomcat','// todo implement  should only return keys where this is active. '
'Tomcat','Tomcat','Tomcat',"//  Socket write buffer is empty. Write the provided buffer directly   to the network.   TODO Shouldn't smaller writes be buffered anyway? "
'Tomcat','Tomcat','Tomcat',"//  XXX we shouldn't assume that the only kind of POST body   is FORM data encoded using ASCII or ISO Latin/1 ... or "
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param <T> TODO     * @param c   TODO     * @return TODO     * @throws ServletException TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','//  should notify pool of error so the pooled connection can   be removed !FIXME! '
'Tomcat','Tomcat','Tomcat','//  16 MB should be more than enough for Tomcat   TODO: Refactoring this entire class so it uses streaming rather than         buffering the entire set of files in memory would make it more         widely useful. '
'Tomcat','Tomcat','Tomcat',"//  The JDBC spec requires that a statement closes any open   ResultSet's when it is closed.   FIXME The PreparedStatement we're wrapping should handle this for us. "
'Tomcat','Tomcat','Tomcat',"//  This is a hack that won't work generally as servlets are expected to   handle more than one request. "
'Tomcat','Tomcat','Tomcat',"/*              * Error line number is delimited by set of colons.             * Ignore colon following drive letter on Windows (fromIndex = 2).             * XXX Handle deprecation warnings that don't have line info              */"
'Tomcat','Tomcat','Tomcat',"//  The JDBC spec requires that a statement close any open   ResultSet's when it is closed.   FIXME The PreparedStatement we're wrapping should handle this for us.   See DBCP-10 for what could happen when ResultSets are closed twice. "
'Tomcat','Tomcat','Tomcat','/*  * A message that represents a drawing action. * Note that we use primitive types instead of Point, Color etc. * to reduce object allocation.<br><br> * * TODO: But a Color objects needs to be created anyway for drawing this * onto a Graphics2D object, so this probably does not save much.  */'
'Tomcat','Tomcat','Tomcat','//  FIXME: Feature idea. Add support for patterns (ex: WEB-INF/*,          WEB-INF/*.xml), where we would only check if at least one          resource is newer than app.timestamp '
'Tomcat','Tomcat','Tomcat','// Jasper incorrectly SMAPs certain Nodes, giving them an  outputStartLine of 0.  This can cause a fatal error in  optimizeLineSection, making it impossible for Jasper to  compile the JSP.  Until we can fix the underlying'
'Tomcat','Tomcat','Tomcat','//  XXX TODO: Source code line length   XXX TODO: More JavaDoc   XXX Optional: Add support for com.sun.management specific mbean                 (http://docs.oracle.com/javase/7/docs/jre/api/management/extension/index.html)   XXX Optional: Wire additional public static methods implemented here                 to the manager (think about manager access roles!)                   setLoggerLevel(),                   setVerboseClassLoading(),                   setThreadContentionMonitoringEnabled(),                   setThreadCpuTimeEnabled(),                   resetPeakThreadCount(),                   setVerboseGarbageCollection()                   gc(),                   resetPeakUsage(),                   setUsageThreshold(),                   setCollectionUsageThreshold() '
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param className TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','//  XXX Group ?? Use Group + Type '
'Tomcat','Tomcat','Tomcat','//  Hack the output buffer to extend the EOS marker for the header value   by another byte '
'Tomcat','Tomcat','Tomcat','/*      * Get JMX Broadcaster Info     * FIXME: This two events we not send j2ee.state.failed and j2ee.attribute.changed!     * @see javax.management.NotificationBroadcaster#getNotificationInfo()      */'
'Tomcat','Tomcat','Tomcat','/*      * keepalive     *     * @return boolean     * TODO Implement this org.apache.catalina.tribes.transport.DataSender method      */'
'Tomcat','Tomcat','Tomcat','//  Has it been previously resolved? '
'Tomcat','Tomcat','Tomcat','//  TODO add other attributes'
'Tomcat','Tomcat','Tomcat','//  TODO: These certificate setters can be removed once it is no longer   necessary to support the old configuration attributes (Tomcat 10?). '
'Tomcat','Tomcat','Tomcat','/*      * memberAdded     *     * @param member Member     * TODO Implement this org.apache.catalina.tribes.MembershipListener     *   method      */'
'Tomcat','Tomcat','Tomcat','//  End of Tomcat specific hack '
'Tomcat','Tomcat','Tomcat','//  FIXME add Loader.getObjectName '
'Tomcat','Tomcat','Tomcat','//  TODO Figure out why non-blocking writes with the NIO connector appear '
'Tomcat','Tomcat','Tomcat','//               case 0 : // impossible, as excluded above   6 bits - ignore entirely   TODO not currently tested; perhaps it is impossible? '
'Tomcat','Tomcat','Tomcat','//  FIXME - should we do anything besides log these? '
'Tomcat','Tomcat','Tomcat','//  TODO: Add tests for the individual operators '
'Tomcat','Tomcat','Tomcat','//  XXX   warning: rather sticky code; heavily tuned '
'Tomcat','Tomcat','Tomcat','// NB:  Trailing whitespace on these header strings will just be discarded. '
'Tomcat','Tomcat','Tomcat','//  Assume the GSSContext is stateless   TODO: Confirm this assumption '
'Tomcat','Tomcat','Tomcat','/*      * Provide default configuration for a context. This is the programmatic     * equivalent of the default web.xml.     *     *  TODO: in normal Tomcat, if default-web.xml is not found, use this     *  method     *     * @param contextPath   The context to set the defaults for      */'
'Tomcat','Tomcat','Tomcat',"/*  * A smart implementation of a stateful replicated map. uses primary/secondary backup strategy. * One node is always the primary and one node is always the backup. * This map is synchronized across a cluster, and only has one backup member.<br> * A perfect usage for this map would be a session map for a session manager in a clustered environment.<br> * The only way to modify this list is to use the <code>put, putAll, remove</code> methods. * entrySet, entrySetFull, keySet, keySetFull, returns all non modifiable sets.<br><br> * If objects (values) in the map change without invoking <code>put()</code> or <code>remove()</code> * the data can be distributed using two different methods:<br> * <code>replicate(boolean)</code> and <code>replicate(Object, boolean)</code><br> * These two methods are very important two understand. The map can work with two set of value objects:<br> * 1. Serializable - the entire object gets serialized each time it is replicated<br> * 2. ReplicatedMapEntry - this interface allows for a isDirty() flag and to replicate diffs if desired.<br> * Implementing the <code>ReplicatedMapEntry</code> interface allows you to decide what objects * get replicated and how much data gets replicated each time.<br> * If you implement a smart AOP mechanism to detect changes in underlying objects, you can replicate * only those changes by implementing the ReplicatedMapEntry interface, and return true when isDiffable() * is invoked.<br><br> * * This map implementation doesn't have a background thread running to replicate changes. * If you do have changes without invoking put/remove then you need to invoke one of the following methods: * <ul> * <li><code>replicate(Object,boolean)</code> - replicates only the object that belongs to the key</li> * <li><code>replicate(boolean)</code> - Scans the entire map for changes and replicates data</li> *  </ul> * the <code>boolean</code> value in the <code>replicate</code> method used to decide * whether to only replicate objects that implement the <code>ReplicatedMapEntry</code> interface * or to replicate all objects. If an object doesn't implement the <code>ReplicatedMapEntry</code> interface * each time the object gets replicated the entire object gets serialized, hence a call to <code>replicate(true)</code> * will replicate all objects in this map that are using this node as primary. * * <br><br><b>REMEMBER TO CALL</b> <code>breakdown()</code> or <code>finalize()</code> when you are done with the map to * avoid memory leaks.<br><br> * TODO implement periodic sync/transfer thread * * @param <K> The type of Key * @param <V> The type of Value  */"
'Tomcat','Tomcat','Tomcat','//  FIXME : Facade this object ? '
'Tomcat','Tomcat','Tomcat','//  TODO - Various, icon, description etc elements are skipped - mainly          because they are ignored when web.xml is parsed - see above '
'Tomcat','Tomcat','Tomcat','/*      * Load sessions from other cluster node.     * FIXME replace currently sessions with same id without notification.     * FIXME SSO handling is not really correct with the session replacement!     * @param data Serialized data     * @exception ClassNotFoundException     *                if a serialized class cannot be found during the reload     * @exception IOException     *                if an input/output error occurs      */'
'Tomcat','Tomcat','Tomcat','//  Not strictly true but enables us to report both '
'Tomcat','Tomcat','Tomcat','// XXX Please check. '
'Tomcat','Tomcat','Tomcat','/*      * disconnect     *     * TODO Implement this org.apache.catalina.tribes.transport.IDataSender method      */'
'Tomcat','Tomcat','Tomcat','/*      * Convert string to datatype FIXME How we can transfer values from ant     * project reference store (ref)?     *     * @param value The value     * @param valueType The type     * @return The converted object      */'
'Tomcat','Tomcat','Tomcat',"//  it is also possible that the user modified jre/lib/logging.properties -   but that's really stupid in most cases "
'Tomcat','Tomcat','Tomcat','// always disconnect UDP, TODO optimize the keepalive handling '
'Tomcat','Tomcat','Tomcat','//  -------------------- Additional methods --------------------   XXX What do we do about charset ???? '
'Tomcat','Tomcat','Tomcat',"//  This isn't good. "
'Tomcat','Tomcat','Tomcat','//  Hack to work-around JarInputStream swallowing these   entries. TomcatJarInputStream is used above which   extends JarInputStream and the method that creates   the entries over-ridden so we can a) tell if the   entries are present and b) cache them so we can   access them here. '
'Tomcat','Tomcat','Tomcat','//  Not ideal. This will indicate that data is available   which should trigger a read which in turn will trigger   another IOException and that one can be thrown. '
'Tomcat','Tomcat','Tomcat','//  TODO: description (multiple with language) is ignored '
'Tomcat','Tomcat','Tomcat','//  Hack (?) to get the stack trace. '
'Tomcat','Tomcat','Tomcat','//  servlet   TODO: description (multiple with language) is ignored   TODO: display-name (multiple with language) is ignored   TODO: icon (multiple) is ignored   TODO: init-param/description (multiple with language) is ignored '
'Tomcat','Tomcat','Tomcat','//  FIXME this stats update are not cheap!! '
'Tomcat','Tomcat','Tomcat','//  NamingManager.getObjectInstance would simply return the reference here   Use the configured object factory to resolve it directly if possible   Note: This may need manual constructor reflection configuration '
'Tomcat','Tomcat','Tomcat','//  This is the hard-coded default - ignore the call '
'Tomcat','Tomcat','Tomcat','//  XXX Should be moved to embedded ! '
'Tomcat','Tomcat','Tomcat','/*      * Returns the contents of the file as a String, using the default     * character encoding.  This method uses {@link #get()} to retrieve the     * contents of the file.     *     * <b>TODO</b> Consider making this method throw UnsupportedEncodingException.     *     * @return The contents of the file, as a string.      */'
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param wrapped The request to compare to the wrapped request     * @return <code>true</code> if the request wrapped by this wrapper (or     *         series of wrappers) is the same as the supplied request,     *         otherwise <code>false</code>     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','/*  Get JMX Broadcaster Info     * @TODO use StringManager for international support!     * @TODO This two events we not send j2ee.state.failed and j2ee.attribute.changed!     * @see javax.management.NotificationBroadcaster#getNotificationInfo()      */'
'Tomcat','Tomcat','Tomcat','//  Close the socket, as the response would be incomplete '
'Tomcat','Tomcat','Tomcat','/*      * memberDisappeared     *     * @param member Member     * TODO Implement this org.apache.catalina.tribes.MembershipListener     *   method      */'
'Tomcat','Tomcat','Tomcat','//  FIXME - currently this removes *all* notifications for this listener '
'Tomcat','Tomcat','Tomcat','/*      * process filter annotation and merge with existing one!     * FIXME: refactoring method too long and has redundant subroutines with     *        processAnnotationWebServlet!     * @param className The filter class name     * @param ae The filter annotation     * @param fragment The corresponding fragment      */'
'Tomcat','Tomcat','Tomcat',"//  FIXME - It is tempting to use request.getRequestDispatcher() to   resolve a relative path directly, but Catalina currently does not   take into account whether the caller is inside a RequestDispatcher   include or not.  Whether Catalina *should* take that into account   is a spec issue currently under review.  In the mean time,   replicate Jasper's previous behavior "
'Tomcat','Tomcat','Tomcat','// todo, implement a counter variable instead  only count active members in this node '
'Tomcat','Tomcat','Tomcat','// FIXME ? '
'Tomcat','Tomcat','Tomcat','//  TODO: Async requests may trigger multiple replication requests. How,         if at all, should the stats handle this? '
'Tomcat','Tomcat','Tomcat','//  TODO Consider changing this to a single property for 3.x '
'Tomcat','Tomcat','Tomcat',"//  The JDBC spec requires that a statement close any open   ResultSet's when it is closed.   FIXME The PreparedStatement we're wrapping should handle this for us.   See bug 17301 for what could happen when ResultSets are closed twice. "
'Tomcat','Tomcat','Tomcat','/*      * @return TODO     * @throws IllegalStateException If async is not supported for this request     * @since Servlet 3.0 TODO SERVLET3 - Add comments      */'
'Tomcat','Tomcat','Tomcat',"/*      * This is a hack.     * We need to use streaming to avoid OOME on large uploads.     * We'd like to use Authenticator.setDefault() for authentication as the JRE     * then provides the DIGEST client implementation.     * However, the above two are not compatible. When the request is made, the     * resulting 401 triggers an exception because, when using streams, the     * InputStream is no longer available to send with the repeated request that     * now includes the appropriate Authorization header.     * The hack is to make a simple OPTIONS request- i.e. without a request     * body.     * This triggers authentication and the requirement to authenticate for this     * host is cached and used to provide an appropriate Authorization when the     * next request is made (that includes a request body).      */"
'Tomcat','Tomcat','Tomcat',"//  XXX - A possible optimization here would be to check to see   if the only child of the parent node is TemplateText. If so,   we know there won't be any parameters, etc, so we can   generate a low-overhead JspFragment that just echoes its   body. The implementation of this fragment can come from "
'Tomcat','Tomcat','Tomcat','//  FIXME: the regular processor syncs on socketWrapper, but here this deadlocks '
'Tomcat','Tomcat','Tomcat','/*      * connect     *     * @throws IOException     * TODO Implement this org.apache.catalina.tribes.transport.DataSender method      */'
'Tomcat','Tomcat','Tomcat','//  TODO: The method should already be accessible here but the following   code seems to be necessary in some as yet not fully understood cases. '
'Tomcat','Tomcat','Tomcat','//  Conversion often results fewer/more/different bytes.   That does not play nicely with range requests. '
'Tomcat','Tomcat','Tomcat',"/*      * TODO: would a properties resource be better ? Or just parsing     * /etc/mime.types ?     * This is needed because we don't use the default web.xml, where this     * is encoded.      */"
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param <T> TODO     * @param c   TODO     * @return TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @throws ServletException TODO     * @since Servlet 3.      */'
'Tomcat','Tomcat','Tomcat','//  TODO: this matches the current implementation but the URL logic looks fishy   map URI to location per JSP 7.3.6.2 '
'Tomcat','Tomcat','Tomcat','//  XXX - We use a proprietary call to the interpreter for now   as the current standard machinery is inefficient and requires   lots of wrappers and adapters. This should all clear up once   the EL interpreter moves out of JSTL and into its own project.   In the future, this should be replaced by code that calls   ExpressionEvaluator.parseExpression() and then cache the resulting   expression objects. The interpreterCall would simply select   one of the pre-cached expressions and evaluate it.   Note that PageContextImpl implements VariableResolver and   the generated Servlet/SimpleTag implements FunctionMapper, so   that machinery is already in place (mroth). '
'Tomcat','Tomcat','Tomcat','//  Note this is a hack since nextChar only returns a single char   It is safe since <% does not require special treatment for EL   or for literals '
'Tomcat','Tomcat','Tomcat','/*      * @return TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     *     * @since Servlet 3.0 TODO SERVLET3 - Add comments      */'
'Tomcat','Tomcat','Tomcat','//  TODO add other attributes   TODO encapsulate state and other attribute display in parent '
'Tomcat','Tomcat','Tomcat','//  FIXME we have a lot of sends, but the trouble with one node stops the correct replication to other nodes! '
'Tomcat','Tomcat','Tomcat','//  XXX to implement '
'Tomcat','Tomcat','Tomcat','// FIXME check url or host/parameter '
'Tomcat','Tomcat','Tomcat','//  TODO: Can this limitation be removed? '
'Tomcat','Tomcat','Tomcat','//  FIXME better is to grap this sessions again ! '
'Tomcat','Tomcat','Tomcat','/*          * The test below deliberately uses != to compare two Strings. This is         * because the code is looking to see if the default character encoding         * has been returned because no explicit character encoding has been         * defined. There is no clean way of doing this via the Servlet API. It         * would be possible to add a Tomcat specific API but that would require         * quite a bit of code to get to the Tomcat specific request object that         * may have been wrapped. The != test is a (slightly hacky) quick way of         * doing this.          */'
'Tomcat','Tomcat','Tomcat','//  XXX - Actually there is no need to declare those   "_jspx_" + varName + "_" + nestingLevel variables when we are   inside a JspFragment. '
'Tomcat','Tomcat','Tomcat','//  XXX - Fixed a bug here - width and height can be set   dynamically. Double-check if this generation is correct. '
'Tomcat','Tomcat','Tomcat','//  Ugly but the easiest way to test of the session is valid or not '
'Tomcat','Tomcat','Tomcat','//  TODO: lazy init for the temp dir - only when a JSP is compiled or   get temp dir is called we need to create it. This will avoid the   need for the baseDir '
'Tomcat','Tomcat','Tomcat','// were using a shared channel, document says its thread safe  TODO check optimization, one channel per thread? '
'Tomcat','Tomcat','Tomcat','//  FIXME: Older spec revisions may still check this '
'Tomcat','Tomcat','Tomcat','/*      * connect - blocking in this operation     *     * @throws IOException     * TODO Implement this org.apache.catalina.tribes.transport.IDataSender method      */'
'Tomcat','Tomcat','Tomcat','//  XXX   should a length of 0 be an IllegalArgumentException'
'Tomcat','Tomcat','Tomcat','//  TODO Add a new state to the AsyncStateMachine and remove        ASYNC_END (if possible)'
'Tomcat','Tomcat','Tomcat','//  Note: Hard-coded domain used since this object is per Server/JVM '
'Tomcat','Tomcat','Tomcat','//  TODO - May need to add code here once additional   states are used'
'Tomcat','Tomcat','Tomcat',"/*  * Changes from commons.modeler: * *  - use DynamicMBean *  - remove methods not used in tomcat and redundant/not very generic *  - must be created from the ManagedBean - I don't think there were any direct *    uses, but now it is required. *  - some of the gratuitous flexibility removed - instead this is more predictive and *    strict with the use cases. *  - all Method and metadata is stored in ManagedBean. BaseModelBMean and ManagedBean act *    like Object and Class. *  - setModelMBean is no longer called on resources ( not used in tomcat ) *  - no caching of Methods for now - operations and setters are not called repeatedly in most *  management use cases. Getters shouldn't be called very frequently either - and even if they *  are, the overhead of getting the method should be small compared with other JMX costs ( RMI, etc ). *  We can add getter cache if needed. *  - removed unused constructor, fields * *  TODO: *   - clean up catalina.mbeans, stop using weird inheritance  */"
'Tomcat','Tomcat','Tomcat','//  Number of tries is the number of attempts to connect to the database   during this login attempt (if we need to open the database)   This needs rewritten wuth better pooling support, the existing code   needs signature changes since the Prepared statements needs cached   with the connections.   The code below will try twice if there is an SQLException so the   connection may try to be opened again. On normal conditions (including '
'Tomcat','Tomcat','Tomcat','/*      * The player that is associated with this Endpoint and the current room.     * Note that this variable is only accessed from the Room Thread.<br><br>     *     * TODO: Currently, Tomcat uses an Endpoint instance once - however     * the java doc of endpoint says:     * "Each instance of a websocket endpoint is guaranteed not to be called by     * more than one thread at a time per active connection."     * This could mean that after calling onClose(), the instance     * could be reused for another connection so onOpen() will get called     * (possibly from another thread).<br>     * If this is the case, we would need a variable holder for the variables     * that are accessed by the Room thread, and read the reference to the holder     * at the beginning of onOpen, onMessage, onClose methods to ensure the room     * thread always gets the correct instance of the variable holder.      */'
'Tomcat','Tomcat','Tomcat','//  TODO could be simplified if there is no requirement to reject invalid line sep when length <=0 '
'Tomcat','Tomcat','Tomcat','//  TLS 1.0 needs additional handling   TODO Figure out why this is necessary and if a simpler / better '
'Tomcat','Tomcat','Tomcat','//  This method is deprecated and for good reason. This   is very risky code but is the only option at this   point. A *very* good reason for apps to do this   clean-up themselves. '
'Tomcat','Tomcat','Tomcat','/*      * Class name of the generated file ( without package ).     * Can only be used if a single file is converted.     * XXX Do we need this feature ?     * @param p New value      */'
'Tomcat','Tomcat','Tomcat','//  TODO: Should support multiple icon elements ??? '
'Tomcat','Tomcat','Tomcat','//  hack fix for resolveRelativeURI '
'Tomcat','Tomcat','Tomcat',"//  '*' has been added without removing other values. Optimise. "
'Tomcat','Tomcat','Tomcat',"/*      * TODO: Add support for more efficient bulk operations.     *     * We don't want to acquire the lock for every iteration, but we     * also want other threads a chance to interact with the     * collection, especially when count is close to capacity.      */"
'Tomcat','Tomcat','Tomcat',"/*      * XXX Find if the 'className' is the name of the MBean or     *       the real class ( I suppose first )     * XXX Read (optional) descriptions from a .properties, generated     *       from source     * XXX Deal with constructors     *     * @param registry The Bean registry (not used)     * @param domain The bean domain (not used)     * @param realClass The class to analyze     * @param type The bean type     * @return ManagedBean The create MBean      */"
'Tomcat','Tomcat','Tomcat','//  FIXME - Accessible methods in superinterfaces? '
'Tomcat','Tomcat','Tomcat','//    XXX NOTE: This is clearly incorrect for many strings,   but is the only consistent approach within the current   servlet framework. It must suffice until servlet output   streams properly encode their output.     high order byte must be zero '
'Tomcat','Tomcat','Tomcat','//  Warning: JSP attribute escaping != Java String escaping   TODO - Currently we allow a single unescaped \\ in attribute values '
'Tomcat','Tomcat','Tomcat','//  FIXME: Strange why servletDef is Boolean and FilterDef is String? '
'Tomcat','Tomcat','Tomcat','//  Workaround for certain files on platforms that use   EBCDIC encoding, when they are read through FileInputStream.   See commit message of rev.303915 for original details   https://svn.apache.org/viewvc?view=revision&revision=303915 '
'Tomcat','Tomcat','Tomcat','//  Nasty - instrument PooledConnection to drive time measurement instead of hard-coded System.currentTimeMillis() '
'Tomcat','Tomcat','Tomcat',"//  Hack via a static since we can't pass an instance in the test. "
'Tomcat','Tomcat','Tomcat','/*              * REMIND:  this method feels too big; should it be re-written?              */'
'Tomcat','Tomcat','Tomcat','/*  * @since Servlet 3.0 * TODO SERVLET3 - Add comments  */'
'Tomcat','Tomcat','Tomcat','//  TODO: This certificate setter can be removed once it is no longer   necessary to support the old configuration attributes (Tomcat 10?).'
'Tomcat','Tomcat','Tomcat','//  XXX Not sure whether the following MBeans should better   be retrieved on demand, i.e. whether they can change   dynamically in the MBeanServer. '
'Tomcat','Tomcat','Tomcat','/*      * Checks to see if there are any writes pending and if there are calls     * {@link #registerWriteInterest()} to trigger a callback once the pending     * writes have completed.     * <p>     * Note: Once this method has returned <code>false</code> it <b>MUST NOT</b>     *       be called again until the pending write has completed and the     *       callback has been fired.     *       TODO: Modify {@link #registerWriteInterest()} so the above     *       restriction is enforced there rather than relying on the caller.     *     * @return <code>true</code> if no writes are pending and data can be     *         written otherwise <code>false</code>      */'
'Tomcat','Tomcat','Tomcat','//  TODO Move this validation to the parsing stage'
'Tomcat','Tomcat','Tomcat','/*      * @param servletRequest    The ServletRequest with which to initialise the     *                          asynchronous context     * @param servletResponse   The ServletResponse with which to initialise the     *                          asynchronous context     * @return TODO     * @throws IllegalStateException If async is not supported for this request     * @since Servlet 3.0 TODO SERVLET3 - Add comments      */'
'Tomcat','Tomcat','Tomcat',"//  TODO: I'm not entirely sure when onError should be called "
'Tomcat','Tomcat','Tomcat','/*      * Add a context - programmatic mode, no default web.xml used. This means     * that there is no JSP support (no JSP servlet), no default servlet and     * no web socket support unless explicitly enabled via the programmatic     * interface. There is also no     * {@link javax.servlet.ServletContainerInitializer} processing and no     * annotation processing. If a     * {@link javax.servlet.ServletContainerInitializer} is added     * programmatically, there will still be no scanning for     * {@link javax.servlet.annotation.HandlesTypes} matches.     *     * <p>     * API calls equivalent with web.xml:     *     * <pre>{@code     *  // context-param     *  ctx.addParameter("name", "value");     *     *     *  // error-page     *  ErrorPage ep = new ErrorPage();     *  ep.setErrorCode(500);     *  ep.setLocation("/error.html");     *  ctx.addErrorPage(ep);     *     *  ctx.addMimeMapping("ext", "type");     * }</pre>     *     *     * <p>     * Note: If you reload the Context, all your configuration will be lost. If     * you need reload support, consider using a LifecycleListener to provide     * your configuration.     *     * <p>     * TODO: add the rest     *     * @param contextPath The context mapping to use, "" for root context.     * @param docBase Base directory for the context, for static files.     *  Must exist, relative to the server home     * @return the deployed context      */'
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param filterName TODO     * @return TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','//  TODO: Remove the internal representation and use Ranges'
'Tomcat','Tomcat','Tomcat','/*      * Indicate whether the session has been idle for longer     * than its expiration date as of the supplied time.     *     * FIXME: Probably belongs in the Session class.     * @param session The session to check     * @param timeNow The current time to check for     * @return <code>true</code> if the session is past its expiration      */'
'Tomcat','Tomcat','Tomcat','/*      * Proprietary method to evaluate EL expressions. XXX - This method should     * go away once the EL interpreter moves out of JSTL and into its own     * project. For now, this is necessary because the standard machinery is too     * slow.     *     * @param expression     *            The expression to be evaluated     * @param expectedType     *            The expected resulting type     * @param pageContext     *            The page context     * @param functionMap     *            Maps prefix and name to Method     * @return The result of the evaluation     * @throws ELException If an error occurs during the evaluation      */'
'Tomcat','Tomcat','Tomcat','//  FIXME : Removing status pages '
'Tomcat','Tomcat','Tomcat',"/*  Destroy needs to clean up the context completely.     *     * The problem is that undoing all the config in start() and restoring     * a 'fresh' state is impossible. After stop()/destroy()/init()/start()     * we should have the same state as if a fresh start was done - i.e     * read modified web.xml, etc. This can only be done by completely     * removing the context object and remapping a new one, or by cleaning     * up everything.     *     * XXX Should this be done in stop() ?     *      */"
'Tomcat','Tomcat','Tomcat','//  filter   TODO: Should support multiple description elements with language   TODO: Should support multiple display-name elements with language   TODO: Should support multiple icon elements '
'Tomcat','Tomcat','Tomcat','// todo, optimize, if destination.length==1, then we can do  msg.setOptions(msg.getOptions() & (~getOptionFlag())  and just send one message'
'Tomcat','Tomcat','Tomcat',"//  This is not optimal, but as this is not very common, it   shouldn't matter "
'Tomcat','Tomcat','Tomcat','//  XXX - Another possible optimization would be for   lone EL expressions (no need to pushBody here either). '
'Tomcat','Tomcat','Tomcat',"//  TODO:   OpenSSL 1.0.2's ALPN callback doesn't support   failing the handshake with an error if no   protocol can be negotiated. Therefore, we need to   fail the connection here. Once this is fixed,   replace the code below with the commented out   block. "
'Tomcat','Tomcat','Tomcat','//  FIXME - should we use the signature from opInfo? '
'Tomcat','Tomcat','Tomcat','/*      * @return TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0 TODO SERVLET3 - Add comments      */'
'Tomcat','Tomcat','Tomcat','//  Read the body - quick and dirty '
'Tomcat','Tomcat','Tomcat','//  FIXME: Exception handling needs to be similar to what is in the StandardWrapperValue '
'Tomcat','Tomcat','Tomcat','// TODO: figure out a good value for this '
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param wrappedType The class to compare to the class of the wrapped     *                    response     * @return <code>true</code> if the response wrapped by this wrapper (or     *         series of wrappers) is the same type as the supplied type,     *         otherwise <code>false</code>     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','/*  * Implementation of SSLSupport for APR. * <p> * TODO: Add a mechanism (or figure out how to use what we already have) to *       invalidate the session.  */'
'Tomcat','Tomcat','Tomcat','//  FIXME: Smarter algorithm (LRU) '
'Tomcat','Tomcat','Tomcat','//  FIXME: Review lowercase policy '
'Tomcat','Tomcat','Tomcat','//  Note: This could be more efficient with a dedicated Mapper         method but such an implementation would require some         refactoring of the Mapper to avoid copy/paste of         existing code. '
'Tomcat','Tomcat','Tomcat','/*      * Note: The statistics are volatile to ensure the concurrent updates do not     *       corrupt them but it is still possible that:     *       - some updates may be lost;     *       - the individual statistics may not be consistent which each other.     *       This is a deliberate design choice to reduce the requirement for     *       synchronization.      */'
'Tomcat','Tomcat','Tomcat','//  TODO: Review this in light of HTTP/2 '
'Tomcat','Tomcat','Tomcat',"//  This isn't perfect but it is a reasonable guess for the size of the "
'Tomcat','Tomcat','Tomcat','/*  * TODO SERVLET3 - Add comments * @since Servlet 3.0  */'
'Tomcat','Tomcat','Tomcat','//  Going to have to have some casts /raw types somewhere so doing it here   keeps them all in one place. There might be a neater / better solution '
'Tomcat','Tomcat','Tomcat','/*      * Filter out the default watched resources, to remove standard ones.     *     * @param context The context instance     * @param wresources The raw watched resources list     * @return The filtered watched resources     * @throws Exception Configuration storing error     * TODO relative watched resources     * TODO absolute handling configFile     * TODO Filename case handling for Windows?     * TODO digester variable substitution $catalina.base, $catalina.home      */'
'Tomcat','Tomcat','Tomcat','//  Unsupported transfer encoding   501 - Unimplemented '
'Tomcat','Tomcat','Tomcat',"//  NOTE: We don't try to reauthenticate using any existing SSO session,   because that will only work if the original authentication was   BASIC or FORM, which are less secure than the CLIENT-CERT auth-type   specified for this webapp     Change to true below to allow previous FORM or BASIC authentications   to authenticate users for this webapp   TODO make this a configurable attribute (in SingleSignOn??)"
'Tomcat','Tomcat','Tomcat','//  service-ref   TODO: Should support multiple description elements with language   TODO: Should support multiple display-names elements with language '
'Tomcat','Tomcat','Tomcat','/*          * Not thread-safe. OK for this test. NOt OK for use in the real world.          */'
'Tomcat','Tomcat','Tomcat','//  @TODO is this case possible? '
'Tomcat','Tomcat','Tomcat','//  If the only body element for this named attribute node is   template text, we need not generate an extra call to   pushBody and popBody. Maybe we can further optimize   here by getting rid of the temporary variable, but in   reality it looks like javac does this for us. '
'Tomcat','Tomcat','Tomcat','//  No listener called dispatch() or complete(). This is an error.   SRV.2.3.3.3 (search for "error dispatch")   Take a local copy to avoid threading issues if another thread   clears this (can happen during error handling with non-container   threads) '
'Tomcat','Tomcat','Tomcat','//  FIXME - add instance if already started? '
'Tomcat','Tomcat','Tomcat','//  TODO - Should never happen'
'Tomcat','Tomcat','Tomcat','// TODO this operation is not thread safe '
'Tomcat','Tomcat','Tomcat','//  ignored TODO perhaps add to tracker delete failure list somehow? '
'Tomcat','Tomcat','Tomcat','//  Note this is a hack since nextChar only returns a single char   It is safe since %> does not require special treatment for EL   or for literals '
'Tomcat','Tomcat','Tomcat','/*          * Temporary hack. If a JSP page uses the "extends" attribute of the         * page directive, the _jspInit() method of the generated servlet class         * will not be called (it is only called for those generated servlets         * that extend HttpJspBase, the default), causing the tag handler pools         * not to be initialized and resulting in a NPE. The JSP spec needs to         * clarify whether containers can override init() and destroy(). For         * now, we just disable tag pooling for pages that use "extends".          */'
'Tomcat','Tomcat','Tomcat',"//  test cases but I'm not sure? "
'Tomcat','Tomcat','Tomcat','//  Order is NOT important at this point. It is checked below. '
'Tomcat','Tomcat','Tomcat','//  TODO Investigate why this test fails '
'Tomcat','Tomcat','Tomcat','//  This method is deprecated and for good reason. This is   very risky code but is the only option at this point.   A *very* good reason for apps to do this clean-up   themselves. '
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param wrapped The response to compare to the wrapped response     * @return <code>true</code> if the response wrapped by this wrapper (or     *         series of wrappers) is the same as the supplied response,     *         otherwise <code>false</code>     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','//  TODO: All of these SSL getters and setters can be removed once it is no   longer necessary to support the old configuration attributes (Tomcat 10?) '
'Tomcat','Tomcat','Tomcat','//  Not thread safe. Accept that there may be multiple evaluations. '
'Tomcat','Tomcat','Tomcat','//  FIXME handle EVT_GET_ALL_SESSIONS later '
'Tomcat','Tomcat','Tomcat','/*      * Generate a real default StandardContext TODO read and interpret the     * default context.xml and context.xml.default TODO Cache a Default     * StandardContext ( with reloading strategy) TODO remove really all     * elements, but detection is hard... To Listener or Valve from same class?     *     * @see org.apache.catalina.storeconfig.StoreAppender#defaultInstance(java.lang.Object)      */'
'Tomcat','Tomcat','Tomcat','//  Not implemented '
'Tomcat','Tomcat','Tomcat',"/*  *  Memory-efficient repository for Mime Headers. When the object is recycled, it *  will keep the allocated headers[] and all the MimeHeaderField - no GC is generated. * *  For input headers it is possible to use the MessageByte for Fields - so no GC *  will be generated. * *  The only garbage is generated when using the String for header names/values - *  this can't be avoided when the servlet calls header methods, but is easy *  to avoid inside tomcat. The goal is to use _only_ MessageByte-based Fields, *  and reduce to 0 the memory overhead of tomcat. * *  TODO: *  XXX one-buffer parsing - for http ( other protocols don't need that ) *  XXX remove unused methods *  XXX External enumerations, with 0 GC. *  XXX use HeaderName ID * * * @author dac@eng.sun.com * @author James Todd [gonzo@eng.sun.com] * @author Costin Manolache * @author kevin seguin  */"
'Tomcat','Tomcat','Tomcat','//  ThreadPoolExecutor.setCorePoolSize checks that   remainingCapacity==0 to allow to interrupt idle threads   I don\'t see why, but this hack allows to conform to this   "requirement" '
'Tomcat','Tomcat','Tomcat',"//  Purely for debug purposes. May not be complete or correct. Certainly   is not efficient. Be sure not to call this from 'real' code. "
'Tomcat','Tomcat','Tomcat',"//  Message could not be sent. In this case, we don't   set isSendingMessage to false because we must assume the connection   broke (and onClose will be called), so we don't try to send   other messages.   As a precaution, we close the session (e.g. if a send timeout occurred).   TODO: session.close() blocks, while this handler shouldn't block.   Ideally, there should be some abort() method that cancels the   connection immediately... "
'Tomcat','Tomcat','Tomcat','//  UCS-4, unusual octet order (3412)   REVISIT: What should this be? '
'Tomcat','Tomcat','Tomcat',"//  Really need to unload the old class but can't do that. Do   the next best thing which is throw away the JspLoader so   a new loader will be created which will load the new   class.   TODO Are there inefficiencies between reload and the        isOutDated() check? "
'Tomcat','Tomcat','Tomcat','//  XXX   need to be more specific about illegal arg '
'Tomcat','Tomcat','Tomcat','//  This differs from LogManager#resetLogger() in that we close not all   handlers of all loggers, but only those that are present in our   ClassLoaderLogInfo#handlers list. That is because our #addLogger(..)   method can use handlers from the parent class loaders, and closing   handlers that the current class loader does not own would be not   good. '
'Tomcat','Tomcat','Tomcat','//  display-name - TODO should support multiple with language '
'Tomcat','Tomcat','Tomcat','//  XXX Not sure if we can eliminate dead codes after this. '
'Tomcat','Tomcat','Tomcat','//  message-destination   TODO: Should support multiple description elements with language   TODO: Should support multiple display-names elements with language '
'Tomcat','Tomcat','Tomcat','//  The legacy code (dating down at least to Tomcat 4.1) just   skipped all mapping work in this case. That behaviour has a risk   of returning an inconsistent result.   I do not see a valid use case for it. '
'Tomcat','Tomcat','Tomcat','//  XXX works only for enc compatible with ASCII/UTF !!! '
'Tomcat','Tomcat','Tomcat','/*  Not yet implemented or not (easily) possible to implement  */'
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @return TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param listenerClass TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat',"//  Shouldn't happen, but let's play nice... "
'Tomcat','Tomcat','Tomcat','//  XXX *could* move EL-syntax validation here... (sb) '
'Tomcat','Tomcat','Tomcat','//  TODO - configure filter rules from Ant rather then system properties '
'Tomcat','Tomcat','Tomcat','/*      * Many calls to SSL methods do not check the last error. Those that do     * check the last error need to ensure that any previously ignored error is     * cleared prior to the method call else errors may be falsely reported.     *     * TODO: Check last error after every call to an SSL method and respond     *       appropriately.      */'
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param <T> TODO     * @param c TODO     * @return TODO     * @throws ServletException TODO     * @throws UnsupportedOperationException    If called from a     *    {@link ServletContextListener#contextInitialized(ServletContextEvent)}     *    method of a {@link ServletContextListener} that was not defined in a     *    web.xml file, a web-fragment.xml file nor annotated with     *    {@link javax.servlet.annotation.WebListener}. For example, a     *    {@link ServletContextListener} defined in a TLD would not be able to     *    use this method.     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','//  TODO: Tests for over-sized frames. Better located in tests for section 6? '
'Tomcat','Tomcat','Tomcat','//  TODO Handle remove also work dir content !   Stop the context first to be nicer '
'Tomcat','Tomcat','Tomcat','//  cheap hack to return an empty hash '
'Tomcat','Tomcat','Tomcat',"//  XXX used only for headers - shouldn't be stored here. "
'Tomcat','Tomcat','Tomcat','//  FIXME: Implement SSL environment variables'
'Tomcat','Tomcat','Tomcat','//  TODO: Description for init-param is ignored'
'Tomcat','Tomcat','Tomcat','//  UTF-16, big-endian, no BOM   (or could turn out to be UCS-2...   REVISIT: What should this be? '
'Tomcat','Tomcat','Tomcat','//  TODO is this case possible? (see it a old Server 5.0 impl) '
'Tomcat','Tomcat','Tomcat','//  TODO: Should support multiple description elements with language '
'Tomcat','Tomcat','Tomcat',"//  TODO What if the connection string contains a 'user' or 'password' query parameter but that connection string is not in a legal URL format? "
'Tomcat','Tomcat','Tomcat','/*      * Not in the queue, currently being tested for possible eviction. An     * attempt to borrow the object was made while being tested which removed it     * from the queue. It should be returned to the head of the queue once     * eviction testing completes.     * TODO: Consider allocating object and ignoring the result of the eviction     *       test.      */'
'Tomcat','Tomcat','Tomcat','//  FIXME: Add transfer encoding header '
'Tomcat','Tomcat','Tomcat','/*      * Tomcat requires that the base directory is set because the defaults for     * a number of other locations, such as the work directory, are derived from     * the base directory. This should be the first method called.     * <p>     * If this method is not called then Tomcat will attempt to use these     * locations in the following order:     * <ol>     *  <li>if set, the catalina.base system property</li>     *  <li>if set, the catalina.home system property</li>     *  <li>The user.dir system property (the directory where Java was run from)     *      where a directory named tomcat.$PORT will be created. $PORT is the     *      value configured via {@link #setPort(int)} which defaults to 8080 if     *      not set</li>     * </ol>     * The user should ensure that the file permissions for the base directory     * are appropriate.     * <p>     * TODO: disable work dir if not needed ( no jsp, etc ).     *     * @param basedir The Tomcat base folder on which all others will be derived      */'
'Tomcat','Tomcat','Tomcat','//  XXX Eliminate redundant fields !!!   ( both header and in special fields ) '
'Tomcat','Tomcat','Tomcat','//  Logging credentials could be a security concern but they are   invalid and that is probably a bigger problem '
'Tomcat','Tomcat','Tomcat','/*          * XXX This is a bit silly, but we want to have start and stop time and         * duration consistent. It would be better to keep start and stop         * simply in the request and/or response object and remove time         * (duration) from the interface.          */'
'Tomcat','Tomcat','Tomcat','//  Leading zero in non-zero octet. Not valid (ambiguous). '
'Tomcat','Tomcat','Tomcat',"/*  * All-to-all replication for a hash map implementation. Each node in the cluster will carry an identical * copy of the map.<br><br> * This map implementation doesn't have a background thread running to replicate changes. * If you do have changes without invoking put/remove then you need to invoke one of the following methods: * <ul> * <li><code>replicate(Object,boolean)</code> - replicates only the object that belongs to the key</li> * <li><code>replicate(boolean)</code> - Scans the entire map for changes and replicates data</li> *  </ul> * the <code>boolean</code> value in the <code>replicate</code> method used to decide * whether to only replicate objects that implement the <code>ReplicatedMapEntry</code> interface * or to replicate all objects. If an object doesn't implement the <code>ReplicatedMapEntry</code> interface * each time the object gets replicated the entire object gets serialized, hence a call to <code>replicate(true)</code> * will replicate all objects in this map that are using this node as primary. * * <br><br><b>REMEMBER TO CALL <code>breakdown()</code> or <code>finalize()</code> * when you are done with the map to avoid memory leaks.</b><br><br> * TODO implement periodic sync/transfer thread<br> * TODO memberDisappeared, should do nothing except change map membership *       by default it relocates the primary objects * * @param <K> The type of Key * @param <V> The type of Value  */"
'Tomcat','Tomcat','Tomcat','//  Hard coded for now. Consider making this optional. At Valve level or   page level? '
'Tomcat','Tomcat','Tomcat','/*              * This method is slightly ugly; c\'est la vie.             * "You cannot stop [ugliness], you can only hope to contain [it]"             * (apologies to Marv Albert regarding MJ)              */'
'Tomcat','Tomcat','Tomcat','//  The socket write buffer capacity is socket.appWriteBufSize   TODO This only matters when using TLS. For non-TLS connections it        should be possible to write the ByteBuffer in a single write '
'Tomcat','Tomcat','Tomcat','//  note by slaurent : quite oddly threadPoolExecutor.setCorePoolSize   checks that queue.remainingCapacity()==0. I did not understand   why, but to get the intended effect of waking up idle threads, I   temporarily fake this condition. '
'Tomcat','Tomcat','Tomcat',"//  When running the test on Java 9, one or more URLs to jimage files may   be returned. By setting the scanAllFiles option, a callback will be   generated for these files which in turn will mean the number of URLs   and the number of call backs will agree and this test will pass.   There is a TODO in StandardJarScanner to add 'proper' Java 9 support. "
'Tomcat','Tomcat','Tomcat','/*  * * @since Servlet 3.0 * TODO SERVLET3 - Add comments  */'
'Tomcat','Tomcat','Tomcat','//  TODO: This class could either extend ByteBuffer, or better a ByteBuffer   inside this way it could provide the search/etc on ByteBuffer, as a helper. '
'Tomcat','Tomcat','Tomcat','//  Related to DBCP-212   Driver manager does not sync loading of drivers that use the service   provider interface. This will cause issues is multi-threaded   environments. This hack makes sure the drivers are loaded before   DBCP tries to use them. '
'Tomcat','Tomcat','Tomcat',"/*  * Filter that attempts to force MS WebDAV clients connecting on port 80 to use * a WebDAV client that actually works. Other workarounds that might help * include: * <ul> *   <li>Specifying the port, even if it is port 80, when trying to *       connect.</li> *   <li>Cancelling the first authentication dialog box and then trying to *       reconnect.</li> * </ul> * * Generally each different version of the MS client has a different set of * problems. * <p> * TODO: Update this filter to recognise specific MS clients and apply the *       appropriate workarounds for that particular client * <p> * As a filter, this is configured in web.xml like any other Filter. You usually * want to map this filter to whatever your WebDAV servlet is mapped to. * <p> * In addition to the issues fixed by this Filter, the following issues have * also been observed that cannot be fixed by this filter. Where possible the * filter will add an message to the logs. * <p> * XP x64 SP2 (MiniRedir Version 3790) * <ul> *   <li>Only connects to port 80</li> *   <li>Unknown issue means it doesn't work</li> * </ul>  */"
'Tomcat','Tomcat','Tomcat',"//  TODO: close() may block if the remote endpoint doesn't read the data   (eventually there will be a TimeoutException). However, this method   (sendMessage) is intended to run asynchronous code and shouldn't   block. Otherwise it would temporarily stop processing of messages   from other clients.   Maybe call this method on another thread.   Note that when this method is called, the RemoteEndpoint.Async   is still in the process of sending data, so there probably should   be another way to abort the Websocket connection.   Ideally, there should be some abort() method that cancels the   connection immediately... "
'Tomcat','Tomcat','Tomcat',"/*              * The setting of isELIgnored changes the behaviour of the parser             * in subtle ways. To add to the 'fun', isELIgnored can be set in             * any file that forms part of the translation unit so setting it             * in a file included towards the end of the translation unit can             * change how the parser should have behaved when parsing content             * up to the point where isELIgnored was set. Arghh!             * Previous attempts to hack around this have only provided partial             * solutions. We now use two passes to parse the translation unit.             * The first just parses the directives and the second parses the             * whole translation unit once we know how isELIgnored has been set.             * TODO There are some possible optimisations of this process.              */"
'Tomcat','Tomcat','Tomcat','//  Not ideal. This will indicate that data is available which should   trigger a read which in turn will trigger another IOException and   that one can be thrown. '
'Tomcat','Tomcat','Tomcat','//  TODO: Invalid frames for each of the remaining states '
'Tomcat','Tomcat','Tomcat','/*      * disconnect     *     * TODO Implement this org.apache.catalina.tribes.transport.DataSender method      */'
'Tomcat','Tomcat','Tomcat','//  UCS-4, unusual octet order (2143)   REVISIT: What should this be? '
'Tomcat','Tomcat','Tomcat','//  XXX - no need to generate temporary variable here '
'Tomcat','Tomcat','Tomcat','//  XXX - Fixed a bug here - value used to be output   inline, which is only okay if value is not an EL   expression. Also, key/value pairs for the   embed tag were not being generated correctly.   Double check that this is now the correct behavior. '
'Tomcat','Tomcat','Tomcat','//  Dummy implementation '
'Tomcat','Tomcat','Tomcat','/*      * TODO SERVLET3 - Add comments     * @param wrappedType The class to compare to the class of the wrapped     *                    request     * @return <code>true</code> if the request wrapped by this wrapper (or     *         series of wrappers) is the same type as the supplied type,     *         otherwise <code>false</code>     * @since Servlet 3.0      */'
'Tomcat','Tomcat','Tomcat','// create the map to hold our stats  however TODO we need to improve the eviction  selection '
'Tomcat','Tomcat','Tomcat','//  TODO: Consider implications of SSO cookies'
'Zookeeper','Zookeeper','Zookeeper','//  BUG: Grizzly needs a doc root if you are going to register multiple adapters '
'Zookeeper','Zookeeper','Zookeeper','//  This is likely a problem, it means that file reloading is broken, probably because the   directory we are watching was deleted or otherwise became inaccessible (unmounted, permissions   changed, ???).   For now, we log an error and exit the watcher thread. '
'Zookeeper','Zookeeper','Zookeeper','//  FIXME this was originally 5 seconds, but realistically, on random/slow/virt hosts, there is no way to guarantee this '
'Zookeeper','Zookeeper','Zookeeper','//  This is a bit weird but we need to return the address and the number of   bytes (to distinguish between IPv4 and IPv6 '
'Zookeeper','Zookeeper','Zookeeper','//  a bit of a hack, but delete(/) will never succeed and ensures   that the same semantics are maintained '
'Zookeeper','Zookeeper','Zookeeper',"//  Everything is a go, simply start counting the ticks   WARNING: I couldn't find any wait statement on a synchronized   block that would be notified by this notifyAll() call, so   I commented it out  synchronized (this) {      notifyAll();  }   We ping twice a tick, so we only update the tick every other "
'Zookeeper','Zookeeper','Zookeeper',"//  TODO(ivmaykov): Not sure if cnxn can be null here. It becomes null if channelInactive()   or exceptionCaught() trigger, but it's unclear to me if userEventTriggered() can run   after either of those. Check for null just to be safe ... "
'Zookeeper','Zookeeper','Zookeeper','//  could not create tmp directory to hold JAAS conf file : test will   fail now. '
'Zookeeper','Zookeeper','Zookeeper','//  FIXME this test is Assert.failing due to client close race condition fixing in separate patch for ZOOKEEPER-63      /**       * this test checks to see if the sessionid that was created for the       * first zookeeper client can be reused for the second one immidiately       * after the first client closes and the new client resues them.       * @throws IOException       * @throws InterruptedException       * @throws KeeperException       */ '
'Zookeeper','Zookeeper','Zookeeper','//  TODO: need to tune the default value of thread size '
'Zookeeper','Zookeeper','Zookeeper','//  TODO refactor QuorumBase to be special case of this '
'Zookeeper','Zookeeper','Zookeeper',"//  This might not be 100% right, but it's only used for printing   connection info in the netty implementation so it's probably ok. "
'Zookeeper','Zookeeper','Zookeeper','//  Problem 2: Before fix, after session close the ephemeral node   was not getting deleted. But now after the fix after session close '
'Zookeeper','Zookeeper','Zookeeper',"/*          * Observer should write to disk, so that the it won't request         * too old txn from the leader which may lead to getting an entire         * snapshot.         *         * However, this may degrade performance as it has to write to disk         * and do periodic snapshot which may double the memory requirements          */"
'Zookeeper','Zookeeper','Zookeeper','//  TODO - investigate why reconfig makes qps null. '
'Zookeeper','Zookeeper','Zookeeper','//  TODO: if zks.processPacket() is changed to take a ByteBuffer[],   we could implement zero-copy queueing. '
'Zookeeper','Zookeeper','Zookeeper','//  Note that this performance assumption might not hold true for architectures other than x86_64. '
'Zookeeper','Zookeeper','Zookeeper',"//  Note: the new buffer size is a hint and socket implementation   is free to ignore it, so we don't verify that we get back the   same value. "
'Zookeeper','Zookeeper','Zookeeper','// TODO should this be synchronized? '
'Zookeeper','Zookeeper','Zookeeper','// TODO: use a factory rather than a switch '
'Zookeeper','Zookeeper','Zookeeper','//  XXX No need to do anything '
'Zookeeper','Zookeeper','Zookeeper','//  Session has not been re-validated ! '
'Zookeeper','Zookeeper','Zookeeper','//  It is sad that isro and srvr are used by ZooKeeper itself. Need fix this   before deprecating 4lw. '
'Zookeeper','Zookeeper','Zookeeper','//  TODO we need to figure out the security requirement for this! '
'Zookeeper','Zookeeper','Zookeeper','//  Problem 1: Follower had one extra ephemeral node /e1 '
'Zookeeper','Zookeeper','Zookeeper','//  TODO: in the future, serverId should be validated for all cases, not just the extendedEphemeralTypesEnabled case   TODO: however, for now, it would be too disruptive '
'Zookeeper','Zookeeper','Zookeeper','/*              * Since requests are processed in order, we better get a response             * to the first request!              */'
'Zookeeper','Zookeeper','Zookeeper','//  this is ugly, you have a better way speak up '
'Zookeeper','Zookeeper','Zookeeper','//  An authentication error occurred during authentication with the Zookeeper Server. '
'Zookeeper','Zookeeper','Zookeeper','/*  TODO: (br33d) we should either put a ConcurrentHashMap on restore()             *       or use Map on save()  */'
'Zookeeper','Zookeeper','Zookeeper',"//  TODO: this doesn't use a quorum verifier "
'Zookeeper','Zookeeper','Zookeeper',"/*  a mocked ZK class that doesn't do client-side verification     * before/after calling removeWatches  */"
'Zookeeper','Zookeeper','Zookeeper',"//  this shouldn't be necessary (wrapping data with string)   but without it there are problems on the server - ie it   hangs for 30 seconds and doesn't get the data.   TODO investigate "
'Zookeeper','Zookeeper','Zookeeper','//  Try to provide hints to use about what went wrong so they can fix their configuration.   TODO: introspect about e: look for GSS information. '
'Zookeeper','Zookeeper','Zookeeper',"// FIXME: I don't want to have to serialize it here and then         immediately deserialize in next processor. But I'm         not sure how else to get the txn stored into our list. "
'Zookeeper','Zookeeper','Zookeeper','// ////////////////   these internal classes are public, but should not generally be referenced. '
'Zookeeper','Zookeeper','Zookeeper',"//  FIXME: IPv6 is not supported. Using something like Guava's HostAndPort          parser would be good. "
'Zookeeper','Zookeeper','Zookeeper','//  this is really a programmatic error and not something that can   happen at runtime '
'Zookeeper','Zookeeper','Zookeeper',"//  We add backwards since we are pushing into the front   Only send if there's a pending watch   TODO: here we have the only remaining use of zooKeeper in   this class. It's to be eliminated! "
'Zookeeper','Zookeeper','Zookeeper','//  TODO: Rather than checking a disjunction here, should be a single member   variable or method in this class to determine whether the client is   configured to use SASL. (see also ZOOKEEPER-1455). '
'Zookeeper','Zookeeper','Zookeeper','//  TODO: maybe we should flush in the loop above every N packets/bytes?   But, how do we determine the right value for N ... '
'Zookeeper','Zookeeper','Zookeeper','//  Uh oh.  We need to upgrade before we can proceed. '
'Zookeeper','Zookeeper','Zookeeper','//  TODO: exit server at this point(?) '
'Zookeeper','Zookeeper','Zookeeper','//  Multiple bad arguments '
'Zookeeper','Zookeeper','Zookeeper',"//  XXX this doesn't need to be volatile! (Should probably be final) "
'Zookeeper','Zookeeper','Zookeeper','//  test will still fail even though we just log/ignore '
'Zookeeper','Zookeeper','Zookeeper','//  FIXME ignore for now '
'Zookeeper','Zookeeper','Zookeeper','//  XXX We really should NOT need this!!!! '
'Zookeeper','Zookeeper','Zookeeper','//  TODO: should depend on zoo.cfg specified mechs, but if'
'Zookeeper','Zookeeper','Zookeeper','//  XXX hack '
'Zookeeper','Zookeeper','Zookeeper','//  not sure about 3rd arg..what is it? '
'Zookeeper','Zookeeper','Zookeeper','// FIXME: need way to more cleanly serialize/deserialize exceptions '
'Zookeeper','Zookeeper','Zookeeper','//  small chance that an unexpected message was delivered    after this check, but we would catch that next time '
'Zookeeper','Zookeeper','Zookeeper','//  Warning: this will reset the x509Util '
'Zookeeper','Zookeeper','Zookeeper','//  a little hacky way to detect key type, but it works '
'Zookeeper','Zookeeper','Zookeeper',"/*              * The following sequence of code is stupid! You would think that             * only sock.close() is needed, but alas, it doesn't work that way.             * If you just do sock.close() there are cases where the socket             * doesn't actually close...              */"
'Zookeeper','Zookeeper','Zookeeper','//  todo not every tmp directory needs this file '
'Zookeeper','Zookeeper','Zookeeper',"//  XXX This shouldn't be needed, but just in case "
'Zookeeper','Zookeeper','Zookeeper','/*  * A bunch of constants. * TODO: will get rid of it eventually.  */'
'Zookeeper','Zookeeper','Zookeeper','//  TODO: can not name this method getState since Thread.getState()   already exists   It would be cleaner to make class SendThread an implementation of   Runnable '
'Zookeeper','Zookeeper','Zookeeper',"//  handle below: might be harmless if the user doesn't intend to use JAAS authentication. "
'Zookeeper','Zookeeper','Zookeeper','//  Should never call this: SASL authentication is negotiated at session initiation.   TODO: consider substituting current implementation of direct ClientCnxn manipulation with   a call to this method (SASLAuthenticationProvider:handleAuthentication()) at session initiation. '
'Zookeeper','Zookeeper','Zookeeper',"//  Note, we may exceed our max length by a bit when we add the last   watch in the batch. This isn't ideal, but it makes the code simpler. "
